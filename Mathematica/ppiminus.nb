(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    707646,      13687]
NotebookOptionsPosition[    704675,      13598]
NotebookOutlinePosition[    705015,      13613]
CellTagsIndexPosition[    704972,      13610]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"simplifiedTable2", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"First", "/@", "rs"}], "]"}], ",", 
       RowBox[{"Mean", "[", 
        RowBox[{"Second", "/@", "rs"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rs", ",", 
       RowBox[{"tableTotalppibar", "//", 
        RowBox[{"inGroupsOf", "[", "2", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simplifiedTable4", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"First", "/@", "rs"}], "]"}], ",", 
       RowBox[{"Mean", "[", 
        RowBox[{"Second", "/@", "rs"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rs", ",", 
       RowBox[{"tableTotalppibar", "//", 
        RowBox[{"inGroupsOf", "[", "4", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simplifiedTable6", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"First", "/@", "rs"}], "]"}], ",", 
       RowBox[{"Mean", "[", 
        RowBox[{"Second", "/@", "rs"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rs", ",", 
       RowBox[{"tableTotalppibar", "//", 
        RowBox[{"inGroupsOf", "[", "6", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simplifiedTable10", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"First", "/@", "rs"}], "]"}], ",", 
       RowBox[{"Mean", "[", 
        RowBox[{"Second", "/@", "rs"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"rs", ",", 
       RowBox[{"tableTotalppibar", "//", 
        RowBox[{"inGroupsOf", "[", "10", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7564524034020853`*^9, 3.7564525572694397`*^9}, {
  3.7564525994050837`*^9, 3.756452669243449*^9}, {3.756452704235084*^9, 
  3.75645270835478*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simplifiedTable10", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7564528305899878`*^9, 3.756452848220092*^9}}],

Cell[BoxData["48"], "Output",
 CellChangeTimes->{{3.756452833691313*^9, 3.756452848494172*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"evenSpacedTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"simplifiedTable10", ",", "x", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.15", ",", "3.89", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.89", "-", "1.15"}], ")"}], "/", "120"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756452851083734*^9, 3.756452961029393*^9}, {
   3.756453101747655*^9, 3.756453208256843*^9}, {3.75645641495564*^9, 
   3.756456419394985*^9}, 3.756717217597089*^9}],

Cell[CellGroupData[{

Cell[BoxData["simplifiedTable10"], "Input",
 CellChangeTimes->{{3.75645292458215*^9, 3.756452927094051*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.1495144794138903`", ",", "20.079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1798482426769044`", ",", "39.626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.198262862772615`", ",", "55.765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2134694383249474`", ",", "67.46000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2242861258782227`", ",", "68.256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2363838553541173`", ",", "64.28999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2490977788712372`", ",", "56.852999999999994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2593765819144964`", ",", "50.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.268747686072504`", ",", "44.106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2819048289298869`", ",", "37.986000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3001271896136841`", ",", "31.567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3179914967254227`", ",", "28.660999999999994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3366781349722523`", ",", "26.333999999999996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3599471682435198`", ",", "26.625999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3865650206273965`", ",", "28.264`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4096071435075754`", ",", "28.731`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.432755981492498`", ",", "30.794`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4604505907412728`", ",", "34.748000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4819641350861015`", ",", "40.758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4935846002879065`", ",", "44.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5075551649268761`", ",", "45.869`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5221390039423628`", ",", "45.69500000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5404995794571086`", ",", "41.674`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.559355447911909`", ",", "37.722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5845218049492`", ",", "35.92`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6069449009257135`", ",", "38.767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.630851180716758`", ",", "45.957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6504232360279734`", ",", "53.107000000000006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6683335844389209`", ",", "58.16300000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.685436475840541`", ",", "57.814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.706726735562052`", ",", "52.004999999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7280065838347352`", ",", "44.48199999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.757886576487651`", ",", "39.04`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7857533038598004`", ",", "36.606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8211809857553356`", ",", "35.982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8578595205282014`", ",", "36.318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8919931079497743`", ",", "36.013999999999996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9351344660987178`", ",", "35.196000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.9827544840232565`", ",", "34.299`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.078853393383416`", ",", "35.06`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1741124177639684`", ",", "35.986000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3338657153685225`", ",", "34.332499999999996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5138260265278882`", ",", "32.4089`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7616988047562305`", ",", "31.29`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.011389064615941`", ",", "30.075599999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.220656012048317`", ",", "29.1219`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.463749264154844`", ",", "28.305600000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8975798958072887`", ",", "27.595000000000006`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.756452927412134*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tableTotalppibar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pLabInv", "[", 
        RowBox[{
         RowBox[{"m0", "@", "pi"}], ",", 
         RowBox[{"m0", "@", "N938"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.09875", ",", "8.8700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.16000", ",", "13.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.16520", ",", "15.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.17600", ",", "17.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.18101", ",", "21.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.18900", ",", "21.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.18980", ",", "23.120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.19100", ",", "22.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.20400", ",", "28.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.20600", ",", "29.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.20930", ",", "31.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21220", ",", "33.740"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21870", ",", "38.440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21885", ",", "33.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.22000", ",", "38.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.22200", ",", "39.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.22740", ",", "44.480"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.23063", ",", "42.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.23413", ",", "46.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.23600", ",", "47.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.23645", ",", "52.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.23800", ",", "50.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.24330", ",", "55.350"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.24684", ",", "48.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25100", ",", "58.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25300", ",", "59.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25371", ",", "55.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25599", ",", "60.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26021", ",", "56.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26168", ",", "62.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26460", ",", "67.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26600", ",", "66.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26800", ",", "68.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27040", ",", "70.260"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27071", ",", "67.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27520", ",", "63.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27536", ",", "67.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27600", ",", "71.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27632", ",", "62.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27920", ",", "70.740"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.28100", ",", "71.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.28285", ",", "67.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.28300", ",", "72.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.28303", ",", "66.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.28637", ",", "65.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29033", ",", "67.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29100", ",", "70.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29260", ",", "69.760"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29303", ",", "63.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29552", ",", "67.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29600", ",", "68.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29800", ",", "68.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30242", ",", "64.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30297", ",", "64.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30407", ",", "63.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30600", ",", "65.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30760", ",", "63.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31100", ",", "62.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31293", ",", "59.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31300", ",", "62.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31811", ",", "58.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31930", ",", "59.430"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.31941", ",", "57.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32050", ",", "64.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32330", ",", "55.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32594", ",", "55.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32700", ",", "55.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32800", ",", "56.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32812", ",", "54.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32848", ",", "52.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33138", ",", "52.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33367", ",", "50.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33571", ",", "50.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33728", ",", "48.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33788", ",", "52.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34074", ",", "49.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34100", ",", "48.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34220", ",", "58.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34300", ",", "48.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34436", ",", "44.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34500", ",", "47.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34797", ",", "44.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34867", ",", "46.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.34985", ",", "48.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35144", ",", "42.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35298", ",", "43.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35491", ",", "43.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35600", ",", "42.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35800", ",", "41.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35853", ",", "41.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.36201", ",", "39.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.36549", ",", "39.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.36911", ",", "38.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.36950", ",", "38.460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37100", ",", "38.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37227", ",", "38.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37274", ",", "36.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37300", ",", "38.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37812", ",", "35.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.38176", ",", "36.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.38351", ",", "33.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.38600", ",", "33.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.38890", ",", "31.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.39430", ",", "32.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.39971", ",", "31.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40100", ",", "31.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40512", ",", "30.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40626", ",", "33.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40640", ",", "29.970"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.41055", ",", "29.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.41500", ",", "30.830"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.41600", ",", "29.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.41612", ",", "28.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42156", ",", "28.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42407", ",", "30.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42716", ",", "28.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42736", ",", "27.890"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.43000", ",", "27.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.43262", ",", "27.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.43500", ",", "28.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.43809", ",", "26.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.44311", ",", "26.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.44312", ",", "26.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.44500", ",", "27.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.44935", ",", "26.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.45500", ",", "26.730"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.45881", ",", "25.980"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.46000", ",", "26.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.46065", ",", "24.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.46925", ",", "26.730"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.47400", ",", "26.360"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.47500", ",", "26.180"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.47723", ",", "25.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.47968", ",", "25.980"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.48900", ",", "26.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49008", ",", "27.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49320", ",", "26.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49500", ",", "26.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49900", ",", "27.040"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49903", ",", "28.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.50047", ",", "27.230"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.51085", ",", "26.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.51300", ",", "27.490"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.51500", ",", "26.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.53155", ",", "27.570"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.53500", ",", "27.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.53625", ",", "34.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54188", ",", "28.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54452", ",", "29.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54705", ",", "28.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54808", ",", "29.440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54911", ",", "27.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.55000", ",", "28.520"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.55500", ",", "27.880"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.56251", ",", "27.150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.56500", ",", "29.360"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57281", ",", "27.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57500", ",", "28.810"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57600", ",", "29.550"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57630", ",", "32.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57796", ",", "29.110"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.58310", ",", "29.310"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.58765", ",", "30.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.59132", ",", "29.960"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.59338", ",", "31.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.59500", ",", "30.960"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.60878", ",", "29.910"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.61400", ",", "30.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.61742", ",", "34.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.62200", ",", "32.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.62416", ",", "30.710"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.63200", ",", "32.140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.63686", ",", "35.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.63892", ",", "34.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.63952", ",", "33.340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.64259", ",", "34.980"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65000", ",", "34.020"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65100", ",", "36.650"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65486", ",", "34.840"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65820", ",", "40.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.66400", ",", "39.590"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.66800", ",", "37.560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.67019", ",", "37.790"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.67300", ",", "40.690"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.67530", ",", "37.460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68200", ",", "43.560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68300", ",", "46.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68487", ",", "43.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68551", ",", "39.740"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68700", ",", "41.590"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68891", ",", "44.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69000", ",", "41.880"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69265", ",", "44.820"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69300", ",", "45.180"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69367", ",", "42.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69571", ",", "42.990"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69911", ",", "49.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.70081", ",", "42.970"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.70200", ",", "45.680"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.70500", ",", "44.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71100", ",", "46.310"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71326", ",", "45.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71500", ",", "44.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71610", ",", "45.550"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71711", ",", "45.070"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71800", ",", "46.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71832", ",", "49.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.72300", ",", "45.460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.72650", ",", "45.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73035", ",", "44.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73100", ",", "45.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73646", ",", "45.430"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73866", ",", "45.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73981", ",", "50.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.74000", ",", "44.140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.74100", ",", "44.590"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.74257", ",", "45.290"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.74300", ",", "44.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75681", ",", "44.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75914", ",", "48.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.76000", ",", "41.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.76500", ",", "41.620"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.76611", ",", "44.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77002", ",", "44.470"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77400", ",", "40.380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77500", ",", "41.540"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77714", ",", "39.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77800", ",", "38.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77944", ",", "45.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.78847", ",", "39.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.79000", ",", "38.220"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.79100", ",", "36.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.79237", ",", "39.160"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.79971", ",", "42.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.80400", ",", "36.670"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.80760", ",", "37.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.81200", ",", "36.480"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.81500", ",", "35.730"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.81800", ",", "36.170"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.81996", ",", "39.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.82400", ",", "35.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.83300", ",", "35.120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84000", ",", "35.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84326", ",", "35.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84500", ",", "36.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84715", ",", "34.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85100", ",", "36.090"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85952", ",", "37.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.86500", ",", "36.660"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.86949", ",", "36.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.87000", ",", "38.640"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.87300", ",", "38.450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.87363", ",", "37.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.87754", ",", "37.430"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.88300", ",", "40.230"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.89000", ",", "39.940"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.89387", ",", "37.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.89779", ",", "37.380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.90100", ",", "41.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.90386", ",", "39.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.90700", ",", "44.410"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.91500", ",", "44.210"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.91810", ",", "39.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.92020", ",", "43.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.92611", ",", "40.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.93100", ",", "49.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.93900", ",", "51.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94000", ",", "50.290"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94041", ",", "48.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94429", ",", "47.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94532", ",", "46.370"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94835", ",", "48.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.95455", ",", "50.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.96147", ",", "55.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.96500", ",", "55.560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.96553", ",", "48.130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.96555", ",", "54.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.96958", ",", "55.130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.97100", ",", "57.780"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.98070", ",", "60.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.98574", ",", "53.320"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.98800", ",", "59.880"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99000", ",", "58.540"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99376", ",", "58.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99584", ",", "54.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99600", ",", "60.090"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99681", ",", "56.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99786", ",", "59.220"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.00094", ",", "61.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.00200", ",", "60.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.01500", ",", "58.090"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.01600", ",", "59.750"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.01603", ",", "56.760"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.01610", ",", "57.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.02007", ",", "58.460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.02114", ",", "60.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.02700", ",", "57.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04000", ",", "55.180"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04019", ",", "59.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04420", ",", "54.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04529", ",", "55.170"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04832", ",", "55.020"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.05000", ",", "53.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.06045", ",", "54.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.06500", ",", "50.220"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.06940", ",", "50.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.07354", ",", "50.670"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.07500", ",", "49.750"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.07555", ",", "48.820"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.08158", ",", "51.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.08900", ",", "46.690"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.09000", ",", "45.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.09572", ",", "45.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.09880", ",", "44.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.10100", ",", "44.410"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.10173", ",", "48.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.10277", ",", "44.840"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.11500", ",", "41.410"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.11588", ",", "41.520"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.12700", ",", "41.020"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.14000", ",", "39.350"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.14108", ",", "42.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.14110", ",", "39.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.14510", ",", "39.540"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.15100", ",", "39.290"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.16500", ",", "37.970"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.16600", ",", "38.150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.17600", ",", "38.140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.18126", ",", "38.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.19000", ",", "37.260"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.19500", ",", "37.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.19545", ",", "36.660"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.20100", ",", "37.180"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.20144", ",", "37.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.20330", ",", "35.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.20753", ",", "35.770"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.21500", ",", "36.380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.22600", ",", "36.760"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.24000", ",", "36.120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.24175", ",", "36.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.25100", ",", "36.570"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.26500", ",", "36.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.27500", ",", "36.450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.27780", ",", "35.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.28100", ",", "36.420"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.28193", ",", "36.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.28199", ",", "35.520"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.29000", ",", "36.160"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.29608", ",", "34.450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.31200", ",", "36.560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.31500", ",", "36.230"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.32118", ",", "35.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.33200", ",", "36.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34000", ",", "36.570"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34900", ",", "36.640"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35500", ",", "36.610"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36500", ",", "36.390"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38000", ",", "36.680"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38845", ",", "35.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39000", ",", "36.130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39303", ",", "34.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39561", ",", "35.720"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39900", ",", "36.650"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40900", ",", "36.620"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41500", ",", "35.880"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42051", ",", "35.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43300", ",", "36.540"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44000", ",", "36.110"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45100", ",", "36.490"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46500", ",", "35.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47600", ",", "36.070"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49000", ",", "35.820"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49400", ",", "36.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49607", ",", "33.480"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.50088", ",", "35.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.51500", ",", "35.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.52097", ",", "35.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.53100", ",", "35.540"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.54000", ",", "34.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.54115", ",", "34.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.56500", ",", "34.390"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.57200", ",", "35.080"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.58119", ",", "34.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.59000", ",", "34.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.59548", ",", "31.810"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.60400", ",", "34.750"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.62139", ",", "34.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.62200", ",", "34.620"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.67200", ",", "34.640"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.68155", ",", "34.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.71900", ",", "34.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.75983", ",", "34.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.77300", ",", "35.080"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.78500", ",", "35.110"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.82099", ",", "34.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.82100", ",", "35.510"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.85100", ",", "35.490"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.86900", ",", "35.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.87913", ",", "34.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.91600", ",", "36.030"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.92026", ",", "35.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.95100", ",", "36.080"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.96700", ",", "36.180"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.00010", ",", "35.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.01600", ",", "36.380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.05000", ",", "36.420"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.06700", ",", "36.340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.10200", ",", "36.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.11979", ",", "35.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.16800", ",", "36.060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.21700", ",", "35.770"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.26000", ",", "35.480"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.26600", ",", "35.440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.36600", ",", "34.630"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.41400", ",", "34.350"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.47000", ",", "33.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.52000", ",", "34.055"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.52200", ",", "33.530"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.56800", ",", "33.320"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.61400", ",", "32.950"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.62000", ",", "33.468"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.66500", ",", "32.890"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.72000", ",", "33.017"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.75000", ",", "32.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.82000", ",", "32.758"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.92000", ",", "32.546"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.02000", ",", "32.411"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.10010", ",", "30.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.12000", ",", "32.299"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.15000", ",", "31.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.22000", ",", "32.174"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.32000", ",", "31.973"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.40000", ",", "31.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.42000", ",", "31.746"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.52000", ",", "31.569"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.62000", ",", "31.334"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.72000", ",", "31.064"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.82000", ",", "30.901"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.90000", ",", "30.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.93000", ",", "30.739"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.03000", ",", "30.519"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.10000", ",", "30.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.13000", ",", "30.363"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.23000", ",", "30.170"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.33000", ",", "30.058"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.43000", ",", "29.902"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.50000", ",", "30.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.53000", ",", "29.744"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.63000", ",", "29.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.63747", ",", "29.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.73000", ",", "29.487"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.83000", ",", "29.360"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.90000", ",", "29.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.93000", ",", "29.237"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.95000", ",", "29.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.03000", ",", "29.120"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.13000", ",", "28.988"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.23000", ",", "28.881"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.33000", ",", "28.766"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.44000", ",", "28.680"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.54000", ",", "28.586"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.64000", ",", "28.450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.74000", ",", "28.355"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.75000", ",", "29.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.84000", ",", "28.256"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.94000", ",", "28.149"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.00000", ",", "28.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.04000", ",", "28.072"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.24000", ",", "27.884"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.44000", ",", "27.704"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.64000", ",", "27.518"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.65000", ",", "27.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.84000", ",", "27.356"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.94000", ",", "27.236"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.00000", ",", "28.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.19863", ",", "31.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.00000", ",", "27.640"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.05000", ",", "28.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9.20000", ",", "25.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10.00000", ",", "25.500"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tableElasticppibar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pLabInv", "[", 
        RowBox[{
         RowBox[{"m0", "@", "pi"}], ",", 
         RowBox[{"m0", "@", "N938"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.09875", ",", "1.8470"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.14956", ",", "2.9000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21648", ",", "9.6000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.21885", ",", "11.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.22828", ",", "12.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.24684", ",", "17.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25599", ",", "20.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.26733", ",", "21.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27071", ",", "22.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.27520", ",", "21.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.29303", ",", "22.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.30297", ",", "26.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.32050", ",", "28.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33138", ",", "19.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33571", ",", "16.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.33788", ",", "17.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35052", ",", "15.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35190", ",", "20.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.37800", ",", "12.290"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.38261", ",", "12.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40400", ",", "10.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40626", ",", "13.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.40800", ",", "10.410"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42188", ",", "11.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.42700", ",", "9.0000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.44888", ",", "10.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.45200", ",", "8.9000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.47100", ",", "9.2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.49008", ",", "10.420"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.50900", ",", "9.1500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.52300", ",", "9.8000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.52845", ",", "11.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.53155", ",", "11.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54700", ",", "9.9900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.54911", ",", "13.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.55600", ",", "10.240"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.56500", ",", "10.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.57281", ",", "12.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.58200", ",", "16.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.58600", ",", "11.340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.60900", ",", "12.860"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.61390", ",", "13.710"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.61698", ",", "13.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.62500", ",", "12.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.64054", ",", "14.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65700", ",", "13.920"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65793", ",", "16.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65800", ",", "15.320"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.67530", ",", "16.980"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68300", ",", "18.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.68700", ",", "17.070"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69061", ",", "18.860"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.69900", ",", "19.070"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.70692", ",", "19.950"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.71399", ",", "20.500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.72628", ",", "19.870"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73100", ",", "18.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.73257", ",", "16.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.74257", ",", "19.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75000", ",", "19.910"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.76189", ",", "18.940"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77500", ",", "17.560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77714", ",", "17.190"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.77827", ",", "16.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.79800", ",", "14.910"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.82586", ",", "15.750"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.83803", ",", "14.900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84800", ",", "13.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.84954", ",", "14.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85400", ",", "14.470"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.87466", ",", "14.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.89417", ",", "25.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.90386", ",", "14.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.91903", ",", "14.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.92400", ",", "18.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.94349", ",", "21.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.95500", ",", "21.620"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.95947", ",", "18.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.97900", ",", "23.160"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.98977", ",", "26.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99500", ",", "26.420"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.99988", ",", "22.200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.00290", ",", "26.580"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.00400", ",", "24.220"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.01704", ",", "27.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.02400", ",", "26.300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.03016", ",", "18.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04200", ",", "26.010"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04220", ",", "24.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.04529", ",", "26.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.06700", ",", "23.650"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.08000", ",", "25.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.08059", ",", "19.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.08800", ",", "19.480"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.09068", ",", "20.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.09111", ",", "14.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.10600", ",", "17.950"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.12091", ",", "19.820"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.12339", ",", "17.700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.12500", ",", "18.290"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.13099", ",", "22.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.16400", ",", "13.660"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.16500", ",", "15.010"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.17400", ",", "15.730"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.21400", ",", "12.450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.21659", ",", "14.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.23000", ",", "14.600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.25000", ",", "13.310"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.26000", ",", "13.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.27900", ",", "12.800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.32300", ",", "13.090"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.33630", ",", "12.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.33900", ",", "12.627"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34100", ",", "12.730"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34200", ",", "12.380"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34300", ",", "13.507"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34500", ",", "12.714"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34700", ",", "12.987"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.34900", ",", "13.401"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35100", ",", "13.384"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35300", ",", "12.394"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35500", ",", "12.763"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35700", ",", "12.724"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35900", ",", "12.851"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36100", ",", "12.507"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36300", ",", "12.430"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36500", ",", "12.367"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36700", ",", "12.395"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.36900", ",", "13.332"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.37100", ",", "12.491"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.37300", ",", "13.035"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.37500", ",", "12.852"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.37700", ",", "12.040"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.37900", ",", "12.673"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38000", ",", "15.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38100", ",", "12.488"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38200", ",", "12.530"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38300", ",", "12.286"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38500", ",", "12.670"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38700", ",", "12.662"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.38900", ",", "13.354"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39100", ",", "13.054"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39300", ",", "12.626"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39500", ",", "12.126"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39700", ",", "12.651"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.39900", ",", "12.956"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40100", ",", "12.606"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40300", ",", "12.361"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40500", ",", "12.340"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40700", ",", "12.091"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.40900", ",", "12.130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41100", ",", "11.937"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41300", ",", "12.712"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41500", ",", "12.478"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41700", ",", "12.510"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.41900", ",", "12.521"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42100", ",", "12.321"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42300", ",", "12.271"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42500", ",", "12.594"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42700", ",", "12.536"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.42900", ",", "12.260"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43100", ",", "12.407"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43300", ",", "12.346"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43500", ",", "12.532"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43700", ",", "12.407"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.43900", ",", "12.266"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44100", ",", "12.167"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44300", ",", "12.266"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44500", ",", "11.950"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44700", ",", "11.776"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.44900", ",", "11.907"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45100", ",", "12.042"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45300", ",", "11.786"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45500", ",", "11.568"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45700", ",", "11.246"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45900", ",", "11.767"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46100", ",", "12.017"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46300", ",", "11.754"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46500", ",", "11.413"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46700", ",", "11.436"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.46900", ",", "11.206"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47000", ",", "10.870"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47100", ",", "10.828"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47300", ",", "11.052"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47500", ",", "11.119"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47700", ",", "11.575"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.47900", ",", "11.645"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.48100", ",", "11.434"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.48300", ",", "12.639"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.48500", ",", "11.643"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.48700", ",", "11.702"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.48900", ",", "11.210"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49100", ",", "11.502"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49300", ",", "11.313"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49500", ",", "11.368"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49700", ",", "11.523"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.49900", ",", "11.163"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.50300", ",", "11.690"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.50310", ",", "10.000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.50900", ",", "10.390"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.56700", ",", "10.210"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.59000", ",", "9.6500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.60000", ",", "9.0000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.60300", ",", "9.8200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.71000", ",", "10.400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.85000", ",", "11.100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.00000", ",", "7.3400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.01000", ",", "7.9400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.10000", ",", "9.6900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.14000", ",", "9.3000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.26000", ",", "8.9100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.29000", ",", "8.5000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.70000", ",", "7.7000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.75000", ",", "7.2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.77000", ",", "7.2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.79990", ",", "7.8000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.00000", ",", "7.5700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.15000", ",", "6.1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.25000", ",", "7.3000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.65000", ",", "6.9700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.92000", ",", "6.8400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.00000", ",", "6.6200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.13000", ",", "5.6000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.16000", ",", "5.7700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.50000", ",", "6.2100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.63747", ",", "3.5000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.75000", ",", "4.7000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.95000", ",", "6.1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.00000", ",", "5.8500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.17000", ",", "5.6000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.00000", ",", "5.3000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.00000", ",", "5.1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.00000", ",", "5.0700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.90020", ",", "4.8200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9.99990", ",", "4.5900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10.8000", ",", "4.7700"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11.2000", ",", "4.4300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.0000", ",", "4.7200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15.0000", ",", "4.6200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15.9000", ",", "4.2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16.0000", ",", "4.0800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16.2000", ",", "4.3600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"17.0000", ",", "4.1100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"18.9000", ",", "4.3900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"25.2000", ",", "3.3500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"32.8200", ",", "3.2170"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"35.3900", ",", "3.5500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"40.1000", ",", "3.3200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"42.0200", ",", "3.3590"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"45.3400", ",", "3.5060"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"48.6100", ",", "3.4560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50.0000", ",", "3.4800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50.9600", ",", "3.4140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"54.7400", ",", "3.2670"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55.1000", ",", "3.0450"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"70.0000", ",", "3.3900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100.000", ",", "3.2800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.000", ",", "3.3600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"147.000", ",", "3.2400"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"175.000", ",", "3.3800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"200.000", ",", "3.3200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"205.000", ",", "3.1800"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"360.000", ",", "3.6100"}], "}"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.753188246747794*^9, 3.7531882605700073`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Totalppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", 
         RowBox[{"eCM", "\[LessEqual]", 
          RowBox[{
           RowBox[{"m0", "@", "pi"}], "+", 
           RowBox[{"m0", "@", "N938"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]Res", "[", 
          RowBox[{"N938", ",", 
           RowBox[{"1", "/", "2"}], ",", "pi", ",", 
           RowBox[{"-", "1"}], ",", "eCM"}], "]"}], ",", 
         RowBox[{"eCM", "<", "1.78"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Interpolation", "[", 
          RowBox[{"simplifiedTable4", ",", "eCM", ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
         RowBox[{"eCM", "\[LessEqual]", "3.5"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{
      RowBox[{"13.7", "*", 
       RowBox[{"eCM", "^", "0.158"}]}], "+", 
      RowBox[{"35.9", 
       RowBox[{"eCM", "^", 
        RowBox[{"-", "0.90"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Resppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"eCM", "\[LessEqual]", 
      RowBox[{
       RowBox[{"m0", "@", "pi"}], "+", 
       RowBox[{"m0", "@", "N938"}]}]}], ",", "0.", ",", 
     RowBox[{"\[Sigma]Res", "[", 
      RowBox[{"N938", ",", 
       RowBox[{"1", "/", "2"}], ",", "pi", ",", 
       RowBox[{"-", "1"}], ",", "eCM"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]FullElasticppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.", ",", 
         RowBox[{"eCM", "\[LessEqual]", 
          RowBox[{
           RowBox[{"m0", "@", "pi"}], "+", 
           RowBox[{"m0", "@", "N938"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]ResEl", "[", 
          RowBox[{"N938", ",", 
           RowBox[{"1", "/", "2"}], ",", "pi", ",", 
           RowBox[{"-", "1"}], ",", "eCM"}], "]"}], ",", 
         RowBox[{"eCM", "<", "1.75"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Interpolation", "[", 
          RowBox[{"tableElasticppibar", ",", "eCM", ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
         RowBox[{"eCM", "\[LessEqual]", "2.0"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"fitHERA", "[", 
      RowBox[{
       RowBox[{"pLab", "[", 
        RowBox[{
         RowBox[{"m0", "@", "pi"}], ",", 
         RowBox[{"m0", "@", "N938"}], ",", "eCM"}], "]"}], ",", "1.76", ",", 
       "11.2", ",", 
       RowBox[{"-", "0.64"}], ",", "0.043", ",", "0."}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]ResElasticppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"eCM", "\[LessEqual]", 
      RowBox[{
       RowBox[{"m0", "@", "pi"}], "+", 
       RowBox[{"m0", "@", "N938"}]}]}], ",", "0.", ",", 
     RowBox[{"\[Sigma]ResEl", "[", 
      RowBox[{"N938", ",", 
       RowBox[{"1", "/", "2"}], ",", "pi", ",", 
       RowBox[{"-", "1"}], ",", "eCM"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Elasticppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"eCM", "<", "1.96"}], ",", "0.", ",", 
     RowBox[{
      RowBox[{"\[Sigma]FullElasticppibar", "[", "eCM", "]"}], "-", 
      RowBox[{"\[Sigma]ResElasticppibar", "[", "eCM", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Stringppibar", "[", "eCM_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"eCM", "<", "1.8"}], ",", "0.", ",", 
     RowBox[{
      RowBox[{"\[Sigma]Totalppibar", "[", "eCM", "]"}], "-", 
      RowBox[{"\[Sigma]Elasticppibar", "[", "eCM", "]"}], "-", 
      RowBox[{"\[Sigma]Resppibar", "[", "eCM", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7531883296585703`*^9, 3.753188589067079*^9}, {
   3.753188955012188*^9, 3.753188973932149*^9}, 3.7531891624632063`*^9, {
   3.754041568608371*^9, 3.754041574487851*^9}, {3.7540477778254538`*^9, 
   3.754047783088629*^9}, {3.7540483633180647`*^9, 3.754048363717452*^9}, {
   3.7540487456547813`*^9, 3.754048747190419*^9}, {3.754051497433691*^9, 
   3.754051497777104*^9}, 3.75412857633883*^9, {3.756717231997735*^9, 
   3.756717234298307*^9}, 3.756718756440661*^9, {3.7567195737841253`*^9, 
   3.756719575241898*^9}, {3.7567197961477337`*^9, 3.7567197970628853`*^9}, {
   3.756719973568098*^9, 3.756719974818924*^9}, {3.756720006527693*^9, 
   3.756720007006867*^9}, {3.7567202290751677`*^9, 3.756720231774424*^9}, {
   3.756720804768968*^9, 3.7567208066193533`*^9}, {3.756722463791636*^9, 
   3.756722465609984*^9}, 3.756724073616322*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsTableppibar", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"tableTotalppibar", ",", 
         RowBox[{"pLabInv", "[", 
          RowBox[{
           RowBox[{"m0", "@", "pi"}], ",", 
           RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{
        RowBox[{"m0", "@", "pi"}], "+", 
        RowBox[{"m0", "@", "N938"}]}], ",", "5.", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756204040582539*^9, 3.75620405287177*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsTotalppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]Totalppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753188593262735*^9, 3.753188701409487*^9}, 
   3.753189558344672*^9, {3.754041600719263*^9, 3.754041604351124*^9}, {
   3.7540420592865753`*^9, 3.7540420602945957`*^9}, 3.754043814237698*^9, {
   3.7540475250057583`*^9, 3.754047530429614*^9}, {3.754049044832675*^9, 
   3.754049048496292*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsResppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]Resppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753188706833003*^9, 3.75318871747262*^9}, 
   3.753189354132831*^9, 3.7531895611527977`*^9, {3.754041611047366*^9, 
   3.7540416146173887`*^9}, {3.754043088299197*^9, 3.7540430927865963`*^9}, {
   3.7540490517049913`*^9, 3.754049055408276*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.753188737617885*^9, 3.753189807302802*^9, 
  3.754041756772312*^9, 3.7540433273198767`*^9, 3.754049350215242*^9, 
  3.75412654455858*^9, 3.756717445161912*^9, 3.756720948918662*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.753188737617885*^9, 3.753189807302802*^9, 
  3.754041756772312*^9, 3.7540433273198767`*^9, 3.754049350215242*^9, 
  3.75412654455858*^9, 3.756717445161912*^9, 3.756720948982231*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.753188737617885*^9, 3.753189807302802*^9, 
  3.754041756772312*^9, 3.7540433273198767`*^9, 3.754049350215242*^9, 
  3.75412654455858*^9, 3.756717445161912*^9, 3.7567209490552683`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.753188737617885*^9, 3.753189807302802*^9, 
  3.754041756772312*^9, 3.7540433273198767`*^9, 3.754049350215242*^9, 
  3.75412654455858*^9, 3.756717445161912*^9, 3.756720949058919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsElasticppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]Elasticppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "1.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"1.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753188726400536*^9, 3.753188732864524*^9}, 
   3.7531895650327597`*^9, {3.754041620343133*^9, 3.754041623710931*^9}, {
   3.754042066270281*^9, 3.754042068022375*^9}, {3.7540426014926443`*^9, 
   3.754042602596261*^9}, {3.75404281352015*^9, 3.75404281702378*^9}, 
   3.754047638596072*^9, {3.754048373390088*^9, 3.754048374181362*^9}, 
   3.754048779877756*^9, {3.7540490591533403`*^9, 3.754049062744075*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7541268638860598`*^9, 3.756717761762506*^9, 
  3.75673064395518*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7541268638860598`*^9, 3.756717761762506*^9, 
  3.7567306440189734`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7541268638860598`*^9, 3.756717761762506*^9, 
  3.756730644073986*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7541268638860598`*^9, 3.756717761762506*^9, 
  3.756730644074971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsStringppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]Stringppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754041846523181*^9, 3.754041847194469*^9}, {
  3.754042071262624*^9, 3.754042075470264*^9}, {3.754048012605098*^9, 
  3.754048015300951*^9}, {3.754049065785198*^9, 3.754049068360196*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.754041831379188*^9, 3.75404187261941*^9, 
  3.7540422171053867`*^9, 3.75404302709974*^9, 3.7540481375367727`*^9, 
  3.754050499670383*^9, 3.7541272432417192`*^9, 3.756718137609022*^9, 
  3.756731024561165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.754041831379188*^9, 3.75404187261941*^9, 
  3.7540422171053867`*^9, 3.75404302709974*^9, 3.7540481375367727`*^9, 
  3.754050499670383*^9, 3.7541272432417192`*^9, 3.756718137609022*^9, 
  3.756731024629642*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.754041831379188*^9, 3.75404187261941*^9, 
  3.7540422171053867`*^9, 3.75404302709974*^9, 3.7540481375367727`*^9, 
  3.754050499670383*^9, 3.7541272432417192`*^9, 3.756718137609022*^9, 
  3.7567310246881533`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.754041831379188*^9, 3.75404187261941*^9, 
  3.7540422171053867`*^9, 3.75404302709974*^9, 3.7540481375367727`*^9, 
  3.754050499670383*^9, 3.7541272432417192`*^9, 3.756718137609022*^9, 
  3.756731024688933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ptsResppibar", ",", "ptsElasticppibar", ",", "ptsStringppibar", ",", 
     "ptsTotalppibar"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resonance\>\"", ",", "\"\<Elastic\>\"", ",", "\"\<String\>\"", ",", 
      "\"\<Total\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<pLab\>\"", ",", "\"\<\[Sigma]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.753189533337021*^9, 3.7531895522644987`*^9}, {
  3.754041454938045*^9, 3.754041467009862*^9}, {3.754051540281164*^9, 
  3.754051541416545*^9}, {3.7541279973461657`*^9, 3.754128014103231*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/x/4FeVs
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9, 3.75672242513116*^9, 
   3.756724063580885*^9, 3.756730602816189*^9, 3.756731621209599*^9, 
   3.7567400433544188`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Rasterize"}]], "Input",
 CellChangeTimes->{{3.756740051149922*^9, 3.756740053631606*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
M9ffuW3gqEydUQHzRv5233t/TaM4Lu1hZ5lM0drDySzvACEf9b+vHJqw8Ez3
uFISlV5fUN3T1ceVSuXGjhRBTAnNOXM3lQJmpl0LMVg8SwaZfDyz2gXkHFuw
g6w+umQQiKXUpoFb2Y0nr5YqZ02YnUxzDy+JTq/PquhgtA8pFHgPMoLMH81m
HulhgpmrzroYKpylRmXLVd97f4u8/yVfbNqVmfkiCaWx/3pKnbknqHjqst0h
35yLt6shYW5jjUplmBUjyNwIBIKDBw8qH1IoFDc3N1dX1+TkZNV8RrOZRVwu
UT9/76d6DHSp09CT4pe48mr2pzyRiRXdHZfKalvZMZmME6GF37unPphBQQxT
lNBZ5LQ3BEF0QtXMPB7PxsaGw+FIpVJPT08Gg6HsNucqvX3ma+mHvtJjoMuA
lt6cC4mvh2VuHOF1GDuWuWGxxzLKOryjKpQjFXZB+RGpdVUNfTwh3s2BII+E
qplLS0vDwqYKE2VnZ0dFRSm7zWnmlj2b6Ie/0VOQywdax83J5avelsoWY6op
lyuau0ei0uvNTqYqi7cHxlHzqN2Do0JjR4cgSwdVM6elpcXHx5P7VCrV399f
2c3yYaafBxLmZuvNBgh4yZNadRzkfK/8kEKxKIZkh7mikDs0WvNAeGLtXu8s
ZZHhMxFlTV0jciwjjCB6QNXM6enpqmYOCgpSdpszZ66239VluUFPQS43yPWq
cmo8jRuGQqFo6BhyCy+euu/DPdXzWmlaaTt7BG/3QBA90tjYWFFRoTRzWVlZ
aGgouZ+VlaXTaAbF5VC/+Rt6inP5oUijOIKcixmBRnn56qaBy3drD/nmkEK+
eLs6t6prTICjxwhiCEC/Hh4eSjPz+XwbGxs2my0Wi93d3RsaGpQ95zRz1Wmn
IbNVYgFmUwuDTC65XWwJcqZ3JhjsRQViaX51z4nLRWSSfCK0KL20HUsDIYjh
EQqFDg4OyodUKtXZ2dne3j4xMVH7WXMAxe80mJnDYukr0OWHWMKLvP/lhcTX
ixsCQdR6fS0mm3c1mW7plU7WbTsXXUFtwjrSCLLY0Xx3NlAdGgBm7quvN2RU
Sx6BeJjMnKPufzXIbV7w88OHb3XTgNf1MqKasVvK6YiySkafTIYX9RDENJgz
Z66Nvg5m7iwpNUw8ywkFrT02IHmtX+LKksZLC5U8S2XyPGr3sYD7ZF3N6PT6
3iH+gpwZQRCDMaeZGfcSwMzNmemGiWe5MSroiSuygOT5es627sHyRzmVQCQN
uEW1PptF3jedWtIuFEsXKk4EQQzJ3Hea5OYQ5eYSbhkmnmWJorbjdlDyevBz
RO4XfNGgrs+HPDm7spNcF2+XV3pRDROrWCCISTOnmbuqKsHMNRFhholn2TLC
6wjP3Ox772+BKetKGi4KxznaPEuhUJTQWeTYhV1gXnJxmwTrbSKI6TPnFcD+
5iYwMzX4giGjWrYwhyg3C3dC8hyQvDa39vSooEdD59YejsvkRLiD53PyqN0y
vGsPQZYKc+bMXPYAmJni42GYeBCgi10WX7Ib/Hwh8fW7ZQda++7L5Q+NGI8J
xoMTaDsmK7/dK2gZl8qMFSqCIPpgTjOLBQKiRLOXo2HiQZSwuU1ZNPfAlHWg
6NCMD/LrzjX3ZisU8vzqnt1nMkHLlxKqOWOLsT4SgiCPyJxmBtjmqyluRwwQ
DDKdcSm/puNWbMEO8PPkttoxfLdL+MW6Nk0DHQiCmDTamJlp8RbVaY8BgkE0
kFic5x71xelb7/veex0U7Ze4Mrbw+yKGf3t/gcDEF0xBEEQNbczcZvUBzXan
AYJBZoQvlATGUb9zS9nvk1Vcy+SLBuu776VTncMyP36QSP81NOPDhFLrW0Xm
+XXn+zl1UhnWxEAQE2bOuRlA095P6Ie+NlhIiCqtTM5Rv/s73FKi0+unX+nj
iQaaWBmF9RduF1sFp72rFLV/0ppbRWZFjIDW3lyeEAtlIIiJoU3OXH/gi4b9
nxsgGESN3Kous5Npe85mVjX0adN/aKy1iZlJa49NoziGZ21Wyag/uFd+sKwx
pKwptJ/DmPtECIIYFW3MXHt0e+uejw0QDKJEJldcSar9zi3FOaSQzZlnCdYx
YX9Lb24xIzChxPpS2galqEPS379bdgAyauYQdWisRd/17hAE0RVtzEyzM++0
fM8AwSAkfKHEc7JM3KX46gW8p2+Y15lfdy61yu5O6d7gtPeUovZLWhWR+2VS
hQ04/H7tGUZ3kkA8vFAviiDIPNDGzFSnvSyLdQYIBgEgQ7YLzNvhlpJU1KrX
FxrgMMDGlS1XM6tdYwr+HZj8Jlj6/ANdw0PQdWL54dLGYJz+gSAGRpsrgBSP
Y0NmqwwW0nKmu3/sgE+22cm00jojLFXAFfRS22+UNF4qYgSkVNndyN+uelUx
JP39O2X7E0qsSxqCRgXMRbLOLIIsSbTJmSlnXcDMAs6oAeJZztyv6rY6nbn7
TGZD5yIaTOAKWM2srKnpH6k/jIEEpayHTDuL5l7ddqN7sJwvYhs7UgRZOmhl
Zj8vYsGpHrzpTI+U1fXucEuBbLmrn2vsWDTRN1JL70oobw5LqbS9nrPNL2mV
iqvXRed/A42QV1e3x7T15bO5TWLJon47CGIw4uLirKysrB/g5+cHjRQKxc3N
zdXVNTk5Wad1AAHqJV8w80Dzwi+KhJDUtrDNTxGz42paTCzzlMrF7NHGhp7U
IkZAcuWxqLyvLzwQtWp2HZH7Beg6g+pS1hiSTTtJ77o7NNbCEw3IFViLCVku
VFdXe3t7q+qXx+PZ2NhwOBypVOrp6clg/DCjVau5GVdDwcysGppewl32kFo+
5JvDHlkiC5SLxkcHuS1tfXnUtuiCuvOpVcdjC767nLmRTLDPq0j7QuLrF1Pf
Ccv8+HruP2IK/h1fsjupwuZq1qe3Cs3y63wK6/3Km8IqW65WtUbUdsbXd99r
ZmXCVtVyjd6Z0M+pG+AwBrnNfPEQDnojix9wcnh4OKTKQ0NT19NLS0vDwqZK
32dnZ0dFRSk7azWfGZcC1Bv17UOklgc5QmPHYgAUYFFw7LWcrbm1XqWNwTk1
p5Irbe+U7r1ZuDMq719Xsj4JTnv3wr2/+U5LvDVvfokrQ9L/Hnn/y/iSPfBB
AJJPozjBC7X0ZjOHqMNj7QLxkFolVQQxPMRSFyUlx48fBw/DflpaWnx8PHmI
SqX6+/sre1o+zIxno9+OATO3FuQZIvTlRFPXiKVXOmi5f3iJZMtaomWKK5Zw
x4T9o4IeNrcJ0uO+EXoXu6y9v7CwzreiOZzedQfcS2uPLWm4mFntmlh+GIQc
nrU5KGX9bAK/lLoB5B+d/82ltA1XsrckVRyFz4Usmkc2zQPy8yJGAOTnsFW3
x2RSXfLo3mSK3taXD68LG8Sg3Bp70uBLgfJh70gt2Ue5UVoiILFXPnGE1wFv
RDjOgTeFGf4yRyAQnDlzpqioKD09XdXMQUFByj7a5MwNKUlg5sa0ZH0Fuizp
6udanc7Y653FZPOMHctSQzQ+2jNYBbbsGChq6EmhtEYVNwTl1nglVdjEl+wG
M/snrQlMWXcx9Z2A5Dd0zc8XaruQ+DqEAZ8UV7M/hZDIwRxyg08ZY/8KkYWn
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
hhyYdCCkqT/60Y9eVAGcCbkxJK4fffTRz372s6+//vrKlSuiyakIamaWSCTw
3MJC4hIVPAtSaLJdddwYzgP5Kohx27ZtTz31lKqZp/f38PB4+2111cwWoVo3
SKqZTCa5DxL28/OD04aFTVW3yM7OjoqKUnbWxcyjYOaqM84/vJDlu1quNvLo
dFj9nXZsx2xHiex9rltREARZtICZ1Zaaeu6553oma/9Cqvmf//mfysGBgYEB
ONrW1paWlgY+ZLFYE5MGvnPnzuDgoNpoRn5+/uOPP04+hGf5+k6VX8vNzSVN
C8kqNPY8KDKsNpoxvX9CQsLTTz/Ne3Cv8enTp728vGaLUMP7haf4+PjAW4iP
jydbqFSqv/8PBdksH0bzb0+tzGa/xVqqk7XmpywUjP1bYZvtKMtifd2hLw0T
CYIgCw6YeevWrdJJQLO9vb3ff/89pM3kYOymTZvef/99SH0hid2wYcOKFStk
MllzczOY2dXVtaKiwtbWFswJgoX+Gq4Arly5MikpqaWlZcuWLa+++irZ/vLL
L8P5weHQf/Xq1Zr7Q3h/+tOfPvvss7Kysri4uCeffDIyMnK2CNXeY2tr66VL
l0DgQqEQtAzfC9LT01XNHBQUpOysfc48MWlmqvtRcl82Lpksm2+j4/+BeQIJ
M6TNMx4Sj/Egkqa9nxgmEgRBFpzp48wdHR3gxpoa4rL+2NgYmOpXv/rVM888
88UXX5BX9ICYmJg///nPoEcwcEREBNkIR+FUzz///G9+85vps+bICW+vvfaa
cqSirq7uww8/fPbZZ+HkGzdu7Ozs1NyfyWSCmaH/H/7wB8iZyct2s0WoSl9f
n42Njaenp4ODA1gdJA96Dw2dmusL2f78RjMmiNR0HdVpL7mv06rWjw5ZjG7G
Q4MtbUQk3q6GiQRBkAVnupnByeDGnJwZKgObKJBFHz16VHUCBnxqgKvZbLZY
LHZ3d1dd3VsnMzMt3qp2nBq+GGxrJVJo/9MLFbZmyHqh/CH1VQKBjpJioqDH
zajphxAEMQlAyxs2bCidpKSkJDEx8Y033njhhRce/ZaNRYWLi4v1A4qLiycm
BzGcnZ3t7e3hLc9v1hzQafme8pIfkzZ5S2DorHOMFxZyxnKfymeKEvI2k5b7
uYaJBEGQBUftCuDPfvaz9evXg6KNHZfR0P7ubKDN6gOlmcnSc6oFjvQKuRpg
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
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQTTw/4HuxTY=
   "], {{0, 0}, {478, 229}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{478, 229},
  PlotRange->{{0, 478}, {0, 229}}]], "Output",
 CellChangeTimes->{3.7567400542568207`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/x/4FeVs
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd2Hk81Nv/B/CxmzHGLG6rRJvEbVVpmXm/Z6wpUlGKtClKi0ralG6horTv
y1XalBZp0aLkVsqlRNbqWkJE9l34Kef9/eP3+cdjzMz5nPN6vs+Zmbfh4jUz
lypzOJwGJQ7n19//f23VvWVTsCUQfN+5x4VJ30H346PwVN7qOWfBO4jVDyqf
EXseTFVdonq+oecvwbL+7oGSf97D6VO/rkjYunH4hQN5qez1tyDSGR+4Xk+D
ihm//hMNz3xXt3ldzWDvvwduKQlNl1xzgZcV4SPlPQTdwLDj3Mf5bLxHYHOo
8EteaTEYux1IaBj6FEy/KDL62f9g4z+DqrQNtUfT6+BS17uzIuJhjt2Wv2a2
trL7vQCO2sYHPouUcczv6x+I6b1q5h51Lnbf/yWsvN4g+8QR4T8NQ7vu8Aqa
bMUz3/N7Yvd8EmF38OXGNuP+OPP3Dd9AvXT+tXWcwdg9v7ewP/hllutIUyzY
8mvAJNj5qWyrY/Jo7J5vMpyf2XwiPdUc1/6ank8K2Gx5n3RdD7F7/u/gtXZ4
/8qlltitkAo+ibeDf3yzxe71pILZzMC+Kqr2aPv7Bh/g3OoNn5aqOGL3+j5A
1KN573fFOeKvu7kdSIOFBYeNbO44svWmw9jc5EI3LUf8vZysdOhc4O09v58D
W/9HuMHx3W1fMBX7/5qOfgbkte5Zufb6FJZHBhgaOR3M+dsGPZf9ujKhk6cf
7ZtmxfLJAr3+ncV7rS3x12i6t7Ig0mF4GK9VwfLKhhueIyebl8qx8ddwDdnw
coeya7CWnOWXAytOtYesd0eU/R4wF9zSHhVFPASWZy4ogl3Td7fL8Pf0gj6B
/7qb44yDZCzfz/D20eO9XCsZpiT/uj7DI/NLkoljZCzvL3AwW9PeuOv5P35P
8D/IPDxx1N01Mpb/f/Bu37oh267K8PdwbnngUz459E6BjHnkg/nsREWWLrD1
5MP95fcSUiYA88mHNcOLjbdNA7a+fJg4VKg/vutxt1cBrI4e0XJhErD1FsDr
RW/3WxsA8yuA700fjUuVgK2/EGrKr17NKJMxz0Lon2LkPrtQxvIoBN+CWTVm
jTLm+xWmBUTt2j0SWD5fYfaCxr3zzgLz/gr3+jo5DxuALK8iGDfROLX9JDL/
IqjvYT923Dg5y68I+iceEY5sk7N6KIbIJSZub4sVLM9iGO9W8m1AlQWrj2KQ
TV3kFMOzYvmWgMibM5HXy5rVSwkUvlLtdTrLmuVdAhP6eN4dPcuG1c83EPK/
TioNtmH5f4PV0GtHnJ8Nq6dv8HwAfnUYbsM8SsHAX9GxJ86aeZTC6Tz/poFj
rZlHKRzkh8wadcmKeZTCxjT7mJYeVsyjDFLScjlpxy2ZRxkMvlEZsXqYJfMo
g/vHDBI8My2Yx3fQnz131f1zFnjwt8d3UO13ONNkpwXz+A4p4aKMqkAL5lEO
eUE/XAdftWAe5XDVrSCt53cL5lEOK/UmzX833ZJ5VIDggsAjLteSeVTA0wDv
52P2WzGPCtiyUP8Py8XWzOMHtKU3jpG42zCPH7Cv/ppwur8t8/gBhbFbHfbf
n8I8KqGhynjd8Q475lEJWaFz4/rbTmMelTBvo8UV+wB75lEFn5umFOkccGAe
VeCy76PSscXTmUfX8xftTGNLpzOPargYLO5803W+dK+nGmI8Zm+OrJzOfKrh
w9Cx/tF+09n6qqFl1l/i3s8dmFc1mClZ/nyeY8/WWw3zyjw2D86exvyqodEt
YKzDWzqfamCJU67r01g75lkDVxJLl566O4XlUQP9YPiZqbdtmW8NeCsVrd0d
Z8PyqYGLr8aFVOZZM+8aOGfc/m2ywJrlVQvXH4s+pM60Yv61cDjw7bq0G5Ys
v1p4ErPL8IfIku3PWth0fav9ihALlmct9OZ39hCJqT5qoTLM0PnjVQXLtw5q
J71/fN9OweqlDqQu8bPetMhZ3nUwdci5Ge22ClY/dfB3ysPXZahg+dfBR767
+mdzBaunOthh0NYSM0LBPOphjuqJZ9uGKJhHPfTP4qs59KPzuB7CjR8u9pAo
mEc9dE7esPiEhoJ51MOOR6ecylvoPKiHNwvW+RuV0/ldD69Wjfqw6jOdDw2Q
M/9piWurnHk0wF0Xw3u+/ei8aADnO89vbOiaf7dHA3iNH3PZxlrBPBrg+qT0
Qcld6+n2aIAnB85en2uiYB6N0DN/3eDqrvG6PRohu9TLNK1rvt0ejXD9xYvi
6Do582iEtX68QU7tcubRCHc2X+lRra5gHo1gZHph02c+eTTBy5OuZvFc8miC
XqP0ay53vb7bowmKO81v7FchjyZ4vVx9wUYOeTTBRGsrw8QcOfNogpr0vPfL
o+XMoxlurnpfMnivnHk0Q90zbNHdKWcezXDsuVrqqx1y5tEMvuH/+W0MkDOP
ZvB/UDJ7sB95NIP5GJXSOi/yaIZIrx37k1zJowVKDfUnRDqQRwvAss8HmmRy
5tECE/sIDhkZ0+dvC8wJUI32kMiZRwtYmDdm32pH5tEC6x4O3BOsLGcerSCs
+DzFlStnHq3glz1S2VQoZx6tUBqvHtvcQ87Oy1bQcx2z7kU/8miFWv7m8cGD
5MyjFWYM2yOwMZEzjzaYOLqzXWW0nHm0gbqWNz/OnPZHG6yPrR09B+TMow3E
i/YIAq3kzKMNngoiPG9OJY82OG+oY5k+gzx+gtubvZENc8jjJwwf8+Kcrjt5
/IQZr52GjPQgj5/waGqGre0K8vgJwkGvePN9yOMnuM7LdV3nRx4/4aNZUf66
APJoh6JVlzat3kMe7XC5onnY0kPk0Q6CPTc6Z58mj3a4OWVdh0UEebSD/+2q
4aZRcubRDtcr7p7UuU8eHZBTVmSyNo48OqDE2aBoYwJ5dEDCxWu1WxPJowNc
p5533ZZMHh0gC+450P8DeXQAehrYb8okj06I5jz5svYTeXSCWmBetlc+eXRC
p26Uu28xeXSC8PGuzgkV5NEJNms3DvlZSx6dMCwwIftxC3lwkBd6pK8fh/Y7
B6uP8ev/1KDzi4P1Thaehdq0/zlYB/ItR3TpPOPgs7iuaumrwN/LXcbBcDv/
I+WGdL5xUDXyXWd213nYfT5wsDB5gss1AzrvOPhm5c7nW/ooWB4cHJE2fpRj
1/jdvhwMfVB3baiAzg8Oeg6YN0BVU8G8Oahk3/tUoRKdJ0q4wL9M8+X/vj8p
YVbxvlXXGig/Jex14H3CgSqqByU8PWK36pYyylMJw8RHhnt+pfpQQrOWT5Pn
fKF8lfBy+ywTuyyqFyV8XWK09MZ7ylsJ0zY9GFKSSPWjhElKcfsHxVP+Sqgd
NPLYsliqJyX8Nl9kHnWHPJSxfz/vtQ3XqL6UsXKZ02TFBdovyhjyofLI4VNU
b8rY++Wy9SWHaP8o48jZdRnSEKo/ZXw0IvPByZ20n5TRZbmrqGkLndfKaL0q
J99lPe0vZTyWfcfgmTfVpzJ+d5uWPMSD9psyXr1okHfYjepVGbeZRDkpO9P+
U0bvsRuHbrCn+lVBO7+k5Bwr8lDB9KcLD3yRkocKtk6ozCwaSx4qOGfFl/NV
f5KHCkaEXixsH0weKrh1x5NzOvrkoYLb7t3+d1AP8lDBtxyhl1RAHir446Df
6rnq5KGCg94E527qQOahgupGP66eaaTzVgW3j1qQ9qISmYcqjnU+41xegsxD
FWWpXn/2yqPv86o45uQJZ9ss+v2kiiflnKSt75F5qOLZb7uC7yYi81BFU13+
7orn9P1fFS8F6vVZ8AiZhyra8oKm7r+HzEMVnQXrt8Xdpt+rqpjL97lZdR2Z
hyrKN/NyBl5B5qGK1+5ktM+9gMxDFe0rlvc+fBaZhxqimYdx8glkHmo4euYy
E80jyDzUcOvLHv2sw5B5qKFltMHPoL3IPNTwe86Y14mByDzUcEuY6matHcg8
1PBNSlK9z1ZkHmrIWXHh0dGNyDzU8LDtUc3H65F5qGGt24e8/DXkoYbHB4ZI
uSvJQw13nqzrP8aLPNRRY7h1kLsHeajj3n/ivEMXkoc6+p499eGRG3moo90c
vftlLuShjqlFobp9nclDHR0DRlXazyCPrvEvzsWd9uShjhEcJ27sFPJQxy/b
19tUWZGHOk4YKmgxUpCHOn402qa3WEYe6ugcr3fn3ETyUMdGi2l3c8eRhwZe
5q827D2GPDRQ4futzWUEeWhgdbIBnjYhDw3cOzeo4rMReWigvvWuToNB5KGB
J8JDNy4zIA8N9JohnnVTjzw00F037GBDL/LQwF1rNw2HP8hDAy/ce+nZISYP
DTxjsffgOxF5aKCOzaehfwvJQxODteUjfXTIQxNHx8uvyAXkoYmpC5eGSLTJ
QxPDEs0+F2uRhyYqXZhwJpZHHpooWdnxOpRLHpqoskmwYIEmss9PTfQsbFjc
FQvz0ESzY/I0DXXy0MRky4Coz6rk0TXeamlNtAp5aGKIk1b4bmXy0MSVnM2x
85XIg4vZk3tONOOQBxcbTKpse3R9LHd7cHHLLZfKl23UX+Bip/jQEt8WYB5c
vFL4/OqgJmAeXPTtI3icUU/9AS7mG105tbuW+hFc9C6OsZpYDcyDiwmXatzu
VQDz4GLotza7z6XUT+CiRxaEqhVT/4KLc48t0RtZAMyDh/ohOu2uX4B58PDe
wkqTvTnAPHhoonTz6sMM6nfw0Ce0dfW3D9Rf4aHRzD07er0D5sHD4xncT3ZJ
wDx4GPHMbNv218A8eJibE780JoH6MTzcLfY6UvYMmAcPc1aVqBo+AebBw97q
rbFz/9df4mGp2pJbR2Kof8PDoxFfv767DcxDC9fooYtWFDAPLZTdkfGmXCMP
Lbx19mrz7kvkoYXZvawGvAknDy3MdPwaxD1HHlo4b5HjgGmnyEMLF89yazxw
jDy0sLhnDifjEHlo4dldp7FvGHloYYqd373FIeShhcbtFq43gslDC5NSnoRk
7iQPPv4tT70b4U8efMTUlZnr/MiDj6sqb9ZZ+JAHH514MZo9V5AHH3WDzksq
lpAHHx2ijon/mU8efHwfE69ydg558FFx267YbwZ58JGzb9H9WVPJg49FvHHr
RluRBx/HPW7rLQHy4OO1qtLrDebkwUePhHEDc0eThzYaqhn+FW9KHtrogiUJ
14aQhzb6RSWWHDYgD20cYcot396HPLQx27omZaUueWjj2wFv97sJyEMb8wM+
D3XQJA9tVLu7+ZxcmTy08fmZmrJxP2XMo2u8ayf4wxtlzEMbe7x9oWJULWMe
2li34k2K4XfqJwrQz099uX4R9SMFyLPNSdf7j/qZAlxxI5zfL1vGPAR4NPOZ
qH+ajHkI8JPHyYIByTLmIcDvM45uGfpaxjwEWF7f99OIeBnzEOD9ttNKEx7L
mIcA25cGVFjco/6nAC/smHDa8Rb1TwVd65KtDLhB/UYBXt6tVRIUKWMeXY8L
FPX7rsqYhw46ipYcP3pZxjx0MDD/+79nI6g/qYMd6XOPXr4gYx46mGU8surW
39Rv1cH+2ZWfYs9Rv1YH3UN7zvvnDPV7dXD0ZdPl707JmIcOlkyM1sw9IWMe
Oqima2xecow8dFAlsldT7RHy6LqfoZoV5zB56OBlJ19DwUHyEOLSlxWhemG0
HiEe/Lthl8k+8hHiu2c9uJNCaH1CvBmR3WfqHvISouPGl7GuwbReIY7kehSu
DCQ/IWakyE9s30nrF+KRL6WZB3eQpxBn1BWFR2ynPITo4J1Q/8Bfxn7PCLFU
LkhL2kL5CNFLPNs8bxN5CzHtj6FG9X6UlxBfnAmz276e+sdCtB8Vc/zkGspP
iMfDhzXGeFM9CPGDqdgr1ZPyFGKYw57yH0uoPoS4MjoqgL+Q8hXix1HhA03d
qF6EGJcbmDnNhfIW4qqv206sdqL6EaLFzdtLDzlS/kLc9wLw/jSqJyHOe+80
JNeWPEQ4K7JHT44VeYgw3OKWyEhOHiJMiLb6Y7qUPER4cJCm4aYJ5CFCYamh
2cWx5CHCzYvi7VNGkYcIh2qLV7X8SR4iPO1vfWjIMPIQoa9T2COnIeQhwiC7
vsW7BtB+E+H7gQaSe/rkIcKLd1MVxX3IQ4SXPy5a37MneYiw1od7yU5CHiIc
79eRvl2HPESYlr1J+Z4WeYiw82D08O8a5CHClpOFcwxVyUOEI8qtt83lkIcI
N+zoc/7wTynzEGF5Uq/QFc1S5iHCaymTbG3qpMxDhE+HdboMrpQyDxFOVJr/
VLVMyjxEqPHccW3xVynzEONf+ll+if9JmYcYRw2q/Pd6jpR5iDFY79iaAx+l
zEOMIaeSF254L2UeYozyOX7eLUnKPMS4LbbByOqVlHmIcfvryrbh8VLmIcZm
0929+zyRMg8xvox9FaD+QMo8xPjnmrt/1t+RMg8xvgudPeDrDSnzEKPv9qdu
6VekzEOMamVVn15ekDIPMfqcaz//8KyUeYjx9Jm6SzdOSJmHGF10CirCD0uZ
hxiXO2RuOLFfyjzEuDazSHZgj5R5iFFpan+bPbukzKNrvPWn9u/cTh5ijJ/g
Jdq+mTzEmK8XeXTbBvIQI5dnt2D5evIQo5lWUJTzWvIQo8ni1q2KNeQhQaNX
dikjVpGHBLnuPcP7eZOHBE+/VarXWk4eEkzqEfWmdRl5SLDsVWy/7x7kIcGa
xKTanMXkIcEX24JskhaShwS9Hu7r+8SdPLoexwSujnIjDwm29xPj+Xnk0fW8
MPfAQRfykOAE4c75u2aThwTPCO5c83MiDwlGePLWrphJHhI8WzD+gbsjeUjQ
LSpv4ywH8pDgkYWR922nkYcEDTsnr5HZkYcEl1YrLpnZkocEz6t4OJlYk4cE
x6+eEjDAkjwkGGq+eDdXTh4STPZpDj4jJQ8JVvYa5TR8InlIUGHpX/liHHno
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9, 3.75672242513116*^9, 
   3.756724063580885*^9, 3.756730602816189*^9, 3.756731621209599*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9, 3.75672242513116*^9, 
   3.756724063580885*^9, 3.756730602816189*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9, 3.75672242513116*^9, 
   3.756724063580885*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
GGuHlx0TokcTc/erwz5xtDZ6NDGLjCoTzP8QoUczExESHr3ciIsezYzF/pvO
vUdroEcz0zt6yMMaJyF6NDPJh5N6zdyrhx7NjFvJW/eiRCF6NDPBKsE/2oO1
0eM7E9vS+2JomA6wHt+ZfAMb27RcEbAe3xnf9IluJTv0gX2//M6s2Q0jTK3F
wHp8ZzjcrH/m6kmA9fjOuIwqPVBVKAHWo4Xx62dQBElSYD1amNm76sc9WCcD
1qOFOT+gIZxvYQisRwtzMEqpjMoyBNajhYktsp9pu80IWI8WZvdjXv4BU2Ng
PVoZuNocvummMXq0MrpxVdmp03uhRyvjBm93Ls3rhR6tTEZkSNqslb3Ro5UJ
HxJsFlvTGz1amZK93tNeb+mDHq1M4FWH/vHcvujRxlicds1cGNYXPdqY/GoX
r9X9+6FHG+Pi+Lpk6sV+6NHGlKh9j7RM648ebYxuno+L35f+6NHGeGXK/TaE
DUCPdsb88rwlF1Qm6NHOrMkoTjxdZIIe7UxTmJvdxShT9GhneDEO+wOtzNCj
nQn9MnCT6wEz9Ghnfmswro+rN0OPDiZ7w0mbrYsGokcH8+mx+ZS4ZwPRo4OJ
3eS89L7dIPToYDZ+XvY15sIg9OhglhgvmFBmPhg9OphXQTktrscHowcHckNN
+wYameM8HHiwK26s4UFz9OHAmRUD/n0uGoLzcWCnceYb191D0IsDqwKjo89X
D4Ef4y7nwKWyZ9tSJg5FPw58v2JR8e7wUGDfHzhQFrLy+8NPQ9GTA/Eavs+c
bYdhHxzw2rf82uhdw9CXA04zXQs/ZwzDfjjg4vJoytVBFujNAX/PX8e0rLPA
vrgw6kuIYtBtC/TnwocBZSekQkvsjwsJ/9mx6rabJe4DF/4qLX8tibTEPrnw
Qr5rOT/fEveDCwGGOw32DhmO/XLhU3jz/FMrh+O+cGHixvO7Hc4Px765MPt1
rL//1+G4P533PzNRZGk9Avvnwm4tn6BVq0fgPnGhSa/0w52EEejBgwe6e5wi
ikagBw/OiLYvCx5ghR48MM76lqHjaYUeneePXVrovM8KPXiQlhvANUu1wv3j
QZWywDay0Qo9eKDX4ZLzcrg1evDA/2Cl7z4fa/Tgwd47/U/+d581evDgPbcy
IOe2NXrwwHVK9B6Tcmv04MH9OcbqMb1HogcPFvdp+UsxeSR68CF18KerWWtH
ogcfOko2H8uMGIkefPAQ1Bw/cm8kenSen+qZ5Vw6Ej34YNKYruKLbdCDD31f
1a6Q2dqgBx8mJ43zHDnXBj34YAdP3s8PtEGPzvd1TeveZ2Js0IMPJx7dfyC9
a4MefLgRsOFyXL4NevDB+aLyuJwjRw8NiL6aO+esgRw9NOBoRXjhdRM5emjA
uTE13qus5eihAft5/gvvjZOjhwbUtAsXX58mRw8NmGliIJs1R44eGqCzw/Pp
0WVy9NCA5JwtT3aul6NH5+f8u9hzZkFy9NCA3/8KcPINk6OHBiycHtuw+Kgc
PTTg0jpHR/1TcvTQANmFKxbrEuXoIYB+5Vv9Q2/I0UMAkc3FTR6pcvQQwKf4
WsP853L0EIDxQGmyebYcPQQw1sLdblihHD0EcGfn/msl5XL0EAB3eqH2yno5
eggg6dY9z+R2OXoIYDhnd85VoQI9BOB07+y47WIFeghgqWbteMM+CvTofJ7p
FnFrByrQQxN47/v/dMhSgR6aEBVcPytIoUAPTZg8YbghjFGghyYsz5AHZq5Q
oIcmFDS8eqjrqEAPTXBoaHUf6apAD01I+i5xNvFUoEfn/Uas2JLvo0APTdCJ
TRm6YakCPTRhm1N6TM5KBXpoQnLH0SyZnwI9NCF8xu8bBv2kQA9NCKvgndUM
VKCHEBbMGD/nXogCPYSg7mslTt2jQA8h5DtWzjc4okAPIYT4PzqpjFWghxDM
Eu+0Wp9ToIcQ0uYv4HOvKdBDCJd9A/sk3lWghxDamZPNyn8V6CGEoa805h/O
JB5CeJp6uurFR+IhhI9/rL1SXEo8hFB4bu+f72qJhxZwdpo++6uNeGjBft9n
N+cKleihBbaV/cZ/FivRQwt+75961b2vEj20IMjW61jMYCV6aMHMQmn0Uysl
emjBrTKd1W9tlfj5qQW8vXrHHtkr0UMLksyLjCOnKtFDCxbYSGZPdlOihxac
+jOtf66XEj20wMc5r2nWYiV6aMGn249XX1ipRA9tuAt3J1WuV6KHNnw1HX9e
FqBED224lZZlPmC7Ej068+rpA3TDlOihDQ9gPafgkBI9tMHx+oLlxyOV6KEN
CR075tmfVKKHNgSm5fk9PqNEj87zUyKsRycr0aPz+k+lsQevK9FDG1Kmfea1
3lGihzaE33ybn/lciR46MM7aVqjXmVkPHUgeJTurlUE8dMDdQ7WuKYd46MBI
7zEvEwqIhw5w1hkeOlpCPHTA4T8u5YJK4qEDsxvPJKTUEw8d2BrwpbB/K/HQ
AbG0yPdXngo9dCDvf0v/fK+lQo/O1/PzV/YxUKGHDjzXXfjbJCMVeuiA0+Nz
Yxb3U6GHCF6Yfrs4d6AKPUTA6/W4n+swFXqI4MGEXsHW1ir0EMGrUTE/fVGq
0EMEq5IDxl0erUIPEfzc0cdrnr0KPUTw8pKPxekNKvQQweCb7aKfp6nQQwRh
Aufe5TNU6CGCCv/P42fMVqGHCGpeal2NnatCDxG8yb56pXCBCj10IW/vEw/D
ZSr00IWgeAgZtVKFHrrg3etd9dS1KvTQBS4zKS7FX4UeunDhjbTFbrMKPXRB
P+jKfrNfVOihC3sybevqQlTooQsbLBpn3QxVoYcuxFhs9l2/l3jowqWI6uQv
B4iHLrwvfBVkFU48dIE/Z9Zc/wjioQtXzNennDpOPPTgXX3dsoexxEMPtpU1
B+TEEw89GJYitCg8Qzz0IM3zRXjueeKhB/Kw0aVPkomHHiirf36RfIV46IFW
Su2nX24QDz2Y9+B8xeTbxEMPAiale3TcIR56IEnb7J+YSjz0YEtb+kTXx8RD
D/J/yehb/JR46IO765aWtS+Ihz5c+vhI7+tr4qEP3itlGxdmEg99MMyOd32U
TTz04dRou3sDc4mHPiyQ2Z3V/kg89EHfck7FtULioQ8bdcyzq4qJhz74640p
Ny0lHvqQ8u2aYnIF8dCHc+VL7s+vJB76cCgp69aaGuKhD3HK1fbr64mHAeSI
AlesbiIeBrDE4rdB81qIhwFMS9augHbiYQDyHe+T+nPV6GEA73Iadn7jq9HD
AIa4OCRc01SjhwEET2zR26StRg8DcNF4dM9SV40eBnDscFlNhr4aPQzAKfRW
6RaJGj0MwOfxg3VXTdXoYQAFV0IvtBir0UMM9+22OJn3UeM8YvgQ8h+Hk/3U
6CMG8fIb3kYmapxPDA5vBdeDzdToJYbiSYKhRYPUOK8YrM4t+mY3RI1+YjD0
kXtcH6bG+cVw1ygj5a2lGj3FsCTRPtfYivQhBudrxTdmjFTj/zNi+PV9gleQ
nPQjBs87W2+eVqrRWwxHm9fxHqpJX2IIDznlnDtKjX8/iKF8hCiqfDTpTwxv
9owQ1o5V4z6I4XKfmIQaO9KnGHiSn8PK7NW4H2LYviXiUQ6Qfjvnnf1gTepE
Ne6LGA71WX0gfjLpu3M+70AIclDj/oihzTHxkJsj6V8MERAd3s9JjfskhveW
J7w/OhMPCWy29mqInk48JLD/yecNM12JhwR+bv67pMONeEigVLRw6Z/uxEMC
6e0hdVNnEw8JpPw071yBB/GQwKkM86iNc4iHBMaNb33OmUs8JGDgKfMK9SYe
EvB3PjtF4KPG3zcJ/N3y95+/zCceEuibNr/UZCHxkEBZaEta2iLiIQEji7V/
bVpEPCSQeFk+RXsZ8ZBAqmmtrrsv8ZDArHXpG+QriIcE6k9PuXjLl3hIIHm7
1zP7VcRDAq9t7NNvryYeEvjj9q3lO9cSDwnAWHlUwlriIYHA6pIJ2euIhwSG
hUn2b15PPCRgbl58N9ufeEhhUeOYIaqNxEMKN/dKnv66iXhIwWV5x823PxEP
KXBeKHhmm4mHFAT/xGxftoV4SKHmibTlZADxkILpK8GSvK3EQwpXjyjUkl+I
hxRq9xwyHBNEPKQQubFiz9JtxEMK5a55oaHBxEMK+zkLx8aHEA8puM0sTLy9
nXhI4Uzjh8qXO4iHFAKWKTU/7CQeUnjzdN/u0l3EQwrq4NsrikKJhxQ2ax/4
rfRX4iEFXfslEUW7iYcUTi+LCc7eQzykMLzxflBaGPGQQuznNX9c3ks8pFBW
ZFsc+RvxkELemhWLt+4jHlKwG/6Hhdd+4iGDe6vGDpAfIB4ymDZpsB//IPGQ
gfDiJas3B4mHDOZ6LrI5foh4yKBpz86kxb8TDxmMHbwkftBh4iEDx0e9+348
TDxkMMHuVu9j4cRDBi/jG5KcjhAPGbjzK9ObjxAPGTwOcoiLP0o8ZDBZ7mPi
fIx4yMDXc8yMr8eIhwxaQ6PG7Y0gHjLYPejfb+aRxEMGZ9wVfrciiYcMvOYb
pTlHEQ8ZbAo70p4dRTxkUL5a2n9JNPGQQdImF4sv0cRDBjczV4zwPU48ZKB3
2sG6+DjxkIFG30jbBSeIhwxmtc9wST9BPGRwa2zV5skxxMMQxCFaaRc78/8B
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fq0X
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9, 3.75672242513116*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
GGuHlx0TokcTc/erwz5xtDZ6NDGLjCoTzP8QoUczExESHr3ciIsezYzF/pvO
vUdroEcz0zt6yMMaJyF6NDPJh5N6zdyrhx7NjFvJW/eiRCF6NDPBKsE/2oO1
0eM7E9vS+2JomA6wHt+ZfAMb27RcEbAe3xnf9IluJTv0gX2//M6s2Q0jTK3F
wHp8ZzjcrH/m6kmA9fjOuIwqPVBVKAHWo4Xx62dQBElSYD1amNm76sc9WCcD
1qOFOT+gIZxvYQisRwtzMEqpjMoyBNajhYktsp9pu80IWI8WZvdjXv4BU2Ng
PVoZuNocvummMXq0MrpxVdmp03uhRyvjBm93Ls3rhR6tTEZkSNqslb3Ro5UJ
HxJsFlvTGz1amZK93tNeb+mDHq1M4FWH/vHcvujRxlicds1cGNYXPdqY/GoX
r9X9+6FHG+Pi+Lpk6sV+6NHGlKh9j7RM648ebYxuno+L35f+6NHGeGXK/TaE
DUCPdsb88rwlF1Qm6NHOrMkoTjxdZIIe7UxTmJvdxShT9GhneDEO+wOtzNCj
nQn9MnCT6wEz9Ghnfmswro+rN0OPDiZ7w0mbrYsGokcH8+mx+ZS4ZwPRo4OJ
3eS89L7dIPToYDZ+XvY15sIg9OhglhgvmFBmPhg9OphXQTktrscHowcHckNN
+wYameM8HHiwK26s4UFz9OHAmRUD/n0uGoLzcWCnceYb191D0IsDqwKjo89X
D4Ef4y7nwKWyZ9tSJg5FPw58v2JR8e7wUGDfHzhQFrLy+8NPQ9GTA/Eavs+c
bYdhHxzw2rf82uhdw9CXA04zXQs/ZwzDfjjg4vJoytVBFujNAX/PX8e0rLPA
vrgw6kuIYtBtC/TnwocBZSekQkvsjwsJ/9mx6rabJe4DF/4qLX8tibTEPrnw
Qr5rOT/fEveDCwGGOw32DhmO/XLhU3jz/FMrh+O+cGHixvO7Hc4Px765MPt1
rL//1+G4P533PzNRZGk9Avvnwm4tn6BVq0fgPnGhSa/0w52EEejBgwe6e5wi
ikagBw/OiLYvCx5ghR48MM76lqHjaYUeneePXVrovM8KPXiQlhvANUu1wv3j
QZWywDay0Qo9eKDX4ZLzcrg1evDA/2Cl7z4fa/Tgwd47/U/+d581evDgPbcy
IOe2NXrwwHVK9B6Tcmv04MH9OcbqMb1HogcPFvdp+UsxeSR68CF18KerWWtH
ogcfOko2H8uMGIkefPAQ1Bw/cm8kenSen+qZ5Vw6Ej34YNKYruKLbdCDD31f
1a6Q2dqgBx8mJ43zHDnXBj34YAdP3s8PtEGPzvd1TeveZ2Js0IMPJx7dfyC9
a4MefLgRsOFyXL4NevDB+aLyuJwjRw8NiL6aO+esgRw9NOBoRXjhdRM5emjA
uTE13qus5eihAft5/gvvjZOjhwbUtAsXX58mRw8NmGliIJs1R44eGqCzw/Pp
0WVy9NCA5JwtT3aul6NH5+f8u9hzZkFy9NCA3/8KcPINk6OHBiycHtuw+Kgc
PTTg0jpHR/1TcvTQANmFKxbrEuXoIYB+5Vv9Q2/I0UMAkc3FTR6pcvQQwKf4
WsP853L0EIDxQGmyebYcPQQw1sLdblihHD0EcGfn/msl5XL0EAB3eqH2yno5
eggg6dY9z+R2OXoIYDhnd85VoQI9BOB07+y47WIFeghgqWbteMM+CvTofJ7p
FnFrByrQQxN47/v/dMhSgR6aEBVcPytIoUAPTZg8YbghjFGghyYsz5AHZq5Q
oIcmFDS8eqjrqEAPTXBoaHUf6apAD01I+i5xNvFUoEfn/Uas2JLvo0APTdCJ
TRm6YakCPTRhm1N6TM5KBXpoQnLH0SyZnwI9NCF8xu8bBv2kQA9NCKvgndUM
VKCHEBbMGD/nXogCPYSg7mslTt2jQA8h5DtWzjc4okAPIYT4PzqpjFWghxDM
Eu+0Wp9ToIcQ0uYv4HOvKdBDCJd9A/sk3lWghxDamZPNyn8V6CGEoa805h/O
JB5CeJp6uurFR+IhhI9/rL1SXEo8hFB4bu+f72qJhxZwdpo++6uNeGjBft9n
N+cKleihBbaV/cZ/FivRQwt+75961b2vEj20IMjW61jMYCV6aMHMQmn0Uysl
emjBrTKd1W9tlfj5qQW8vXrHHtkr0UMLksyLjCOnKtFDCxbYSGZPdlOihxac
+jOtf66XEj20wMc5r2nWYiV6aMGn249XX1ipRA9tuAt3J1WuV6KHNnw1HX9e
FqBED224lZZlPmC7Ej068+rpA3TDlOihDQ9gPafgkBI9tMHx+oLlxyOV6KEN
CR075tmfVKKHNgSm5fk9PqNEj87zUyKsRycr0aPz+k+lsQevK9FDG1Kmfea1
3lGihzaE33ybn/lciR46MM7aVqjXmVkPHUgeJTurlUE8dMDdQ7WuKYd46MBI
7zEvEwqIhw5w1hkeOlpCPHTA4T8u5YJK4qEDsxvPJKTUEw8d2BrwpbB/K/HQ
AbG0yPdXngo9dCDvf0v/fK+lQo/O1/PzV/YxUKGHDjzXXfjbJCMVeuiA0+Nz
Yxb3U6GHCF6Yfrs4d6AKPUTA6/W4n+swFXqI4MGEXsHW1ir0EMGrUTE/fVGq
0EMEq5IDxl0erUIPEfzc0cdrnr0KPUTw8pKPxekNKvQQweCb7aKfp6nQQwRh
Aufe5TNU6CGCCv/P42fMVqGHCGpeal2NnatCDxG8yb56pXCBCj10IW/vEw/D
ZSr00IWgeAgZtVKFHrrg3etd9dS1KvTQBS4zKS7FX4UeunDhjbTFbrMKPXRB
P+jKfrNfVOihC3sybevqQlTooQsbLBpn3QxVoYcuxFhs9l2/l3jowqWI6uQv
B4iHLrwvfBVkFU48dIE/Z9Zc/wjioQtXzNennDpOPPTgXX3dsoexxEMPtpU1
B+TEEw89GJYitCg8Qzz0IM3zRXjueeKhB/Kw0aVPkomHHiirf36RfIV46IFW
Su2nX24QDz2Y9+B8xeTbxEMPAiale3TcIR56IEnb7J+YSjz0YEtb+kTXx8RD
D/J/yehb/JR46IO765aWtS+Ihz5c+vhI7+tr4qEP3itlGxdmEg99MMyOd32U
TTz04dRou3sDc4mHPiyQ2Z3V/kg89EHfck7FtULioQ8bdcyzq4qJhz74640p
Ny0lHvqQ8u2aYnIF8dCHc+VL7s+vJB76cCgp69aaGuKhD3HK1fbr64mHAeSI
AlesbiIeBrDE4rdB81qIhwFMS9augHbiYQDyHe+T+nPV6GEA73Iadn7jq9HD
AIa4OCRc01SjhwEET2zR26StRg8DcNF4dM9SV40eBnDscFlNhr4aPQzAKfRW
6RaJGj0MwOfxg3VXTdXoYQAFV0IvtBir0UMM9+22OJn3UeM8YvgQ8h+Hk/3U
6CMG8fIb3kYmapxPDA5vBdeDzdToJYbiSYKhRYPUOK8YrM4t+mY3RI1+YjD0
kXtcH6bG+cVw1ygj5a2lGj3FsCTRPtfYivQhBudrxTdmjFTj/zNi+PV9gleQ
nPQjBs87W2+eVqrRWwxHm9fxHqpJX2IIDznlnDtKjX8/iKF8hCiqfDTpTwxv
9owQ1o5V4z6I4XKfmIQaO9KnGHiSn8PK7NW4H2LYviXiUQ6Qfjvnnf1gTepE
Ne6LGA71WX0gfjLpu3M+70AIclDj/oihzTHxkJsj6V8MERAd3s9JjfskhveW
J7w/OhMPCWy29mqInk48JLD/yecNM12JhwR+bv67pMONeEigVLRw6Z/uxEMC
6e0hdVNnEw8JpPw071yBB/GQwKkM86iNc4iHBMaNb33OmUs8JGDgKfMK9SYe
EvB3PjtF4KPG3zcJ/N3y95+/zCceEuibNr/UZCHxkEBZaEta2iLiIQEji7V/
bVpEPCSQeFk+RXsZ8ZBAqmmtrrsv8ZDArHXpG+QriIcE6k9PuXjLl3hIIHm7
1zP7VcRDAq9t7NNvryYeEvjj9q3lO9cSDwnAWHlUwlriIYHA6pIJ2euIhwSG
hUn2b15PPCRgbl58N9ufeEhhUeOYIaqNxEMKN/dKnv66iXhIwWV5x823PxEP
KXBeKHhmm4mHFAT/xGxftoV4SKHmibTlZADxkILpK8GSvK3EQwpXjyjUkl+I
hxRq9xwyHBNEPKQQubFiz9JtxEMK5a55oaHBxEMK+zkLx8aHEA8puM0sTLy9
nXhI4Uzjh8qXO4iHFAKWKTU/7CQeUnjzdN/u0l3EQwrq4NsrikKJhxQ2ax/4
rfRX4iEFXfslEUW7iYcUTi+LCc7eQzykMLzxflBaGPGQQuznNX9c3ks8pFBW
ZFsc+RvxkELemhWLt+4jHlKwG/6Hhdd+4iGDe6vGDpAfIB4ymDZpsB//IPGQ
gfDiJas3B4mHDOZ6LrI5foh4yKBpz86kxb8TDxmMHbwkftBh4iEDx0e9+348
TDxkMMHuVu9j4cRDBi/jG5KcjhAPGbjzK9ObjxAPGTwOcoiLP0o8ZDBZ7mPi
fIx4yMDXc8yMr8eIhwxaQ6PG7Y0gHjLYPejfb+aRxEMGZ9wVfrciiYcMvOYb
pTlHEQ8ZbAo70p4dRTxkUL5a2n9JNPGQQdImF4sv0cRDBjczV4zwPU48ZKB3
2sG6+DjxkIFG30jbBSeIhwxmtc9wST9BPGRwa2zV5skxxMMQxCFaaRc78/8B
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9, 3.7567219378062353`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9, 
   3.7567215054833927`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9, 3.7567212465358677`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
GGuHlx0TokcTc/erwz5xtDZ6NDGLjCoTzP8QoUczExESHr3ciIsezYzF/pvO
vUdroEcz0zt6yMMaJyF6NDPJh5N6zdyrhx7NjFvJW/eiRCF6NDPBKsE/2oO1
0eM7E9vS+2JomA6wHt+ZfAMb27RcEbAe3xnf9IluJTv0gX2//M6s2Q0jTK3F
wHp8ZzjcrH/m6kmA9fjOuIwqPVBVKAHWo4Xx62dQBElSYD1amNm76sc9WCcD
1qOFOT+gIZxvYQisRwtzMEqpjMoyBNajhYktsp9pu80IWI8WZvdjXv4BU2Ng
PVoZuNocvummMXq0MrpxVdmp03uhRyvjBm93Ls3rhR6tTEZkSNqslb3Ro5UJ
HxJsFlvTGz1amZK93tNeb+mDHq1M4FWH/vHcvujRxlicds1cGNYXPdqY/GoX
r9X9+6FHG+Pi+Lpk6sV+6NHGlKh9j7RM648ebYxuno+L35f+6NHGeGXK/TaE
DUCPdsb88rwlF1Qm6NHOrMkoTjxdZIIe7UxTmJvdxShT9GhneDEO+wOtzNCj
nQn9MnCT6wEz9Ghnfmswro+rN0OPDiZ7w0mbrYsGokcH8+mx+ZS4ZwPRo4OJ
3eS89L7dIPToYDZ+XvY15sIg9OhglhgvmFBmPhg9OphXQTktrscHowcHckNN
+wYameM8HHiwK26s4UFz9OHAmRUD/n0uGoLzcWCnceYb191D0IsDqwKjo89X
D4Ef4y7nwKWyZ9tSJg5FPw58v2JR8e7wUGDfHzhQFrLy+8NPQ9GTA/Eavs+c
bYdhHxzw2rf82uhdw9CXA04zXQs/ZwzDfjjg4vJoytVBFujNAX/PX8e0rLPA
vrgw6kuIYtBtC/TnwocBZSekQkvsjwsJ/9mx6rabJe4DF/4qLX8tibTEPrnw
Qr5rOT/fEveDCwGGOw32DhmO/XLhU3jz/FMrh+O+cGHixvO7Hc4Px765MPt1
rL//1+G4P533PzNRZGk9Avvnwm4tn6BVq0fgPnGhSa/0w52EEejBgwe6e5wi
ikagBw/OiLYvCx5ghR48MM76lqHjaYUeneePXVrovM8KPXiQlhvANUu1wv3j
QZWywDay0Qo9eKDX4ZLzcrg1evDA/2Cl7z4fa/Tgwd47/U/+d581evDgPbcy
IOe2NXrwwHVK9B6Tcmv04MH9OcbqMb1HogcPFvdp+UsxeSR68CF18KerWWtH
ogcfOko2H8uMGIkefPAQ1Bw/cm8kenSen+qZ5Vw6Ej34YNKYruKLbdCDD31f
1a6Q2dqgBx8mJ43zHDnXBj34YAdP3s8PtEGPzvd1TeveZ2Js0IMPJx7dfyC9
a4MefLgRsOFyXL4NevDB+aLyuJwjRw8NiL6aO+esgRw9NOBoRXjhdRM5emjA
uTE13qus5eihAft5/gvvjZOjhwbUtAsXX58mRw8NmGliIJs1R44eGqCzw/Pp
0WVy9NCA5JwtT3aul6NH5+f8u9hzZkFy9NCA3/8KcPINk6OHBiycHtuw+Kgc
PTTg0jpHR/1TcvTQANmFKxbrEuXoIYB+5Vv9Q2/I0UMAkc3FTR6pcvQQwKf4
WsP853L0EIDxQGmyebYcPQQw1sLdblihHD0EcGfn/msl5XL0EAB3eqH2yno5
eggg6dY9z+R2OXoIYDhnd85VoQI9BOB07+y47WIFeghgqWbteMM+CvTofJ7p
FnFrByrQQxN47/v/dMhSgR6aEBVcPytIoUAPTZg8YbghjFGghyYsz5AHZq5Q
oIcmFDS8eqjrqEAPTXBoaHUf6apAD01I+i5xNvFUoEfn/Uas2JLvo0APTdCJ
TRm6YakCPTRhm1N6TM5KBXpoQnLH0SyZnwI9NCF8xu8bBv2kQA9NCKvgndUM
VKCHEBbMGD/nXogCPYSg7mslTt2jQA8h5DtWzjc4okAPIYT4PzqpjFWghxDM
Eu+0Wp9ToIcQ0uYv4HOvKdBDCJd9A/sk3lWghxDamZPNyn8V6CGEoa805h/O
JB5CeJp6uurFR+IhhI9/rL1SXEo8hFB4bu+f72qJhxZwdpo++6uNeGjBft9n
N+cKleihBbaV/cZ/FivRQwt+75961b2vEj20IMjW61jMYCV6aMHMQmn0Uysl
emjBrTKd1W9tlfj5qQW8vXrHHtkr0UMLksyLjCOnKtFDCxbYSGZPdlOihxac
+jOtf66XEj20wMc5r2nWYiV6aMGn249XX1ipRA9tuAt3J1WuV6KHNnw1HX9e
FqBED224lZZlPmC7Ej068+rpA3TDlOihDQ9gPafgkBI9tMHx+oLlxyOV6KEN
CR075tmfVKKHNgSm5fk9PqNEj87zUyKsRycr0aPz+k+lsQevK9FDG1Kmfea1
3lGihzaE33ybn/lciR46MM7aVqjXmVkPHUgeJTurlUE8dMDdQ7WuKYd46MBI
7zEvEwqIhw5w1hkeOlpCPHTA4T8u5YJK4qEDsxvPJKTUEw8d2BrwpbB/K/HQ
AbG0yPdXngo9dCDvf0v/fK+lQo/O1/PzV/YxUKGHDjzXXfjbJCMVeuiA0+Nz
Yxb3U6GHCF6Yfrs4d6AKPUTA6/W4n+swFXqI4MGEXsHW1ir0EMGrUTE/fVGq
0EMEq5IDxl0erUIPEfzc0cdrnr0KPUTw8pKPxekNKvQQweCb7aKfp6nQQwRh
Aufe5TNU6CGCCv/P42fMVqGHCGpeal2NnatCDxG8yb56pXCBCj10IW/vEw/D
ZSr00IWgeAgZtVKFHrrg3etd9dS1KvTQBS4zKS7FX4UeunDhjbTFbrMKPXRB
P+jKfrNfVOihC3sybevqQlTooQsbLBpn3QxVoYcuxFhs9l2/l3jowqWI6uQv
B4iHLrwvfBVkFU48dIE/Z9Zc/wjioQtXzNennDpOPPTgXX3dsoexxEMPtpU1
B+TEEw89GJYitCg8Qzz0IM3zRXjueeKhB/Kw0aVPkomHHiirf36RfIV46IFW
Su2nX24QDz2Y9+B8xeTbxEMPAiale3TcIR56IEnb7J+YSjz0YEtb+kTXx8RD
D/J/yehb/JR46IO765aWtS+Ihz5c+vhI7+tr4qEP3itlGxdmEg99MMyOd32U
TTz04dRou3sDc4mHPiyQ2Z3V/kg89EHfck7FtULioQ8bdcyzq4qJhz74640p
Ny0lHvqQ8u2aYnIF8dCHc+VL7s+vJB76cCgp69aaGuKhD3HK1fbr64mHAeSI
AlesbiIeBrDE4rdB81qIhwFMS9augHbiYQDyHe+T+nPV6GEA73Iadn7jq9HD
AIa4OCRc01SjhwEET2zR26StRg8DcNF4dM9SV40eBnDscFlNhr4aPQzAKfRW
6RaJGj0MwOfxg3VXTdXoYQAFV0IvtBir0UMM9+22OJn3UeM8YvgQ8h+Hk/3U
6CMG8fIb3kYmapxPDA5vBdeDzdToJYbiSYKhRYPUOK8YrM4t+mY3RI1+YjD0
kXtcH6bG+cVw1ygj5a2lGj3FsCTRPtfYivQhBudrxTdmjFTj/zNi+PV9gleQ
nPQjBs87W2+eVqrRWwxHm9fxHqpJX2IIDznlnDtKjX8/iKF8hCiqfDTpTwxv
9owQ1o5V4z6I4XKfmIQaO9KnGHiSn8PK7NW4H2LYviXiUQ6Qfjvnnf1gTepE
Ne6LGA71WX0gfjLpu3M+70AIclDj/oihzTHxkJsj6V8MERAd3s9JjfskhveW
J7w/OhMPCWy29mqInk48JLD/yecNM12JhwR+bv67pMONeEigVLRw6Z/uxEMC
6e0hdVNnEw8JpPw071yBB/GQwKkM86iNc4iHBMaNb33OmUs8JGDgKfMK9SYe
EvB3PjtF4KPG3zcJ/N3y95+/zCceEuibNr/UZCHxkEBZaEta2iLiIQEji7V/
bVpEPCSQeFk+RXsZ8ZBAqmmtrrsv8ZDArHXpG+QriIcE6k9PuXjLl3hIIHm7
1zP7VcRDAq9t7NNvryYeEvjj9q3lO9cSDwnAWHlUwlriIYHA6pIJ2euIhwSG
hUn2b15PPCRgbl58N9ufeEhhUeOYIaqNxEMKN/dKnv66iXhIwWV5x823PxEP
KXBeKHhmm4mHFAT/xGxftoV4SKHmibTlZADxkILpK8GSvK3EQwpXjyjUkl+I
hxRq9xwyHBNEPKQQubFiz9JtxEMK5a55oaHBxEMK+zkLx8aHEA8puM0sTLy9
nXhI4Uzjh8qXO4iHFAKWKTU/7CQeUnjzdN/u0l3EQwrq4NsrikKJhxQ2ax/4
rfRX4iEFXfslEUW7iYcUTi+LCc7eQzykMLzxflBaGPGQQuznNX9c3ks8pFBW
ZFsc+RvxkELemhWLt+4jHlKwG/6Hhdd+4iGDe6vGDpAfIB4ymDZpsB//IPGQ
gfDiJas3B4mHDOZ6LrI5foh4yKBpz86kxb8TDxmMHbwkftBh4iEDx0e9+348
TDxkMMHuVu9j4cRDBi/jG5KcjhAPGbjzK9ObjxAPGTwOcoiLP0o8ZDBZ7mPi
fIx4yMDXc8yMr8eIhwxaQ6PG7Y0gHjLYPejfb+aRxEMGZ9wVfrciiYcMvOYb
pTlHEQ8ZbAo70p4dRTxkUL5a2n9JNPGQQdImF4sv0cRDBjczV4zwPU48ZKB3
2sG6+DjxkIFG30jbBSeIhwxmtc9wST9BPGRwa2zV5skxxMMQxCFaaRc78/8B
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9, 3.756720810629415*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ouKmnfPsMVL8P+hKnuA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9, 
   3.756720305807231*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MXuoShh5qGAH3pFROUAeKhjcXDVNdR95qOBox8mJ6gHkoYKNc+buFuwgDxXs
e9zxt9ZW8lDBmovdtcM3kYcK+mUM+VtvA3mo4iz1wf6GXuShirZTHkfPXE0e
qigsLx5stpw8VJFzf/Zre0/yUMVtBjGPPdzIQxXbh31b4+ZCHqq466X9XhsH
8lDFvfobSkzmkYcqWu8XBE+0IQ9VzFJQ8hllSR6qeOP6yIuDTclDFU3mTBZo
AHmoYkBIsaRkNnmoYV3J3O/Xp5OHGp7Pm12+bQp5qOGLzb5jLA3JQw3fRz+5
pzmWPNQwanT7kSo98lDDTduq4u/rkoca2tQvG3ZoOHmooeYVeL10CHmoYYOv
45MZg8hDDf3atneq88lDDYeFhPpVqZKHGh6dsWzaE0XyUMdpLz9NOcslD3X0
ufF54zYOeaijh5pFrVO3mHmo44TE5n+mtYuZhzpmDMo+O7BZzDzU0WvOw8yW
ejHzUEdQiJ5Z8E3MPNSRf3FTcWqVmHmoY5+cRvLFMpp/qqNR0spXwZ9pfqqO
DzJWCryLaN6ojsZVveHO+WLmoY75MBIwV8w8NFD18FPdcW/EzEMDT2rmGWn9
R/NJDVx5Zq4/96WYeWhg4LJRdY1Pad6qgbqG8498eUjzWg08NzvbMzeF5r0a
uN/4rNuLu2LmoYGJC+MDk+PFzEMDvcbx8+JuipmHBvqlJttduiZmHhrosvPa
j1P/iJlH/3XrmtQjl2i+y8PF/9seF3Ke6uFh644lT/edpnkxD9+EXe3efYLq
4+GGbnvXHRE0f+Zh9KF1H7aFU708rHSR27k1lPx4GJuhK94aTPXz8P2Vdzrb
AsmTh5O6J4zw30159K83yVi8y1/Mvs/w8Fi9+va9fpQPD+8YPngT7EvePBw7
zkVyyJvy4qHXqpbXx9bS/JiHOZdv+JxbRfnxcF7lScPoZdQPPJT1zpSN96A8
efgp6X+1aa7UHzx08tlf+8qZ8uWhcijKFi6gfuFh0PDksdV2lDcPa/1VVrVb
U//wMHOEW4KSJeXfX39KOn+YKfUTD+N1tu6ZCOTBxwy70F5TY/Lg45/e+mGL
ZpAHH43TN+ttnEoefKzMiHx9YCJ58HEy51HAxXHkwUdHTXVxij558DEy947C
u1Hkwcc/vNraZEaQR//9nY4XmwwjDz6uq9J6sm0w/b/xsTMi8UrSQPLgY3tO
VHATjzz4uGis1qopauTBR/WRtlJfJfLgo/RC4vMUefLgY8Tn1J5hsuTBx46k
1DF7ekXMg49X57aZlXeKmAcfBU/j589pEzEPPjrrT7W71SRiHnxcvfvhLM0G
EfPgo2/yGeHu7yLmwUeDREFRZbWIefBxuMm6w/YVIubBx2HyjRNTS0XMQ4Ch
cXWpoz+JmIcAX929MeXoBxHzEOClQzuOcvJFzEOAV3df/eidK2Ie/dfvb+d9
eiNiHgIcOM9ynN1rEfMQ4HFDjwmP0kXMQ4CL9TQ0J78QMQ8BJhdfL7/8RMQ8
BBhYEHxK66GIeQgwaUvTpIMpIuYhwLJq8xsy90TMQ4AvTHJVtyWImIcAX9r/
sKu/JWIeAjyZ3+q7Ok7EPASY6GS8rSRGxDwEqDpCy8P1KnkIMNy1bNS7KPIQ
YEZrR7r9efIQYFh80tzM0+QhwL2avjetT5KHAL9sDqtNP0oeAtSo9lCyOkIe
AjSbby2TfpA8BGjuEpdnFUIeQlRbWR74aj95CHFfzAIV20DyEKIhf+H67N3k
IcQWO+cYxx3kIcTc7FuphVvJQ4inn738x3MzeQgxgSe7pnIjeQix0v2ZjPd6
8hDi4AE+G1vXkIcQtfV9EgNWkYcQAw+OzVRaTh5CXJTGTTnmSR5CVGpZ7T/C
nTyEqD8qTe3GQvIQotXX9ZtmO5GHEIvOl19Ln08eQpS1OJjgYkceQvQ9ln2w
ypo8hGhfO3z6NkvyEKLW0tKbSmbkIcTtcX+1nkHyEKLFjEDViSLyEKKzUNTw
dBZ5CHFz15gol+nkIcR5C+5q104hj4EYa13wJW6iCP8PvAbF0g==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}, 3.7567202104514303`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AiaE7fhvT37O+R+e4YM6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13lYjekbB/CzL531XcgoFY1kHWSSpd5bSkVIGlHJkU72UFl+NEq2LCNL
1smQKZo0lkZJxCBk7MYv21gylozhR9rX36n3uZ3rOu8/9b2ucz3X89yf55z3
vjtHzAs0igQCwRahQND6l38+cvhf97CUC1XO5hxYYLf63ThzXsYe8Slbas4Z
892t7v9szjeutz7mXO3cuqA525tWK7D79CX7li01rWjOC1qXm2/Oe3a3PuZ8
sap1QXP+d1zrBs25bXtsxZfs0bqcuzlHtT3m3HrasBRzbjtugTm3ba/MnNuW
s/r8Jbu0PebcVr4wc2477mpzbtveEXNuW+6+OfNPpYVHpYVHpYVHpYVHpYVH
pYVHpYVHlYVHlYVHlYWHObeV70KVhUeVhUe1hUe1hYc5b25bsNrCo9rCo9rC
o8bCo8bCo8bCo8bCo8bCo8bCo9bCo9bCo9bCo9bCo9bCo9bCo9bCo45zk2uP
bqLrON6jjpuY2tX5xKlqrm25+XVc1iPvul+MlRzvUcclLtnvKLN9w/Eeddyu
epuHM+/Xc7xHHfcxpGB/HjRxvEc9d+JWhZ/y5xaO96jnYl5Nbfm1WQC8Rz3n
divtbfUZAfAe9Vzgyk6PTvYTAu9Rz/2eWaD7kC6EF20e9VyB2rsxSCMC3qOB
i18d/eRMrAgGtHk0cFlKqyeq/4qA92jg1k9Le+3RTwy8RwNXUiooi0gWA+/R
wHkK7VbueSQG3qOB88070auDswT4KjVyshUHfOwXSID3aORy7zqsEudLgPdo
5HacCU7oViMB3qORG2zf2apigBR4j0buQd4hxet5UuA9GjmDrnauV5YUeI9G
7rrTxN8DnkmB92jiDPNP5jxhZcB7NHFnl/U/n+cnA96jiROsWNhv2nIZ8B5N
XM5N/3VRv8mA92jiJoSfP+f6Vga8RxOX3evYt+4OcuA9mrkBzbd33J0oB96j
mYsPTDg4dJuceDRz/m+cbx+5JScezZxX2KosL62CeDRzxxJ+WtN+rIJ4NHNL
3H/ZnrRVQTxauOKvLr/IfaggHi1cWJZgVl87JfFo4e59jtGIpiuJRwsn6Zz0
97TjSuLRwv11YW4p1aQkHi1c4Djf0L/9rIiHAF4aMjNjdlqR8wgg2nDmh/pX
VsRHAI2Xe5yXDlCR8wnAtZ9qe1KSingJQJTgS9+7rSLnNX3eQEsv2amJnwCO
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
IpIn
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13k8Vfn/B/C7uC6u5S5oR6WiyN30bZHzbpNQpEjS3re0fEuqmZIRLaY0
bZPKUkaRqSnSvkymRYuadkSiLClb2bdsPzrvD4/f5/zj8XKuc8779Xy7l4FL
1rn/l8fhcOq5HE7XV/rYapg0tSBgJ/P/c3h3vmGyq3zmjRjqfHx3jorsOs5S
r0/qzhUzu75zkfr5K91ZJyvOb7zOdep6N7uzpc+B+/UWt6nr/9Od4zt/Oivu
LnW/e91Z9eNIpe7/oDun1lt03uEh9TyPu7P7jxumUc/3pDsXBHRd8Cn1vM+6
8/qux/N7Tj3/i+7MHq+oeXqy448bvKbm68ldd/M58IaaN707/xgnK52aP6M7
m3Y9jkkm1UdPXrG863hL9ZPVnbuuZpiURfWV3Z0bui5Xn03196472/+4YA7V
Z0/+8Xi73lP95nbn58+6jlyq77zubPTjAT9Q/ffkH5fz+Uh55FPz5FM++dR8
+ZRXATVvAeVXQM1fSHkWUn0UUr5FVD9FlHcR1dcnyv8T1V9PZvehmOqzJ7P7
UUz1+5nal89U3z2Z3Z8vVP89md2nL5RHCeVRQnmUUB4llEcp5VFKeZRSHmXd
+eAPjzLKo4zyKKc8yimPcsqjgvKooDwqKI+vlMdXyuMr5fGN8vhGeXyjPCop
j0rKo5LyqKLmqaJ8qqj5qiivKmreKsqvipq/mvKspvqopnyrqX6qKe9qqq8a
yr+G6q8ns7+fNVSfPZndjxqq31pqX2qpvnsyuz+1VP89md2nWsqjjrk7/GHH
oME8YD3qmOTmlPErv/KA9ejMG9dkWzvygfWoY/xUR0w22/OB9ahjOBM9/xf6
mg+sRx1T9fmiZopKA1iPOubgrVqHQzM0gPWoZ8zmmWUPtNIA1qOegaenqh69
5QPrUc8Ef35VtnQuH1iPzvM+bsoLd3jAetQznLHbLnqf4ALrUc+43Q1YNGcM
B1iPBsYsb2JCxKM2hvVoYPLNvCbEerQwrEcDAx4R0QvsmxnWo4FZZA9HLhxv
ZFiPzte/H+vxencDw3o0MMHjSpK0/esZ1qORWcTYx3Kb6hjWo5Hh9Fs4eahr
PcN6dOaJLz9cW9jAsB6NzF2hsD3IqIlhPRqZ/KqZs094f2dYj0YmNvXfG297
t6FLE+N3+2ie2wAOejQxkMv1E7zjokcTEywqePxPIvFoYpJ7eWhWRAvQo4nh
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
L7fo/w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1nCVQ+Shgh14V0oliDxUMKi5cobqPvJQwTF20+LV95CHCjbOXeDH30UeKtj3
tOOfIdvJQwWrL3bXjthCHiq4LW3YP3qbyEMVDdWH+up7kIcqWhk8jfxjLXmo
oqC8aKjZKvJQRc4Do3QbN/JQxR3jo566OpOHKt463NK80ZE8VDF8UMtaP1vy
UMVvab5Djy4kD1XUPOAid3k+eaiijsdF7f2W5KGK7glWhQtMyUMVLU9rfx0M
5KGKe4KLxCVG5KGGdSULam7MIg81PJ9rVL7DgDzU8KWP9zhLffJQw/eRz+5r
TiAPNYwY0360Uo881HDLjsrYB7rkoYbz61dqhYwgDzXUvALpK4aRhxo2eNs9
mz2YPNRwW9vOTnUeeaihVvDBbZWq5KGGx2avnPFMkTzUcfrrTwZnZclDHTff
/Oy1g0Me6uiqZlFr3y1iHuo4Ob752ox2EfNQx7TBWWcHNYuYhzp6zH2c0VIv
Yh7qCPKRfxR8FzEPdeRd3FL0sFLEPNSxV0Yj8WIZzT/VcWaC+5vAzzQ/VcdH
ae58z480b1RH48reUId8EfNQx3wYBZgjYh4aqHrkue7EtyLmoYGnNXNnDvmP
5pMa6H5mga/saxHz0ED/laPrGp/TvFUDdfUXHf3ymOa1GnjOKMstJ4nmvRoY
YHzW+eU9EfPQwPglsf6JsSLmoYHrJ/JyY26JmIcGbn2YaH3puoh5aKDj7us/
Tl8TMQ8N3Dav+uHRSzTf5eKyP3fGBJ+nerjYumv5833/0ryYi28PXe32O0n1
cXFTt43TrjCaP3MxMmRD4Y5QqpeLXx1ldm8/SH5cjE7TFW0PpPq5+P5KnvYO
f/Lk4tTuyTq+fpRH/3pTjUV/+YrY9xkuHq9X3/n3NsqHi3f1H70N9CZvLk6Y
6CgO8aS8uLh+TUv68fU0P+Zi9uWbm8+tofy4uPDrKf3IldQPXJT2zJCOdaU8
uVic8GdtshP1BxftN++vfeNA+XJR6SBKf1hM/cLFgBGJE6qsKW8u1viqrGmf
R/3DxXQd5zglS8q/v/6kVJ6WKfVTfz3a2/dOAfLgYZr1wV5TY/Lg4WjPsYeW
ziYPHhql+uh5TScPHlakhacHTSEPHk7jPNlzcSJ58NBWU12UNJY8eHg65658
3mjy4KH9sPcFDdrkwcOyksg4NS3y4OFZQ/uTE4fS642HHy3U9s4bRB48NDQo
TQ/nkgcPxygemNihSh79+3u6ym+pEnnwUHIh/kWSHHnwMOzzwx4tafLgYUfC
w3F7e4XMg4dXF7SZlXcKmQcP+c9jF81tEzIPHjqMnW59u0nIPHi41u+xoWaD
kHnw0DvxjMCvRsg8eDghnv/xa5WQefBwpMmGIzYVQubBQy25xikPS4XMg48H
Y+oejvkkZB58fHPvpsGxQiHz4OOlkF3HOPlC5sHHa35Xiz1zhMyDj5cf7OR+
eitkHnwctNByonW6kHnw8YS+6+QnqULmwUdXPQ3NaS+FzIOPiUU3yi8/EzIP
PvoXBJ4e8ljIPPiYsLVp6uEkIfPgY1mV+U2p+0LmwcdXJjmqO+KEzIOPqTY/
rOtvC5kHH0/lt3qvjREyDz7G2xvvKIkSMg8+quoMcXW6Sh58DHUqG50XQR58
TGvtSLU5Tx79ecUmLMj4lzz4+Lem9615p8iDj198DtWmHiMPPmpUuSrNOUoe
fDRbNE8q9TB58NHcMSZ3TjB5CFDNvdz/zX7yEKB/1GIVK3/yEKA+b8nGLD/y
EGCLtUOU3S7yEGBO1u2HH7aThwD/TXl9zc2HPAQYx5Ve99WLPAT41SVFynMj
eQhwqMJmr9Z15CHAEWM3x+9ZQx79+zk8IUNpFXkIcGmybNJxN/IQoFLLWl8d
F/IQ4NjRyWo3l5CHAOd+27jFyJ48BPjxfPn11EXkIUBpi8NxjtbkIUDv41mH
K+eRhwAX1Y6YtcOSPPr3u6L0lpIZeQhwZ8yB1jNIHgK0mO2vOkVIHgJ0EAgb
nhuShwB9usZFOM4iDwEuXHxvZK0BeQzCFboOf+6bIsT/AWzTx6M=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"pLab\"", TraditionalForm], 
       FormBox["\"\[Sigma]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 66.96117004260913}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resonance\"", "\"Elastic\"", "\"String\"", "\"Total\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.754128061028618*^9, 3.7567187159031878`*^9, 3.756718837592066*^9, 
   3.7567196965683937`*^9, 3.7567197606439037`*^9, 3.756719954569141*^9, {
   3.756719998329381*^9, 3.7567199989975758`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Rasterize"}]], "Input",
 CellChangeTimes->{{3.756719723413721*^9, 3.756719757157803*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnQlUVOe9wJPmvL60abP2Nec0bU/Tk6Z9fXm+tnGNWUxqjDGxiSZpkiaN
UVAU4gqCIMimoBJENmVXWQRFXNj3fYcZBgaGfWdYhmVg9p33v1ycjAMMM8jM
MPD/nRvPne9+997/EPjNf777LS/uObxzz2OPPPIIE/7rePSRR4j9SQRBEARB
EARBEARBEARBEARBEARBEJOCz+cfPnzY2FHoQHx8vIWFheV9fH19jR2RVigU
ioSEBGdn55MnT0ZFRUkkEmNHpBu1tbX+/v7GjkJb4Kedmpp6cgr4scvlcmNH
hCC6YXJmrqmp8fLygj89YweiG1VVVT4+PlKpFCwRGhoK3jB2RLphWmauq6tz
cXHh8XjwA798+XJ+fr6xI0IQ3TA5M4OTw8PDIVUeGRkxdiw6UFJSUl9fT+5T
KBTQhXHj0ZKwsDBbW1t7e3tra2srKytPT09jR6QV3d3dfX195D6DwTCVL1YI
osTkzDw5JefS0tITJ05kZ2ebXPIMWVxERERKSoqxA9GK4uLiqKioSVPLmVWB
/Nnb29vYUSCIbpiimUkg8nPnzoE6jB2IDsBHiaWl5YULF0yl5RM++CBtrqqq
Mi0zt7W1wbeSiYkJgUAAWs7IyDB2RAiiA01NTZWVlaZlZlBEUlISuU+lUk1F
F0NDQ+T3a4lE4uPjQ6FQjB2RtgiFwjNnzsBniqn8qIGBgQEbGxsPDw8HB4f4
+Hj4nmLsiBBEB7Kystzd3U3LzD09Pba2tmw2WyQSwRft2NhYY0ekFTQa7ezZ
s5IpINUvLCw0dkQ60Nvbe/ToURMys0wms7a2NrmWLkQf7Nu3z9ghLAT4ugd5
hbGj0A3Q2qlTpyApgm+sPB7P2OFoBVgiLi7Ozs7u+PHj4eHhJtdrrqCgwITM
DDg7Oyu7VpaUlMxbv6io6MaNGwYIDDEwJmpmBEEm0czLFzQzgpguYGb4UnD+
/PkTJ04EBgZyudyJiQn4o7ZRYWBg4MyZMx4eHiEhIYmJiY6OjtnZ2deuXTt3
7py9vX1QUBCfzzf2+0AeQCoTwv/EcX6vhq13pGpwvGFJVWBzO0dZlapbV28K
k5mrWjLUncrqzVS+lHJ61DbhYJWIRZtZrlZBLmIb+/8SgswJmPnIkSMjIyMK
heL69etRUVFg5oMHD6rWSU1NJfsQCoXCU6dOlZeXw1lHjx4dHR2Fs2JiYuLi
4owUPjLNPgRBTJNZ/6LBsREREeQ+i8WCfHimmdvb252cnPLy8vr7+yMjIysr
K+Gsq1evKs9ydnbWp3UQneln1sH/8ZE9a5Qbc++GYp+vi+gXixp8yS224Buo
o3w5c4MKSRXWGuqQFcj9WaupVpi1jlqFwlpPqJOd/S/lFp26+XbGdtWSjMTN
ZJ2badt87v21q9SRXXledRtK/hcrwxx2oJraIWWF3si/DiZ/IeUy5/q7UMWQ
dQx8OwxpCYZNomrmoaEhSIlnmhmAwrq6upSUFBsbGzUzw1knT57U8naIwYDf
AVZrK2wdJcW10VfqD30KfqY4H1Kro811tLydgeu0MLPAzD3DlQu4FCtjb1/M
BnaVN9SZt1ljCf7xYkhLLSR9mPnIkSOQ9yoUiujo6OvXr880M5vNvnDhgkQi
kcvlsEOlUsnWjOHhYfIspaWRpYPa74BCLqO4HAU518VGGiskbdD+V7dvhApm
buydcyoekWSisTclvtgsn35eJOGoHhorc+sOe6k3ei38K+jKeqiIp9A+7CWF
iYY9abKR62RmUKu3t7ednd2lS5d4PN6sOXNCQsKJEycgYfbz8xMKhXBWcHCw
l5eXra2tv78/nLLY7wB5WGb+DogFwrYD73fu+7toCT+x1f5Xl83rBjNXt83y
QSMUj2fR3P2S1kEFcruU+ia9K0FZYYweUXPtj91hfwAzg6UNGfaSwkTDnjTZ
yB8m7FnNrAaYOT4+fsG3QAzArL8D9LgoSJvpt0xjnJpmJDIBKLeg/nu1csil
QzO3wqHEiqOt/dkjnDbIqyNzP4WSvLpz8O2BqNN8/drdNcL+sv5bW8HPo0Un
eW2JUk6vMd4HgmgFmnl5MOuTX8iWmeYbacd3GSmoRSYgZeOltLfAwM3MjCE2
o30gH1Jl38TVl9M2dQw+MNxYKhelVTuAnDNrXEDOjK7bsM/oSZaL2CP5xyFz
Jre+668N53w3kndkvOaylNMzqZAZ660hCLIsmet7E9XRatBsvZDLNXA8+iC/
3ssn8W/KJoup7W93yw9xBAMzKysU8jTKSaiTT/cqZvjDTmjGe20DeXKFTDRU
I+jJY1d5D6V83XNtlVLUPVf+zLy5eSh992ix4zjVn9eSIGSWgrEVcpyRBkGQ
hTCXmetiI0f2rGlKSzZwPHpCLpeO83ra+nNrO29C5swTsjRUBjknVx0nm50v
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
7DX36quvPjLFV18RQ3Lq6+u3bNny9NNPP/XUU1u3bu3q6ppcFmbWplr3vk20
E+b6DmbZoFBMZpR3Esten8uktw3PfwKCILOZeS5U25lnZYWYud3iXZrtbn0H
szwYHOV5Tq2veiqkaGgZTeyJIHqisbGxbApfX1/QaVpaGvmyd+7VOtDMJM2W
H9CPfKHvYEwdoVh6K7cZUuXd7qmwI324Za8RZIXwwQcfPDIbzs7Oc50SGhpa
VVWl4ZorxMxN3/2DfuRzfQdjuoil8pB7tZZTPZY9rpb1DnGMHRGCICaMlk8A
64/8E+RsmJBMjvr2YbvAfHDyXs/06sYBY4eDIIjJo2XOTD/yRbPVh/oOxuSY
4IkD4qngZMiWYzIYQjGuQ4ogyCKgpZlptrvbLd7VdzCmBbV5yMora5drypVk
OleAa4wiCLJoaGtmuz2d+/6u72BMBYViMiGvGZx89GJuY9eoscNBEGS5oaWZ
qY5WfeZv6DsYk0AmUwTfoX3jmuIVXckTSIwdDoIgyxBtzXzq4KD5Bn0Hs/SR
yuS+N6pByxFJdXI5LsSJIIhe0LJvBuWM7cieNYYJacmiUEz636SAlq9nMIwd
C4Igyxktc2bKGXsws0Qo1Hc8S5mYDAZo+WoyXYHJMoIg+kRbM3/vRkx8zWbr
O54lS2xmI2jZ7wYFGzGQxUUhFSu44zJWn7SrUdJQIabkiauyjR0UsvgoFIqE
hARnZ+eTJ09GRUVJJMRTKgqF4urq6uLikpycrOsKrcTpF8+AmdkDK3QYBb2d
BVredzZDJJEZOxZkqaMQcOVjLDGtUFSeIakrEZWnC3NuClKv8eP9eNc8OJdO
TPgcHvcwH7V4fdTyzdEDb85c+2P0IPaDWjSKi4tXr179k5/85I9//KO3t7dc
brQ5E6qqqnx8fKRSKcQQGhqamprK5XJtbGzYbDYUenh4MBg/NJNq+wTwkjfx
O9PVqa+glzACkfS4f575mXR6+4ixY0GMgELAk7NZ0p4WaStNXFssKkkW5t6a
8P6O42tNmDbAduJ7q3HXf7PtPh49tHlk32uaV1wa/e6dMZsP2Y6fjx56l22/
kxPkwIvx4t8KBHXDZUUVmRJ6mbSj3thvepnA5/OfeeaZEydOMJnMoqKi559/
/saNG8YKpqSkpL5++v8spMqXL18uKysLCwsjS7Kzs6Ojo5WV9z3IXNekhvjD
L9VAQ4PmW/PZ49Sgi1AZdh76fSwVwhLrIGEupeNq18sHOW9CxuqVMTskzTVi
WpGoKFGYFce/fYl3/Xtu8EnOxSMjVm+BZscObxkxXz+PaUGwdh+DmSfO7edc
suOGufBv+gkSw7hBDpAki6n5ksZqWW+rjNWn4E1MynCUqEEZGhry9/cX3n9A
5uTk9MEHHxg3pMmpmf8jIiJSUlLS0tISEhLIQiqV6ufnp6yj7UiTKyHwS8is
pWmoo5DL6qy/In9d2w68P9zZ8TDBLxGqGwdBy0G3Nb1xZImgEIvkI/3SrkZB
eowg5aowL0GQHAGe5Ea4E5nt2X3sU1+OHds2uv91Taa12jRmvW3U8i22zYdw
FjfMmX/jIv9uCKhbVJoCpoXMmcifuxvl4/gdatEQiUTkQlFPPvnkc8899+ab
b967d095NCgoCFJfkBU47ZFHHqmpqSHLuVwuvGxsbIR92FHOPge56GOPPUbu
d3d3v/vuu0899dRHH30E6vvrX/9q2HemDuTGlpaWFy5ckMvl6enpqmYODAxU
VtPSzHUx1+CXtqu0TEMdRtJdciHX+vjYQbP1bQe2DrY0Q7lMLK27EU09ub/6
rCNvxJR+mbkC8UHv7KMXc/lCHFFiNBRioXxsCNJOCaNSXJUtzE+Y+J5oSeBG
uHH8bcY9zNlOX4wdfX/EfN2cvjVfR2S2Dp+Ou387cfEIN/TU+OndcK4wK1ZU
miqmFUrb6mR97XLOGLjd2G93hfL1118/8cQTIGdII8FXx44de/TRR5OSksij
GzZsgBIWi6WrmWUy2apVq3bu3FlZWRkSEvL888//5je/Mcb7I4AEvq+vb3Jq
qVkfHx8KhVJeXg5RkUezsrLUWjO0uSb9Viz8hrcXFWqoQ7PdzTTfKJiYgP3G
5Hsg517zN6gOlrAD5w6ab4B/Gw5/KpeazEO04Du0Xa4puCiJPlCIBPJhJiSf
hG8pucKCO8Qzshu+vKtnxqw/YNvvIPJb8K2GZlvz9WNHtrAdPx8/s4fjewwS
Y951b0iSIVXm3bgozL0l7WTIh/sVAp6x3+tyY4LP7GaVL2Bj83pmvWB7ezt4
FYSsWvjtt99Crkvuq67HqpOZU1NTf/rTn05MSQmwsLB44YUXFv8noh00Gu3s
2bOSKc6dO1dYWMjj8WxsbOATB74yuLm5kW+EREszMxLvwN9Cc3rqXBVAyGBg
quMBZQkk2A2HPoGz+s1eg4RZLBBSA4jHiPQb0XNdZElR20r0xwhLrDN2IKaE
QsQXM6rEdcUSehnRJyH7hiAxjBfnww1zAXmCQtmO/xwxW0dsGhpvzdaNfvc2
kdb6HuWGOfNiLwjuhcKlxJVZkoYKaVejtJ2OLQlGpLIlwufeXxewFTP8Zr0g
mHbHjh3kcqtKrK2t//u//5vcX7CZL1y4oNp8ER4ebkQzKxSKuLg4Ozu748eP
QyRkrzkqlerk5GRvb5+YmLiAXnNNacnwJwP/zlWBbMqgJ8RpuIhEKOzeu4l+
1ATWRuEJJIcuZMOG7RiAQsgnOyeAGPlxPnxQZfIVECZoE+QJCmWf/AzSV02y
3ffa2NGtkAaPe5iP2Xw47v4t6BqkLcy5SfiWXgr5rWyoh3hGhsN4ljyj3M4W
ZuYCtuGJ1nkvDnaqr6+3tLT8j//4D1AWWahm5vz8fLJczcyQhZLlSjOrNSyH
hoYa0cw6oeXo7Na8XPj7qo+PnasCORRlrGeeRaIp7seH96xlM5d6P4fQe7WQ
MFObh4wdiOGQjw5I6OWcIEeOnw3nsv2E1wGiPcFa4/My0reOn4977uX42/Cu
nuHfuEj0JbvuLa7OIfLbnhb56CAk0sZ+c8hSB4SclJT09ddf/+pXvwLHvvji
i15eXsq+x2pmhi/+ZLmamX18fMjy3Nxc0sw5OTk//elPx8enu4qB6EzIzNpU
ay8qJFLiW3Oauc76qw6LzfNepzGFyL3pN6/rEKLBobUMgZZD79YaOxA9Ammw
tJVGNMlGnSVGPTw43mHU6m2iJ9jp3VPPy5whvyU6J+TGiyoyBamRYkqefJip
EAmM/SaQ5QN8nQe1rl27NjAwsKWlRfV7PdgYygMCAmQyGWnmVatWOTg4UCgU
NTOvXr0a9N7a2rp9+/aXX34ZCsHt//d//7djx46Kiorg4OD/+q//WmZm7qqo
gD9YWmToXBV69r5FO2E+73X4Y6Mss7VUN2sdQjQs41zRd99nHbqQzVtO7RgK
hWyoV1yVPXFu/7jbN2O2H6n2W2Dbf8K5ZCdIDCM6KlRmydn4xBMxNE8++eSB
AwdUhVxdXQ2OhZ1XX32VXLD1q6++Is1cVVX12muvWVhYzGxnfv/99+FSr7zy
irJlg8lkbtu27amnntq0aVN8fPwyMzOzlkaY+UrIrEfZzH6iv5y3mzaXavzu
4yar7TqEuBhIJHJq81BqaXtxbd/oxJzzMsnlivPRFd+6pTZ0mPYDJoVELO2o
FxXcnU6Jrd5WbYKYOLuPF31emJ8gbaMrxCt6lipkiQDCvHDhgvKlWCyGEmWP
MmVrxspBSzP30+nwR00N8Z/1aGtuzlSnixhtLkVxPcbas86Q09Y1do2anUn7
xjWF3EC8/jcpfSzuzJpRaQ1Q4VZus8FiWyzkE2OSupIJn0PEeIqTn/0wcs1s
LfvEDk6ALaTExCiJTpy/FFmKnDx58umnnw4ODqZQKBkZGR988MGzzz7b399P
Hp3LzCKR6PDhw4ODg4YN1hBo+QRwpKuTMPMl71mP1oRfhqPd1VXa3LEmLFD7
yg9P/zDX6nzWbvfUSwlUsHFdKyv0bi28hO1aSj2HP71+n1Qmj0ontHzxRvWs
s8nJuRPykYGl0nNAIZex+sSUXP7dEM7FI2M2239oIjZfN+7+LffqaaJDbysN
n74hJoFUKvXx8fmf//mfn/zkJ88999yOHTuampqUR0NDQ5U94lRRbc1YZmiZ
M0+b2e/srEcpHsTszYL73bk1QybYdbGROkS5UCRS+cmgQnOP9LbeB+YvHRzl
XYwjliaBXDognno1mb7nNJFU+96oBkUrq8nHhwXJEeMuXytbA0b3vzHuvosb
7ipIuSquKQA9Thpm6iqZVNrewLvixgk4PnF+/6jVJpV5GzZDCf+mn6gsTVJf
PomtEwhi+mhpZt7oCDnyetajNLs93Xs3aXlHnRqlH5Lk4jbwbW5196xHm7pH
feKqyYYOszPp/jcp0w8gFApJYzXn0omRvcS4RfaJnZxAu3G3f3P8raGQferL
UYuNqs22UMK5bM/xOyZICpcN9ixKXq3gcyTNNcKMGPgUgOuTkUxta8dsP4J4
BPdCiT4SI/0Pfy8EQZYaWpqZz2YTOvVymfVok+X2hsOfan9TpvnrVIf92tdf
GLzezuMeCadCihQaVQlHlcNJFLwJQUYM254Yugj65YY6S5qps5hWLpcNdIEY
BanXuMGO467/Vu11Bgnt+Jk9vGgvUXGytLtJy+nFFOMjgqQIXqQnJ8iBbb/z
B/Pv3QBJOzfMRZgVJ8y/LR9lLeiHgSCIKaGlmSVCIWHmM7azHh0031Bz0lL7
mzIO7mg8+LH29RcG/ZKXt9356kYtng7IZYKcmxN+x8hRFZAkC9Kj5FxdFnCR
y8HhwoK7YFdIaNl2H/8gaouNoG7uFXfw/JRapxur5aOD4tpiQWIYx/fYmPU2
qDm8ZzVR/8Cb4557eTFeosJ70q5GhUS80B8AgiCmipZmBuYy8/3WCXftb0p1
tGSab9S+/sJosdyWZneUSJglYkFqJD8xFMQoLLgjaaIohHzQo3yYKa7KBmeO
HX53qhvDGo6/DdFUq1iEpmOFgCdprCaaI8Kcicki9q5XTYNHv3vnB3Uf/PuE
lyUxmuNWgKShwkAN1wiCLGG07JsBECNEHK1mlndXVxFdna8Ga39Tcu0q7rAe
v5h3VZQRPUCsP4GkdHQqI1WfFnL/G8r9ibP7IKGVdsyzLsDDoBAKRMVJgpQr
/HshxPQ+AceJadUrs4hniAiCIA+ifc7cZ/7GrGZuTEkCvzES72h/07qoCH13
nKs+56T0MNv5X9zIs+KKdGKasrY6Ye4tyJM5QQ78O0FiWqFurRYIgiD6Rycz
0+zMZpbXRoaB/boqKrS/aUtWBjFX851b2p+iK2373xs2Wwt3EWZoNf4FQRBk
6aC9mTssNtNsd88sp/ieJRpLe2afE3tWBhobid7RwRe1P0UnmHW1cP1G94Ps
U19isy2CICaH9mZut3i3zvqrmeUUt2PDe9bKJDosPSni86eeJ57Q/hSdINeT
7aos12vTMYIgiJ7Q/glg64Ft9COzTHpPDDPZ97au9+3eu2nWtpFFgXZ8V6/5
Gya0rBWCIIgq2ufMTd/9o+HQLMNJGg59soDOyXBK48Edup6lDSDkfrONNVpM
SYogCLI00d7MxOyd3/1jZnn7/i211v/W9b5TmfacA7r7aDTqJe+BBU1U0kul
juxZUzPHtHgIgiDGpba21t9/WlAUCsXV1dXFxSU5OXkB6wAC9CNfNFt9OLOc
eNb23Ue6xkZxPw4nzjoX6FhPb89eYrBzh8XmCZbO6z3Rwi5N9RUp0/VEBEGM
xQcffPDIDNatWweHhEIh7NPpdBCXg4PDc88998tf/tLMzIxKpb7wwgu7dxPd
Es6fP//b3/72xz/+8e9//3vYJxUXFBT0zDPPgOJUp6Tr6OggZ9f/9a9/DUqU
G6OHgNLMEJiNjQ2bzZZKpR4eHgzGD5P06mTmdot31Qo5Q0PExHFHv9Q1Nqq/
F5w41NIy8xDltN2w2VrKRU+i/0aAl85XdrQaNFsvFuCUawhiMoCZt23bVvYg
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
   "], {{0, 0}, {478, 229}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->{478, 229},
  PlotRange->{{0, 478}, {0, 229}}]], "Output",
 CellChangeTimes->{{3.756719729582285*^9, 3.756719761679454*^9}, 
   3.7567199614194403`*^9, 3.75672021524644*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsFullElasticppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"fitHERA", "[", 
          RowBox[{"p", ",", "1.76", ",", "11.2", ",", 
           RowBox[{"-", "0.64"}], ",", "0.043", ",", "0."}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "1.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756461851596425*^9, 3.75646188656319*^9}, {
  3.756463354235483*^9, 3.756463388943185*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsResElasticppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]ResElasticppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7564618883226833`*^9, 3.756461908842985*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462150183979*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462150269603*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462150360568*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462150365044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ptsNonresElasticppibar", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"\[Sigma]Elasticppibar", "@", 
          RowBox[{"pLabInv", "[", 
           RowBox[{
            RowBox[{"m0", "@", "pi"}], ",", 
            RowBox[{"m0", "@", "N938"}], ",", "p"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0.", ",", "5.", ",", "0.01"}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "5."}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.756461916810638*^9, 3.756461929522636*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462586575355*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462586680717*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462586780954*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.756462586782256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ptsFullElasticppibar", ",", "ptsResElasticppibar", ",", 
     "ptsNonresElasticppibar"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Full\>\"", ",", "\"\<Res\>\"", ",", "\"\<Nonres\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7564632653707657`*^9, 3.7564632959283524`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw113lczPkfB/BpppmpZprmiLnvzs2uq42SPu+UCOtaWeUqbDlCOTYiV6JQ
CYmkHCVRKJEjiyIkR4pcu3RhUSo1qun40e89n3/mMTOPeX8/79fz/Xh8PqOe
t3zqn1QKhZJgRKH8eP3/aiKfplxSRH2yB/tZ8UVtdk1keMa8h4o79jD1x8dT
mgg/ZdXZScftYZ3lmTHV4U3E+JT8jWCTPaSHjDSrOt5EYgTLDwfNtocHZT9W
E9mZ+3j8mBH2oLP7UbCJJN7aseSs2B6UUT+e1Exio+enpLTbwdjq8O8Vm8mF
KZMOsZ7bQeiPciHNZA5viHtHgR0kH/yxmonlr7mb5x2wg+K2HwWbyZR6y8We
a+3gc9++m4nzlWGqFD876NueZQtZwN5aHehqB24/yo1sIan9e4yOKewgsG+1
kGc/+X0aZ2QHP7qdFd9CzL0Vsrl1ttDX7qUWUrTioc3rO7bQt73qFvJKqc29
ftoW+sqZfSUent4rmbttYWjf+krC5zgMy11lC33xzfpK2Nziqiu+ttDXbtRX
UnZ3BWiILfRt78xXIu0XFFxvZQt95aq+kmU2vX9SWbbwf49WcnCoq1dYsw16
tJLt04Y5jnpugx6tZO2WwwsCrtugRyuxXDJYXHHCBj1aSdi9qUcS42zQo5XQ
undMy/zLBj1ayd8HFSmMuTbo0Uac8o5/yB1jgx5tZGZqysXMQTbo0UbmMoSx
78Q26NFGqvUTu4NpNtAXX1Eb2dDoc8y5wRo92kjP+Guq8VXW6KEjL1M9bY7c
tEYPHRlJ2bloWLY1euiIw4XiLIska9jdV1BH1j1eesZ2izV66Ej8Bc6YDUut
0UNHVvp+Gcf3tUaPb4SmeX2gxtMaPb6ROZ7v+zcOskaPbyQm6ue8oXJr9PhG
ctwPz8kztUaPb6Qk7Xr/RTor9PhG3j+PfDW91go92kniOnZ++GMr9Ggn9/Zt
yKm4ZoUe7WRp1pOX/qet0KOdSIMzp6kPWqFHO/ki7e9sud0KPdoJhEefHr7a
Cj3ayfPRuytj51uhRwchDjeq+VOt0KOD+Eq20e+AFfSVC+kgC1oYYVkDrdCj
gzj9pQ+9rLBCjw4iXBfnpDO3Qo8OMnq0q+ncbi16dJJe+vkhXz9r0aOTOCzP
7819rUWPThI9pf1GcpkWPTpJngv3fnahFj06ySOTCX+9z9ZCTZ9HJxmwOE0x
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
wxJ2eAZs2BMuhP8Brj+TpA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0MMtlmPatz7/Af8Daggpfw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 22.716849338564153`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 5.}, {0, 22.716849338564153`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Full\"", "\"Res\"", "\"Nonres\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7564632965518*^9, 3.756463393455901*^9}]
}, Open  ]]
},
WindowSize->{1359, 1135},
WindowMargins->{{Automatic, 155}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2304, 67, 275, "Input"],
Cell[CellGroupData[{
Cell[2887, 91, 139, 2, 32, "Input"],
Cell[3029, 95, 95, 1, 32, "Output"]
}, Open  ]],
Cell[3139, 99, 717, 19, 32, "Input"],
Cell[CellGroupData[{
Cell[3881, 122, 108, 1, 32, "Input"],
Cell[3992, 125, 4296, 100, 165, "Output"]
}, Open  ]],
Cell[8303, 228, 57570, 1523, 2783, "Input"],
Cell[65876, 1753, 5289, 133, 385, "Input"],
Cell[71168, 1888, 740, 21, 55, "Input"],
Cell[71911, 1911, 1074, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[73010, 1941, 1021, 25, 99, "Input"],
Cell[74034, 1968, 739, 13, 23, "Message"],
Cell[74776, 1983, 739, 13, 23, "Message"],
Cell[75518, 1998, 741, 13, 23, "Message"],
Cell[76262, 2013, 728, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77027, 2032, 1194, 27, 99, "Input"],
Cell[78224, 2061, 626, 12, 23, "Message"],
Cell[78853, 2075, 629, 12, 23, "Message"],
Cell[79485, 2089, 627, 12, 23, "Message"],
Cell[80115, 2103, 616, 13, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80768, 2121, 970, 24, 99, "Input"],
Cell[81741, 2147, 767, 14, 23, "Message"],
Cell[82511, 2163, 767, 14, 23, "Message"],
Cell[83281, 2179, 769, 14, 23, "Message"],
Cell[84053, 2195, 756, 15, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84846, 2215, 792, 19, 55, "Input"],
Cell[85641, 2236, 44295, 812, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129973, 3053, 124, 2, 32, "Input"],
Cell[130100, 3057, 23887, 394, 244, "Output"],
Cell[153990, 3453, 44267, 811, 244, "Output"],
Cell[198260, 4266, 44245, 811, 244, "Output"],
Cell[242508, 5079, 44247, 811, 244, "Output"],
Cell[286758, 5892, 44054, 807, 244, "Output"],
Cell[330815, 6701, 44176, 810, 244, "Output"],
Cell[374994, 7513, 44152, 810, 244, "Output"],
Cell[419149, 8325, 44124, 809, 244, "Output"],
Cell[463276, 9136, 44100, 809, 244, "Output"],
Cell[507379, 9947, 44078, 809, 244, "Output"],
Cell[551460, 10758, 44023, 807, 244, "Output"],
Cell[595486, 11567, 43999, 807, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639522, 12379, 124, 2, 32, "Input"],
Cell[639649, 12383, 23966, 396, 244, "Output"]
}, Open  ]],
Cell[663630, 12782, 835, 22, 99, "Input"],
Cell[CellGroupData[{
Cell[664490, 12808, 836, 22, 99, "Input"],
Cell[665329, 12832, 578, 11, 23, "Message"],
Cell[665910, 12845, 578, 11, 23, "Message"],
Cell[666491, 12858, 578, 11, 23, "Message"],
Cell[667072, 12871, 567, 12, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[667676, 12888, 834, 22, 99, "Input"],
Cell[668513, 12912, 578, 11, 23, "Message"],
Cell[669094, 12925, 578, 11, 23, "Message"],
Cell[669675, 12938, 578, 11, 23, "Message"],
Cell[670256, 12951, 567, 12, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670860, 12968, 477, 12, 32, "Input"],
Cell[671340, 12982, 33319, 613, 246, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
