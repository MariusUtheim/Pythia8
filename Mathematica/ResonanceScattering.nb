(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    332709,       6022]
NotebookOptionsPosition[    331816,       5991]
NotebookOutlinePosition[    332153,       6006]
CellTagsIndexPosition[    332110,       6003]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\[Sigma]Res", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Res", "[", 
    RowBox[{"inA_", ",", "inB_", ",", "res_", ",", "eCM_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"eCM", "\[LessEqual]", 
      RowBox[{
       RowBox[{"m0", "[", "inA", "]"}], "+", 
       RowBox[{"m0", "[", "inB", "]"}]}]}], ",", "0", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"j", "[", "res", "]"}]}], "+", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"j", "[", "inA", "]"}]}], "+", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"j", "[", "inB", "]"}]}], "+", "1"}], ")"}]}], ")"}]}], 
      " ", "*", " ", 
      RowBox[{"Pi", "/", 
       RowBox[{
        RowBox[{"pCMS", "[", 
         RowBox[{"eCM", ",", 
          RowBox[{"m0", "[", "inA", "]"}], ",", 
          RowBox[{"m0", "[", "inB", "]"}]}], "]"}], "^", "2"}]}], " ", "*", 
      " ", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"res", ",", 
        RowBox[{"{", 
         RowBox[{"inA", ",", "inB"}], "}"}], ",", "eCM"}], "]"}], " ", "*", 
      " ", 
      RowBox[{"breitWigner", "[", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"res", ",", "eCM"}], "]"}], ",", 
        RowBox[{
         RowBox[{"m0", "[", "res", "]"}], "-", "eCM"}]}], "]"}], "*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"Ns", ",", "res"}], "]"}], ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "/", "3"}], "]"}], ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "/", "3"}], "]"}]}], "]"}], "^", "2"}], "*", 
      "0.38937966"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Res", "[", 
    RowBox[{"inA_", ",", "inB_", ",", "eCM_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"\[Sigma]Res", "[", 
      RowBox[{"inA", ",", "inB", ",", "res", ",", "eCM"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"res", ",", 
       RowBox[{"Join", "[", 
        RowBox[{"Ds", ",", "Ns"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7486688041743383`*^9, 3.748668838264988*^9}, {
   3.748669332072072*^9, 3.748669340175888*^9}, {3.748669384951482*^9, 
   3.748669472565549*^9}, 3.748669554931859*^9, {3.7486696104827633`*^9, 
   3.74866963109044*^9}, {3.748669717841358*^9, 3.7486697423446703`*^9}, {
   3.748670055731023*^9, 3.748670082570085*^9}, {3.748670120521843*^9, 
   3.7486701211856422`*^9}, {3.748670369380788*^9, 3.7486705000584383`*^9}, 
   3.748675743000996*^9, {3.7486763109416523`*^9, 3.748676403972096*^9}, 
   3.748677423600898*^9, {3.748677454928459*^9, 3.748677458032166*^9}, 
   3.748677510760243*^9, {3.748678324497471*^9, 3.7486783436884413`*^9}, {
   3.748680384235056*^9, 3.748680394426097*^9}, 3.7486804604418793`*^9, {
   3.748680499984386*^9, 3.748680502288253*^9}, {3.7486805398560877`*^9, 
   3.7486805671509247`*^9}, {3.7486820236047153`*^9, 
   3.7486820262841253`*^9}, {3.748682220112707*^9, 3.748682222256467*^9}, {
   3.748752646575137*^9, 3.748752658590556*^9}, 3.748752754109283*^9, {
   3.748758256271282*^9, 3.7487582619826097`*^9}, {3.748758916683257*^9, 
   3.748758941105852*^9}, {3.748849938022953*^9, 3.748849941710902*^9}, {
   3.748850004619358*^9, 3.748850004757586*^9}, {3.748851457251375*^9, 
   3.748851457428677*^9}, {3.7488517881410313`*^9, 3.748851805340577*^9}, {
   3.748852134532411*^9, 3.748852134702342*^9}, {3.7488546274409437`*^9, 
   3.748854627498654*^9}, {3.749203297565879*^9, 3.7492033007150393`*^9}, {
   3.749204406601297*^9, 3.749204408312717*^9}, {3.7492072021813993`*^9, 
   3.7492072039165382`*^9}, {3.749208029213716*^9, 3.749208029925733*^9}, {
   3.7492082132352533`*^9, 3.749208214482338*^9}, {3.749211168706127*^9, 
   3.749211168873831*^9}, {3.749212432587207*^9, 3.749212445546495*^9}, {
   3.749212518872967*^9, 3.749212547768313*^9}, 3.7492127296786747`*^9, {
   3.74921292373573*^9, 3.749212940345148*^9}, {3.749213049584484*^9, 
   3.749213050894919*^9}, {3.74921365153224*^9, 3.7492136792205687`*^9}, {
   3.749214984780307*^9, 3.749214984994657*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ptsTot", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hA", "=", "N938"}], ",", 
         RowBox[{"hB", "=", "pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pLab", "[", 
            RowBox[{
             RowBox[{"m0", "@", "hB"}], ",", 
             RowBox[{"m0", "@", "hA"}], ",", "eCM"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Sigma]Res", "[", 
            RowBox[{"hA", ",", "hB", ",", "eCM"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"eCM", ",", "1.", ",", "3.", ",", "0.003"}], "}"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"res", ",", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"eCM", ",", 
         RowBox[{"{", 
          RowBox[{"1.", ",", "3."}], "}"}]}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"ptsTot", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748677959066801*^9, 3.7486780103737097`*^9}, 
   3.748680588998527*^9, {3.748680630030665*^9, 3.748680631195017*^9}, 
   3.748680673861456*^9, {3.748680779498554*^9, 3.748680897449465*^9}, {
   3.748680928889118*^9, 3.74868093095252*^9}, {3.7486814696873693`*^9, 
   3.7486814914776707`*^9}, {3.748681651491214*^9, 3.748681652243074*^9}, {
   3.748681866711727*^9, 3.748682013172319*^9}, {3.748682064395831*^9, 
   3.748682142961502*^9}, {3.748682183825716*^9, 3.748682186712699*^9}, 
   3.748682240768404*^9, {3.748692655570323*^9, 3.7486926586578407`*^9}, {
   3.748752969521085*^9, 3.748752973896344*^9}, {3.748753457703512*^9, 
   3.748753465134954*^9}, {3.7487535203509417`*^9, 3.7487535403097687`*^9}, {
   3.7487536599881573`*^9, 3.7487536682917337`*^9}, {3.748753718186388*^9, 
   3.748753718434104*^9}, {3.7488505853396387`*^9, 3.748850586619124*^9}, 
   3.748854850868555*^9, 3.7492044291844387`*^9, {3.749208152500443*^9, 
   3.7492081579468927`*^9}, 3.749211190442315*^9, {3.749211371599197*^9, 
   3.749211371934317*^9}, {3.749212552472125*^9, 3.749212553256034*^9}, {
   3.749212612688121*^9, 3.749212632222526*^9}, 3.749213171549431*^9, {
   3.749213686627495*^9, 3.7492136949233723`*^9}, {3.7492149795149508`*^9, 
   3.7492150047064753`*^9}, {3.749215245310795*^9, 3.749215246373868*^9}, {
   3.7492750010370502`*^9, 3.749275001282771*^9}, {3.749281669766321*^9, 
   3.749281670773012*^9}, {3.749282005354363*^9, 3.749282008174403*^9}, {
   3.7492821217012444`*^9, 3.7492821264428883`*^9}, {3.7492821998753347`*^9, 
   3.7492822003548527`*^9}, {3.74929114028354*^9, 3.749291144140458*^9}, {
   3.749291566956394*^9, 3.749291587520956*^9}, {3.749291625730913*^9, 
   3.749291634177699*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7492921675743437`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7492921676759644`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749292196673098*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.74929219677381*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
IGs=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 4.309686647076584}, {0, 66.75516271193212}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.749273540229638*^9, 3.749275031748507*^9, 3.749275650897113*^9, 
   3.749281473743566*^9, 3.749282002544303*^9, 3.749282062809185*^9, 
   3.749282182016037*^9, 3.749282576040663*^9, 3.749291136950602*^9, 
   3.749291545188489*^9, {3.749291585802894*^9, 3.749291609578086*^9}, 
   3.749292288330011*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], ":", 
  " ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small. \
\!\(\*ButtonBox[\\\"\[RightSkeleton]\\\",
Appearance->{Automatic, None},
BaseStyle->\\\"Link\\\",
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\",
ButtonNote->\\\"NIntegrate::slwcon\\\"]\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7492133457579803`*^9, 3.749213692802814*^9, 3.74921431536649*^9, 
   3.7492149972398243`*^9, 3.7492151794408283`*^9, 3.749215427102416*^9, {
   3.7492159707435904`*^9, 3.74921597107908*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7492133457579803`*^9, 3.749213692802814*^9, 
  3.74921431536649*^9, 3.7492149972398243`*^9, 3.7492151794408283`*^9, 
  3.749215427200742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pts", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hA", "=", "N938"}], ",", 
         RowBox[{"hB", "=", "pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"res", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"pLab", "[", 
                RowBox[{
                 RowBox[{"m0", "[", "hB", "]"}], ",", 
                 RowBox[{"m0", "[", "hA", "]"}], ",", "eCM"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\[Sigma]Res", "[", 
                RowBox[{"hA", ",", "hB", ",", "res", ",", "eCM"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"eCM", ",", "1.", ",", "3.", ",", "0.005"}], "}"}]}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"res", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"Ds", ",", "Ns"}], "]"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"res", ",", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"eCM", ",", 
         RowBox[{"{", 
          RowBox[{"1.", ",", "8."}], "}"}]}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Second", "/@", "pts"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"First", "/@", "pts"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748670829190428*^9, 3.748670924354281*^9}, {
   3.7486709612982492`*^9, 3.748670961999682*^9}, {3.748671154270297*^9, 
   3.748671171053939*^9}, {3.74867139169832*^9, 3.748671393769452*^9}, {
   3.748676417747785*^9, 3.748676417923503*^9}, {3.748677362106019*^9, 
   3.748677433880661*^9}, {3.748677665796633*^9, 3.748677697659906*^9}, {
   3.748680675189919*^9, 3.748680678324986*^9}, {3.748752864291203*^9, 
   3.748752864445036*^9}, {3.748754258817658*^9, 3.7487543017677097`*^9}, {
   3.74875443470999*^9, 3.7487544449168367`*^9}, {3.748758446619578*^9, 
   3.7487584468513613`*^9}, {3.748764139470749*^9, 3.748764139814424*^9}, {
   3.749207266653414*^9, 3.7492072954605417`*^9}, {3.749211527980503*^9, 
   3.749211528299474*^9}, 3.749284680132285*^9, {3.749284934640545*^9, 
   3.7492849470000687`*^9}, {3.74929006563159*^9, 3.749290087352186*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749212153453627*^9, 3.749284823837935*^9, 
  3.749290376034871*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749212153453627*^9, 3.749284823837935*^9, 
  3.749290376110211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749212153453627*^9, 3.749284823837935*^9, 
  3.749290378122498*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749212153453627*^9, 3.749284823837935*^9, 
  3.749290378253683*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KVrs+PtCnYpX/V/4H02CSmg=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
YAw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzlVvdXD/73b++laFklItEmpNfjmYy2kJS8U0mllJkkiiKUkWhJO0IqhbS0
995776X1as+P79/xvb/cc8/j3nvuueNxrqjZtdOX6WhoaN7Q0tD8n/7/LmaR
XdcfXAqHUrn5FflRV4pNSWBgWl80rnK86B+khlIWo5M0fvnFg5ZM6PHYx1Mi
rx5cX570E7MevZt3af6hyAXoGKt4/saVRn33eZ58iraHcmjrrhQ8uZcjUitU
QemQjDC3CE2DdHJYgOpULWVLJdX94FI68m0YLeq1WygCLq119SGZ2GjgtW7G
qIsiSN0+IpacBV0PO5e+j30Uxqh6RZmSbPTWp1TNvh2mCA65njnSkIMWFSaa
5xsnKNaMe24Ztuci3jbk65wulSLEF8Gp0pWH9P2p8sHTsxQF6fMbgzvzsRqX
dK1n3RLF8XynznxrAY7kp06d/bVGuV2dFp1ZX4gvfupcl+7QofxtzDn98iLY
fZw5Fn+JEQtemnJsucWw25fpMfKVBYb9Da9Ek0rgz7dPTvEsB74dHtRu/FqK
xq7RQO39PIiQtnxk9qEMVt6LK6zOvLg3mpj090U5OhLNTtUyb8CvG0fZwu9X
4DNrm5BKswDqVOjtq/ZV4rZ/jrbrsjA+6UqMMsdUIpzmW8vtO1vQQS24S7e9
CtWqeZHndokiY31wQtn7KlxJET/KeEoMat8DRm+vq8ZJFqGaP3ziOG72xJju
WTVER3RLpe0kICKmrOayWo3ja18+x1jtxbXnvtzTt2tg2V5qepVNFhorw4ZW
IzWo8FD5dD1XHpOhdNt6TGux8DF13dnx/dj1caHYurEWEk+7jakBh5Cf9kGG
8WQdlk9Uh0rVUSDiFP7rd14dmM0y/xNoVsHpfRt0nx6ux9uQV1t0Px2FkJ3c
u7s/6tHs+vjSk5YT2Cq08Of17gakf1DU93+qibtuvsmVYQ0Q81yYoaSchNdU
024INSLFcGN82JHTWPxZeavdqxFnf95LvLyqB73dUSnxLE2I7+M4X7vRAF/n
+sdSHzZhweL948YoI1ix7ixfm29C0EtVPu74i+hkxqDLjWawaoUFLYuZ4ZEp
ZwRluBkj8oopfhnmODHTqky51IL7Hdn1hb8ssS3EvvZhawu8jrCvKfLaYN6q
y5RFvxU3n78Ir+6yQ0XTWHZ9RStkEvs7LAJu4Ge+Q9Jf9Tb0VbLIabHdhrDQ
rSGd3DY4BGw80FZyB7flGnqXKO140Xgir7zfEWw9p8Rmk9uxY16JXtT8AbTO
NLNgXwe6+00KHD89RHqySH/D9w6sOQhQ99S5giFifNmEvxMFkeyWH448gUgE
80EXvU7EWhI3YepTKL933V/g3Yl7ooPqrcMecGVWenCwqhNlYTZWzFKvEMOp
8KqeuwtZAkEfzDu9MHGfpTdYpwsj/l52yTXeOGV8iur9sgvdSh95NanvcDKH
QfJHaReMPE5KeKn44f6zsuk19m7kPzv64kBWAI58vvDLUbMbccKP0vbbf4BM
9M9SEc9u2P7KfDlpEgKjX9d8Z4q7UTRyIeiPahjYI2ms59l6YKEZLeQ3G47V
iPH3Epo9YBu0EFlfEokLwbyOzz17ICm/mTzO+QS16ixdwdIeWN7XYr7a/RnW
gyw29Ry9+BzYNu2+OxomBbWcudq9kLIypikJjoHslS33u179s02fKu8X/Y7w
Ud5Zqcpe3LAXEL/xIh5eAgeTv63rwza9Z0dneH/gm9M7GqMzfRjY6fezIPEn
sq7kMxzy6cO4aKIG/71ETLXuWVZv6EP9eGyR2cUkiLitCXsK9UOI0Wki1SoF
VAabtytG/fBw4rDTC0iDZsxXn7DgfryxsVWaoqZj9YWIrkNXP+Tmr/S2/clE
zL6r487bB/CCvt+WVTgbp7Y/DE6yHIBZs2uIhlcO1Kd+uW+PHoDWrei0d9vy
UGbaVZE9NoB7/tcSFqrzIWBoFvpWbhA6Tdm1cRGFkG/ft9nvziBkLTJ91vkV
g3c7k3VZyiCc6u6PBsWVQjjp4Jf9a4PY3dC7c368HFfaaZerVYfQx1Jw59Y/
XlmTsHINfzaEbx6dml8WqsDzn5HRx7IhBM+2t4gY1yDzQ2pkC+8wOJzvnbVu
rcVfOgunYwbD8Lzm9njrnXok+GGpO2gYfsweth17GrGYCvzsGUbDgaoWXfpm
vOC8Z5osMYILbCYsk3Mt+K90p9PUtRHc5OQ5cZG7HYWF3yMvJo7Atl965+r2
Tuh2/ZihWRmBs4dsoZteF6L5uZ/Uq45CtnEvJce3Gx1KA1adHqMIOP6pXXC0
B+JqcYlbqkexbV56NE6vD4Unpd3eCP3Fy5jb/Xcq+8Er4dl9wPQvFMwWrXgu
DqIxS21w/Ze/kC9IXy5ZG0K1hH7Ujsm/KHJ+GeUVP4L5s9xyNgfHYHjw6Frt
zb9ICFV93/doDPu3uTB4qYzDjE1p8l3xGFJd7q68fzmBAOXUE45841AsLNxo
4DyJ7ec5Yr0vjOMstTJK+sYUuDxW5Ls+joNt6b+PvOZUiF8aGjQfH0fkT67A
ZL1pDLC3/X21aQIjtYFp8WQG2Wl3ON1VJuDmVS1ru2MWiZZazX4WE4iiu7Dp
HM0cAlT2G+V6ToAvcFR8uHwOG2tafNnjJ3BJskmi8NU87D7/emtbP4HzDjt2
VCkvgGecy2B4aQLH/X4nKzYvwI2OefiR6CSOOrjZvzFbRMKg90mFE5M4/1p8
8mPdIqbTnV/R2k4iPzRi3yv5JewXvPZtyHsS7A6aceFOS5DV7o4dTZpEJPvY
n6aYf3iGbCBbxySaOHcH8Zf+w7ne3lFlnELFB7fKgvol3D8idNxPcgqCxeF+
KeVL2DTyi4vp9BTc1Ws2PUpcQqfMobrXd6dwNeoLF9/LJVDbzwUrhExBfFPr
rzH9JRwyDbebzpvCYpGuj8P6JWxNfq1RMTqFQVvDlKsFixC64rg/j4+Kqq8X
/fVuLOLiuaD99Yeo4Oah7Y7nW8SWz1tO0plRYZru9bUmbgExr5keqz+nok23
xXLx+ALoNh9riv5OxXtq+Rb15nn8Xo4/LdFIhZDGA9Ms63kw7OOczlqjIqNk
9261hTmMNa9l2u+cBuP5R9qf3OewnLnpz9GT0xh84aTgwTeHyK1dI1IO0ygJ
OdX0PHQW5Yq/dBVCprElvKJ/u9QsAsZHx/QK/s1dOdA0P20GX68UFnmNT+P5
dv9NRVozkPC73TsgMIN5W2qGffu/PLnsR87/2wsNj8THzDen0bbNt2/AagbR
5ssfY5inUaXGVu31ZgZv+Py8X4RQ/x2fNtvZlBnIPV2RzjhIRbDqvjcKPTPQ
b44JNKyfQsO3J1ekOWaRFGHJZGU/hZlxqs+xfbPgWZo7O8k/hZW8HUIOxrOY
iLQwPZ46iQ0cCTM5T2ch1e8r7Gg6CTlJUak98bMYgb/rdbZJXLr/NzeueRbE
WnWt7tcE6r+4pekwzCH87ODDkEsTyORQFWCV+te32MCDWXwToLA4N7Sfm0Oy
aU+R0Ytx6JjeW6t4NAfOqrLdcTNjYHp3401r9Bxy0gr3Gl8aw3rxN68Z6udg
QO3KVa/7i/DZxaUTNPOQbFgipzX/Isszr/HT7nkwmSk9P5c3ilv/Le8UPTsP
PTt7m4P/eOPcltCRRJd5qDu49jbkjmAjXdQOq6/zOHixXIBPYwSltCsNCnXz
OCLD96Wkehjrtzxm2EyzgI35h3q6jYdxLWR9jIjkAm69TP56aGwId/Ue1EB/
AUv/PQr+9XAI6uVujvceLcA9iSKuyD+EnYG9oZXfFsBRF3s/InYQZi5nNI80
LmCbTYFCj/ogPL853augXwTdtEVh1cAAVmbXpO9KL6I+yfGRybMBjLE62R42
WkRbMY/fLckBTAe4KGx6uoihjYnvqf/4jMnX313gxyJcmC3ni+72Y8859ctS
HYuIZqed7dzWjy/lnNUm7EuYGB+KFqvog8CP8+Wxikt4I+dP6/ygDwvRQUaC
5kuw9y+Jat3bB5n7yk5BXksIu5+8vKezF6qS76Uof5bwWqpB/793vbi7l9Nh
cWgJtMrBzy9o9KLIY+hsNf8yDCcMZYXpelHJcL80T3UZRY85fNxTe/BZib21
9voyvon6LK7Z9+B3VcOTtaBlZNEWnZSR70H4q00lx0qWsSRRXKw72Y2tj7hi
ouaXsTpyaLb3eze4Rdr27BBfwZDDifiBG93wsk7QTD+zgkZvi3FVhW4cZv7B
duvRCm7Utc1MznUhwGzVWjVuBdv4rq72pXUhoTTWVrptBVV9F7HBrQuDPk18
iuyroI4cMLHX6MIGydfG5w+u4pgaub3M++8PkmnRCbBcxdNf4XOhrZ3oDcrt
o/qsIid4rsgwqhMZddrbrXNX8c3QRWLLrU6IZd1mX55ahdr0+bg+dIJjQO7D
F9E1SG/+o/GZsxMBjx803NRdw6z3vHNaUgcsIo+ln3NZQ8fpMEJj0AGzfXdP
GcSuYTwg249zoR1dIqtvbretwUK6obo+sB0yMsZEn4mGfJvfVaJD2nGMVYOb
ZgsN8R8aCDTvb0PvCdnE3/toiMFHTW6BV23YlfFw3wNtGlKarHTsjGIbWm5G
vNS9TEMyX1/j4+huBU0YXYbsAxpSc92j7+CrVgiWMBaL+NCQE4l7r1QrteJI
Bm/c5hgaEhbss1Q03AKmsJd2u/JoyFEv2e2CgS1gnWpkUWmjIYzMfc4/tFpg
+/6ss+UMDXmb+Fzde60Z3JNmFYGctIRXLLso5kczvHKMl9t20JLuUzFRy1bN
kDb+yChF+Wc/cQu8u7UZxm/fjHjq0xK2sp9j/A1NOJtzP3bOjpYYCvIpV79u
gnJPus6Np7SkXr9vc4R6E24+ji2dD6El0pX448rQBMOW0F2vkmjJd8bmJ9aZ
jVDKHzKTraIlOe1mW/QeNKKjpsWpe4iWdCaMWxxUasQGjcJbYXR0hHWy8tfm
6QaMSa5p2G2kIzZbQwI6khvASSpo1RXoSN809bjPvQa85nf3l9WmIw5PS6I3
HG7ABu7r3Lss6EhmUK9G9Go9bhs3WuxxoSMn80dOtGXVw2w9awjFn44cf7x1
E5d7PWZENJOM4+nIKebB9Xs068Fyvj/hRTEduTdWcGeOpx7PHoq+LuyhI/qd
Nr89G+rw5NgRbd4VOlI02hvRG1wHk5Mv/17hpyfXpuskVy3q8IZy/HqFND0p
i+cyqZWug09CXN0RdXqS/nv/jUsLtXinw74l14yeXHn7NDYqpxbs6QHqZ+7T
k/MORWxBr2qhkvzeYMKHnlz9MUavcr4WyazamoFx9OS7UHnca/Fa2L8aE9Ur
oie8QhKO7tQaqJG0VuEeeuKZe4pPNKsGrfumnMaX6YlLltnshdc1qIsqWavi
ZyCnM7R2Kf77DxOnXa2yZRiInJZM3re9NciNPJWYqcFA5u7HFZetVKPe9vpQ
qTkDOTeoLHyxvBoMigJ0A84MxDZww03fkGrobHpAwx3AQF7vSrlpfKMau242
9h79wUDutm0N/KlaDWqhcdyzMgZCvlc4+fJXw2biqEnzAAOpN+j5Ij9cBdql
9LmDdIwkgUtmmfqnCgIqNHeiNjGS0KwN3DbeVVAwV2rZpshIZmddM8wtqyB/
Onznt1OMxMPlw2j74SpoqVkYqV5lJAdcvd0aeKvAVf/7zqA7I3ER3eqiNVSJ
q535joFhjIRNhm1AKbMSTyOzzS+kMZLnL+MrIvwq8SqlSVGygZG8afcxdL1W
ieeCh6jMU4wEiwVSNScqwbRhnd8UBxN5d+l2zQeRShRe8RQb2clENsm5mUZR
K2C9v85/8ggTUbGkr5r5VIEWOuE5RmMmcr6gn1/EqAJLWY8puxyZyA5KyfQ2
ngrM1uCawTsmksIJLOWVI4fF/rlvHBPpVBBr+3i/HLfCtV92FzMRfGVs2apQ
Ds9zU/cO9zORice3N1uMluHIWc/TkbTMhHXfZKL9xzLkqZD1wpuZSZ55Ka3W
xTIYUA5kBh1gJhvPeYj2C5XBYyhAX1qPmYi16V5UqSvFMVPPhvJrzKQ8u5LX
6E0p+o7Kqd73ZCZNu/PDZHRKse/3jwDFKGbyxOuBSwZ7Ke6YKLTQ5DCTJI6L
exiLS3DieiNzYzszCW3d7mj1vASvQ3K2/llkJm+DjypEq5XAWk5I7Ds/Cznt
fKiMibUEAwtL6+LlWMitnf3fuYuLMXb21WiGDgvB54EPOZ7FmNk/ldBqzUL8
Yn4YiOgUI3+r+mXmpywk1dk8UWxdMaR2/qQnESxkwydr75LaInxbOPPKPYOF
KH4hNRsCiiDUosbY0sJC7iwbtMQYFuHA5wQr5XkWoh38V/WBWBH0G78nxaxn
JVH6PI9jhwrR5mw2IynLStjkhgXsvheiUKt/S5I2K6mxdVjNcyiEtPf5faet
Wcl8KGPMTxQiH20HFt1ZibbVyqwiSyGUBz0lvkewkq27fcV0qgqQmuXGfDuT
leSMVVjOvC/Awaiu6mNtrORjuAzNnssFaBPK9tyxyEpMNJ2lJ6QLYHpERY5P
gI0wsXGqkKV8nJ66l8+lwEZc2848Ey7Ih91HDzXBU2zkkreP8YO3+Wh09UyS
tmMjCW+zxSxN8mFj7M9/1pONfIrVodTv/VddconZs8//4h/3ZkQv5IErH0FF
eWykmyqv8L44D7vMufIFe9hIoJ14tXxAHjLET7XZ07CTh73LqZ+t8iB4RrSn
czM70anmmsw9kAexbr8GQyV2MjwoKM7Gmodvj8pSOg3YiVbJ9UpqUy6u+zS/
sL/DTh5o/63Xj86FxIEGbcF37EQ+yqdZ9kEu/A+3rBTGs5PfUapObidz4Su1
+uFpBTs5wtP0n8a2XHDonZPU+8tOLHJ37nkykwO62JXPUuwc5HWgzkf5ohw8
XWDmF5DgIKMXb5ucDspB0vcXNzlPcJCFB+HoupGDT+zh6esucxCK90nXtuM5
0KE1XhRz4yB9vsKuapty4KxWv+NoGAfRbXEeXzeVjSwDEZWbGRzErKtih1lh
NuRsTmnFtnEQOScJU66QbFxzcj4xv8RB3NijdcTuZMNULU1OV5iTBJ+h5IZo
Z0Pq7FauxAOcJM0gK9B1RzbGhlKbJM5xEs6GuwnFK1l4uf6TT7Q9J7Fdahq+
U5+FwC+TKkrvOMnzCPbd7nFZYDmW0N6YwEmUzIQN555lYUFjyeZxFSfZpZRg
XmSWBYfBjiHlCU5y6SmX8tLhLGisv2XAyM1FMq4P1XkKZCHkdcHv5r1c5Dej
jfi9qUxU9Y8zp2txEWkmQYm8skzw3lxVi7PhIkYRmS02XzIhrc/oFOvBRUZy
/UWtn2RC6gl/cOoXLlLTICZSaPrPP0M1ob6Qi8hbZa85UTJx3Tv499oAF/FN
trT22JiJ3f8diN3PzE0UqndVVU9mgFF7m6+TODfpzL/noxqTgYsmttfKj3GT
nsOh9MZXMpBlsfuQ9GVu8lXU9aWIeAYe0VrPBj3mJk7rn1Ke96TjYuThSOFI
bqL55kygb1g6RH0TVD/mcBOJsuGE4ybpEJlsqVXu4SZXB282+21Nx9ypXsmb
tDyEwdH9zLOOPxg8cNRCax0P+XmT7RF/6B/8dPQJ2CvKQ35173hITP/Av6Qj
b4MsD2l4dzufQewPWKp2jzCo8JDrad3fTfvSMCXgzLqky0PWx5XnGHxOw6pQ
l8i8CQ9xtBOQ7LZJQ/NhI9nl6zzkxJ1ZR6pwGuyqqYeYH/GQ3sPSW8OnU7FX
KEFZ6A0PkU87XdCdnIpjh4MOyoXxEO7MJJt0l1QMnEmTOh3PQ3Ivt93deDwV
7pf5Nztm8ZDZoQ/l9JypYDdPYIiq4iGqbbr9DrUpEJTx62vp4iGSm2Jk7T+k
4Jh/SYbAFA/ZdeY3K8PlFGgb6r89T7eOeKWEqTFJpcBoC8UkkncdidOTjvad
S4b0o+fiM9vWEZ5J48ivWckwZ0O/lvw6cuBTbg15kYwQ2csh0arryKmi+dZz
55LxP0L1v24=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
X37/
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
GtyNECdxJy5NiRFF9XyM7J9sgP8BDfeP5g==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzlV+c/F/zf5WtviowkWpKyQqk4H6SSTVQqFy5UGioaIqU0lZAtI5S9d2Sv
rCIrMyN77+133X/HfZ6cJ+e8zvvB+zw4IuY2+pYUKioqD2oqqv/j/+8wj+i+
9ejfMBQ+j3GnLPUqXasKDMz9G4soP23yesuk0nJs1ul032QIxqXQ6BTPKUVc
V+CuzUrDZq/XYbrRK0oy/tomyq6Z4N8ccpqdjhpabxRD2/d+hViYhwj/C1p0
iYdbWIXmoryXqjPPkhFCP2deKKzk4cHVYKFHiazgfdze2BRSgIo8W6+yDE7w
zewa2ZldCMoO5pFvZzaDLrLpkFRVEWwjPIyV5LeAb+ipgUpzMUQmRVJr/uGH
Nd1+2/OdJUiscHYaaxT8745wNuXuUqTaeNR4agtDVtJ4a/CfMjjYcw7RXdoB
e+M/2ovt5RDqjqyI8NsFu/rc2IKmCiT7Hzj2k0YUtR/izxrVfocY55FNC6Fi
WHLXkGEuqcQnl8f5vnf243x/s5tIVhX22Yt3KjtIIu7YoFZLTDU+LOpUVplI
I1zysrP5xxqEs2y7Lyp0EA9HM7LG3tbCK3nCh39NFum3jzOHOf5AOxMj5+Y1
eTQq09ytk/uJpUy7LPftCviiKzbKEP8T1O41tIJWR9E1U/6AsqsOk94CuRr1
isjnDk6pCahDG8/uwB4ZglNJ/qN2XPVIs2yRk/NQxgnz5yaUV/XgeBxUs49O
FcI7FU89Xq+Hfuus+s/3x2Hz2odj1u4XdgW93nFU5gROrw2fvzLyC77pvxdc
x05iKpSyo9esAR9NZagmi9Sx9/NSpXVLAy6/XpMIS9VAWe5HKTqdRrySPqkx
WqAFYYew9MzSRgx9WWHcO6oDfTke3ZfHmrD5lyyv6VY98N+U8XqQ2gS3H/N/
+fT0sZ1/6dv7fc04WMRfSu9ngAfPfLJ/fmpGkoDt69XJM3Cf/r0P/C1oU8zS
aLlohOW0n7ad7i2wkE8/5tJ+Fmf2RX5NZvyNH1l73i7cOo+Yhf7xnCe/Eaix
8u+hrRdwhUm0dmPxN1qagpfOtl/EHwYMPr7dCrE3MRmP0k3gbMYWrjTcCjft
v8cmDExxcq5dUenfNgia9N03MzbDjpC7DU/a28DxIZK65KY5Fq90mzEatYN5
L73UT49/8eP3eFHTj3b42sdTa5RYIK3sftaYegdyO2sG6RisIMBvO6Rd0oGc
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
JlJmlw==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D/4HZhZWrg==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
9y5ai4ccEFuJ6vDIwf8AXBKR7w==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+P3IRCUGpFj4wD9/qx7+B2hSVeA=
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzlV/k3FY7Tvvfi2ndZKiJkSbasiRkkW7YSSvmEqLQoqWyRSKGUIiRUiFIJ
WSpZsqTs4tqXa9/3ff32/h3v/DJnznnmzJk585xnRsTB9agTiUAghBMJhP/z
/9/NIYl69bbjG3DXd/uvRGVB82JlbGz+QBp4nA50Pyejo7WalmeUHZUBI5Ff
w22vXNJKuqTOU5P3BYR51chNhcFaijGmdtqhuZBnd096zue1lkmI5qsOyW9g
IWu3O6onS6t7b+JZ51f5sFYo9iGLVKolVDcXpL5WAHPN8WRVtwYtPr+OJkpC
ETz97nCiqqZbi39ObEz0azEQFe9tStKNatGlUFTlK3+CFF3p+pTzvBb/yN1j
Os0lsKnmdPHIwKaWC53M9RNdpeDfmJBenUsGAe5EVm1qGRy91C4oZ8wBSnIn
d8T3lAP9DTpP6OEFz5M9pssdv4D5CY/D5L1d4N6Qn1ZEqYBmxyvG5afFoebZ
R2urmt/QpqxisRYqAytPjBWZSv9AiH0fWfevIpwYbA4Tyav8h7vqOhiiBh8O
Dpu0vK8C8W2V1jPvABLlzvk7vKyGK4dX44o1DoHXeE7exMMaYHdRDhJMNITs
a4eY3vjUwu6r+uvXBc2hSZvmRr1yHcRO3VxWFbSEt+ZS4/Qf62Drd35/wbQN
dM/98iCJ1cN7vod8Bfl2UMgTn1n9oh6qPKTsM1odwOBzzLg7ZwM0bnAFB6me
g8MO9+xIDxogcdpReTjiEgiLahr4bTbAnWrlNI+H18A1+Dn7vPtf+FGiOZzj
dQOMNkZPnB/7C2J/p++9VvSCmVek3X32jZBs9ZH1HsUPJJNX/ri0NILAyxMR
fPoBUJ7/Up7OrAkK3xuIdejeB2HvN9m5ZU3Q8G7kucZ6KBxV3mZ+/yAFdmfa
Mz/49QQErihGeGRRQDVtNJGOIwJ2Caz8eCzdDFHvVbdrjUeBR8Dzr3Wvm0Ff
LLtmh/tLeDLbKg0CLXAqKVX5PfUVrH6pu971pAVuNYjH0W4kgqV0yrcMhlZI
V7lZXxyfAu+XBie/32kFC45Rq+CONDjPKFGztdwK9wckykvOfYYeehj2u9YG
F51byQFGWeBvz5qoNdoGvPmr3WEpOaC/0KGp5dgOt11NNn4+/Qa7E2403ulo
h5LfN8R0RAth+TzVnsGqA94EkBkIB35CbevkT0ptBxwgcrvJHS2DL+W38iYM
O6HWNW/x6ngFbBe4PmJa2gmLM36ja4LV4K7Y3L+m1QW/75VO5G7VAVOfheji
1y5o+yHxM43yF44ca2MA5W6YOb4efEasGQq+Cg82f+4GuWu0iStrbUCbOLV+
hrcH2I1E05Oud4NwIr26n2UP7DOXu/PkaC9ovrir8utpDwTZuFrvtx6Au/Qa
t9Xre8DWdtcD9dZh+MiqFEZhpwJVeTp218Q4TPsw9MebUiHO4+SKR9M0WNhZ
zD19RAVuDZKwd9QcmJXQ7s2qokIS5fgulepF8HlQPb/F3Au8++PvKoSsgk7q
qWxP417gcgdO04FNkE/7UiUc2gtDxuxfEteJaJvt+nzhTy88Os3X5DhLi8xJ
BJdlpj4IObN7+rUTA24mTr2QMu6DsSDHEBkXFjwVz+UZHNoHPTxunj0hHGjQ
UGzOX9UHL3fMnEkBbnQZZrhIYemHtv6lK3/sePHMr0bWUpN+UHaneeA4K4AK
F4R8qGH9EJnqFe9OFMI341yLsnX9cPGp/FLqYRF8wqf+9QPnAORRTntJ/hLF
D94RBNtjA7B3G6cmk8ceLL5QTnsgcgAWJD17xPWlcLZDZt2weQC8j73miBOQ
QeGAre2hAoPQ9uamAVO1LM7RXny2YTsIGb6xKWZx8mj88X3k6/hByDWYqLkd
r4CbD4XNb1EHIejbQAzYKuJH5UtTvmJDwDJQuGBWqYgWYnfi884NgWyZntSO
SUU0nM0OEksbgv2SfJPcfxSx2p5a+3NyCGbnFjqTXRSR74TDq2eKw/B467HR
604F3N+lLBh1cxjkNBOdJuUVkEuM7FL9bRgGuCwerVyVx+156u9UtobhbkGH
VIOZHF7oIq436I5A/oZ5SO+3fbgldf7umwcjwKtjcJJbVgY5TtvaJlePQPlJ
c7f4z9JY9PJ7UjvXKNyyef+h+7AUTpCcvfVsRsG/YZ+QwJwEZkbBWm/cKDim
nqrgydmDq98BvvSNAjtfXpf7Y3F8yOpl/1VqDMqo3YuTvmJ4ukrCe9Z1DDIq
tBRq74piRcXnpP9yxuDd+tKfvpjdaE7NWiBsjMHuVxzk/J8imMbLfo+iOw4q
vr+Mh9eEsVtj6HxPyDiUjuUokA8J4x6D9ByhhnEQXNCpDdu/CyvM5ALCBSbA
yvaD9+iSIHJJhfaq2U8ALyz19TXsxJZig2GedxOgdPmO0LWfO7BByipFfGYC
ZjgecOWVbsfl4+yKF9UnIYMjp4y5RQAzX+m+GPCfhPLfeUNDq/zowKQxE/Fn
EpIFnGYm9/JjjOZ3fU/uKWD9Ueo7cIEPxU6yfHp6agr4Hrw9lZ7Fi2whG/up
yVMwk/no9BEGXtzjODJ8dmoKLvid82py3oZDzJ0TYTun4cX4upJXDQ/+zL/J
GqQ9DekLSwd8tXgw59yRtijnaaiUNjysmsONMdoqtqWh07BH75UKszI37vjb
/pw5YxrsDsj8d+UbF15JzX52mTINBKV8ml49LuSYYrMZXZuGOksfwhyFEwNI
9KP+IjMQ3FwdpXaZEzOHn5op6c/AHzKnwzEGTpwv8A0jXp6BqJVI2/EUDlTh
d/0w8nQGaLgMWL8Yc6CCSe+n8bwZkEuif1EyyI4qhQqxTN0zIF2fJ+6syY4K
bM9u6tLNQrrTn+KmF2zooyNwOGrvLMTOZ998s8mKO8ey2chHZ+FFZXmp6XlW
7JE/0PTYYxYirlsxljaz4FyXdbxSwiyIiJTcP3mEBQ/Yv7kyXzYLPsKPdw+U
MeOur4+NasdnwZou1GbbIWYUuOCpUsY9B23W5YFvy5nwP+s4FcqBOajrz919
woQJhVKFzEgOc3DOU+/UbDMjfnxMDjQMnoPpgPk3Gs6MSBLUa037PAfPHrMd
Iy0zYO56xlGpljmQfJf6H98jBqRVZp0v3pqDLoeXZDNxBpxs2yq6ITEP1RMv
Q+8U0eN60c4fh8zmoVI4beWeHT0m7aKOyd6ah/F0HNXYImONara5UsI8HPwY
Z+H/howxU+OTlr/mQY3wxUzVgIzvL1T8fjI1DymCGnTa03QoFeXeP8S3AFsS
AZcCXtBhZSmzzklcgMSNd8oDh+mwc/fzgaHzCxBf1JVsukCL9QZMDU/CF0BT
+4Lnu2RahC8mTMe/LUBHiGJFjzUtxusqhyv1/YtLn473MNNi84d7F+RYFkGq
SPZSVDENLkzNReopL8IaIbt31oMGN8rEBW7ZLYLzlOlkrwINbmPJXCi5vwjN
exMEbcZJqLhXRFYmYxG4u6S6dVNJ6OgzUZretgjsevRu0U4kpLwLyDelXYKv
3SXNBmIkLGLR5WOUXQJJfctfBv1E1GLwbe6yXoJb+nSvHyYT0dTea6vWfwki
1446Mp4nIjniWnhH2hI0pz179WUvEXn2hD+mpSxB7/LZG4HTBHyzuLqmT1iG
2x6Vfq45BCwOLWt5K70MdacWKZduE/D66XUJkePLIMz2gsZdj4DWQq/GcvyW
4ZH9thkfNgLuIKWIn3+/DBq3FZgIGVtQRdxoVmpaBtGZ781jh7eARyiQVpCw
8k/HU53TuzbBNYHno/DeFQhmTLqh6bEJHpa3/4LVChx0LrcL5t4Ew5oATy//
FfD5a812//MGSMT2v6r7sAKJZxVWpc02wMHvmLFOywqE+mYKuEytQ+gHb69a
mlVojtPqUg9fh43FLTkPuVXo+a4u80RpHSYZvS8ftF2Fnfu8LB1b12A+xk9p
5/1VcH8owfbebw3Iz6OD+LJWIWpm86qtxBrIWBs6yXavQojRwtSVulV4V8Pa
cIZ5DQ6BgmWH1yrwZZ2s+aS6Br1BVnmxe1ZhJS3Olv/sGhiyCgYm/10BeR9N
77gna+B9vW1q5l8funtfyGr9WIOlW43tXgor4LGP9dbqyBo4U1lX1HqX4XfI
yPEG3nXg2oyvF4/4N3dan6oy3XV4Rp/Cq6G/DKkazB2NV9eBMVA8w21tCXLr
m+9txa0DrbNS56/PS/AmbGelXuU62OVH31M8twS7/Nk+piyvw4Pq6LhPQkvA
LtwpI75nA/Jp2uJVmhfhiUumccGxDSiuWTxT9mQRDtJnMV3334DFoqz+48aL
EOOw6aKbvgHBVoxH+8iLkFn16bJc5wYIUY0Wz5cswHBkK7cq8yaEFJ3X6b2z
ANv2PrY7qb4JWvJHfhvBAhTLt5vGnNuECA5jrfjNeeiPKx2Yi9wEWZnM6y0F
81DYZCLmUroJPpFnTyz4zYNosTvz+uwm0NSErU1rzwPLkOLLdyJbYHnnkv8v
2nmICbzd7Ga+BW9Td8ncqJgD5yS9Amu/LdDcGX188eEcOCh7WNh82oIs1xBX
/aNzQBXeDHfv3IJ40xskJ/45kJe3QysyATsdv3ww7p4FPUYjdoIQAbNJr0SW
385Cv75CTq4yARmq8iTPuc6CZOEd5dsmBBSJ6XoZqTYL7W6Jj8ydCFi9FX7x
DmkWCK9JhQr/eHG3FiLEqmeAv5Luj3DkP17MREr4Rc+ATiFXuuBHAi7tpB5+
dHYGyK8fXZEsI2BGt5voEYUZYJxtYdDuJGCdB/tm3uY0XH5x3Pfcwr/6/I57
6qumgX3GoTaWlYgOHL6r4bHT8KTEbr1TnIgCL6wHl12mQc4umU5Wi4hVP60c
aTT+6dSz8LFQKyI+VaQufWKehuMlPp+WrhDRvKfr8uzXKdDsKzC9dp+Iq++P
+BWengK3wE9VywlEDK4f9SwiTcGJ9leSYXlEvJ5y/c906iRolI84KNQTkeFy
5Zyx+SR0/2337h0hIlHOOqx6eQK2GVVcf00i4TYXW/1rbyZgcu+W0ZUdJNSn
cehRNJkAVqwlGiqR0EYmRZZtZRwe8wZFK5iQ0K7h4fat5HHYxn6VXdKZhEbq
PAlEy3Fwt2txlvEjYSnX9NICaRwceBgTtKJJaG1HqeTOGoMFYeM8uwwSyp50
izU+OwYMJwczH/4hoW1IV9Zl3jF4cEfkcUUfCQVOXT0a9nsU7unpmHBtkFDJ
nqPl3e1ROGP2aOICLw2mPpLJzlcchXCtw1dr5WjQN8zmQsnwCERmpjfpGNKg
GHXm7reEEYgwZRYqdaDBcM9f8fHWI8BcEGN4zIcGR36VnrvEMQLaX1/YTEfS
4OB0wnPhP8PwldHEODadBhXZQ2dyA4fhRtikiOVvGtSwGjaWw2EwwPyO7X00
2DFNCApYH4IO5VnvqXUa7PYoeJjxdQiaUiq36nlp8dmA84mcW0OQM3/3/E95
WvzRcHImTGUISpMscoqMaNGESHFSWxwEyuWrI1VnaXHPYsbf9JxBoFXlIw35
0mLQS2nH2VuDYLrzNoE9hhazG5L0N9QHQdKtpf9QFi0q/L5ZWL0+AHMVdukP
qmnRTCiT275oAC5OHzrTNkSLua+mor4EDgBxrWBJnUSHTMk735cZDgCfNuFm
yk46LGk3zAxnHwClsxrtu1XpUD3SezcvpR/2H30j8cGCDh85et80j+uHIwbO
trqX6HCKMW2/llM/sFFybw4H0eH39y3DHfv64VJPuWfsazqk28MjK73UB/eT
fp49lU+HvrH3kkSL+yDsW6vq3mY6zCPpLZb/+1uC+Q/M0c/SoWqNIoXTug/I
2zijZlnISH1Uv0UU7YOKC6GiYxJklA0SVo2c6gUXlaboGR0y7lG8ZfA7vxfa
SduX6OzIGP7WnuFlSC+sFQdqSXqS0bL69jHmE72w+BdcbSLI+PzqCbZtkr1Q
wnAj+Hk6GRNZLcRzl6hw/Y3Jo94/ZIw45/pw6hcVQq1nvQ4OknGjwQTyo6mg
czz0aBKRHm32L+AOFyqUaSPPdkF6nE4sjGU6SAUbLbWiODV6HCs7YP+AjQoh
IzFWcpb0ePcj0/un1B7Qsw9trnGlR8ML1ZES2T0wcEhR1yeUHv0Ft4z0gntA
OTcrRjWFHonpXYsjp3vg5hmldkIJPT5YPlrNvb8H9K+20Ld00aNSUB1DMUMP
PE4o2fVjlR5/Jvk1dv/oBhdFAdHPvAx4jVBxTfNiNwytrHFmKDLgmV2BgVEC
3TB5PGy80JQBz7Fxfhmt6IIFldnMDhcGfLZrKmu/ZxeU7zJ0or/PgNpbT3Vd
pbtAVuILDSYyIMtrVdkXHZ3wYeVYWFAhA46tfzbKeNwJAu0GdO3tDLgSBd4Z
up2glpp5XvPfHbhef/Zj1HIHWLV8zvvIw4guc7mtZz51QKevw8JeBUbUXvxO
w+TUARVHBoXyTBhxjDZH/cnODpB7elL5qAsjlr8PjJhubIdy6FRbDWLEpoxb
qpJh7aA5HCr1OZER776TNFcyaIfvxQH07kWMaMBlyctF0w7qKdQGvU5GXJTO
qiwoaINOgZ+h4quMGGhL+a7q3Qb2OtqK3HxMaHGAcNBLrQ2OznqVsykxYZUk
MS1gsRWuJIcY8FswYWUA9zWL7FZouRuaJ3eFCYOd8rZ63Fvhol007/FQJqxf
iKiXU26Fzq+VDg9SmbB0r7AF+0ILsJVD3O8yJpxg372kmtcCkmfZyvn7mHDT
OXynn1cLFO6x6LxBYEarQrqbmZotwH9MpK9HkBm/FTqtRxNbQLQ3qvmEBjP6
k7zs5Mub4YN/9bceG2b80mp87GZoM1yNbHt44yYzeuSQX5y3aAYptWYT/ghm
/EBuW6Hlb4bog+0bFRnMWB7Urm3YTYHnspsv79cy4x7yqMH+FAqwWFrvtZz4
lx/7ZKLIlQKkTxupsswsKKE/um1ajQL3V+h5+aRY8BQpKL2ARIG8zw/dWPVZ
UEfNOF26ugneMr8p4HRiQZpUO07F6CYwJdqtigaw/Ntv+tYGxybwNaCIH3rN
giemIjmY5Zug2EZY262QBdWv6v9uWW8ExYsWRz51siCQ5HYc+NMIrt6++str
LOi8fYf4vuhGsDfIVzTfzoqjpNssn50bQfb4LrYcNVYMdjHfKFJuhMmR761S
1qw4YEYjbUfXCI943kam3WDF9sN2lfea/kLsuxltjQhW3OK9LKzy9i8w6GV2
tWSy4vmMc1cu3/oLK0ZrFwPrWTHbJ5YgbfgXbg13j2hOsyL7oqWky46/YMRz
3YaOnQ3dkn8flJlsgITHv3Lb9rGh91lS7JXiBqgfnKIvOMKG/ItlyXKRDcDl
tmmQfpEN5ScDyi5faAA5KzrvTyFsOD4E5yW0GkD2Hm/893dsqMZ4m2jL/Q9f
qJtJqWDD9QYpJvqRerj6ND53a4gNxQ4+JEgX1oP0abVPKvTsaLaStVYcWQ90
Jrufe+9hx1zqB6eaS/Xw35nLrjV67Ggqo3HI5FA9FDtLH5BzYkfLsXBNzZ31
4E90WYwLZEdnTBl5OV8H/yUdTNqexI4a8TYDLtV1IPI8Uze5hB1F420akt/W
gfBMe6NmHzuacAtaH7lTB0sW/XvdiBx437Za6PTJOhhWO+R8hJMD2SbkWylK
dfDFMzJmnwgHFgrHH8hjr4Poyu6ybQocSLnWsLTVVAsM9dJjtNoceMAg5cuJ
R7Uwy+fLuGbOgTqHDxb66NXCpgBVePkMB7KvW9933KyBtoO2CutXOfCG+05p
1rwauNIwd4DenwObJTZ0b7nVwD6BTE2BcA7kf5DmmbCvBvQOxqkrvubAJury
rYCRahg6li97NIMDAz/mzQm/rYYgJ15Bz2IOtDRLfHfDsRqYz2bSptRz4KlD
6nZ+ItXALx810E7lQIbvbzs1eqpAL7qykG+WA+9EpqylJlSByQmrZydJnNjW
ePFZ6X9VYCukdSaJixOzXHzuPxSuAjn/4D0LuzmR8dqr4k1qJZxlgsEj+zlR
v+ynokBSJSQoOCWk6XJiIrmlodW5Ev4HpM9sWw==
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
lqDOS+wr387SHj7H/wB0M2hq
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzll/c7F97/xl9exsteyaiINIyihBJ1HytUNBXVW6gUDQ1KFGlH9iYyU9lK
tGySPbLJ3ntvPr5/x/f8cq7Hdd3nXNe5ntfzfp5bzNTyxGUqhULxoKNQ/m//
/75MI9tuPboYjr6BiyTmViGuFQUF/eyKQWOcbMRQ8R/Mx6QdSvFLQorn8ffX
4/8g8roSX2naF3hK3N9k+PUP5AL0jFSdU3FRMGryUPkf6DrtD22S+I61j8aN
+ib/oEU64pJZ6E8Eh/ZcbhAthEj5xAulhXTwND4uO3+iEAIOTdU17zKR1bJv
xvJVIQQnNg+If8vCibADXTbZhWCMrtmzsygbessXuAUoRRDse3JSrTYHn4lR
LYdqESwYt981/JcLF+l/3QrPiyC0JoJDtS0PoQZM/x4VF0Fe9uz6kNZ8MEWJ
B9bzF+PB2Va92abfCHzZc0HrUjGsKn/GZNYUQLI7qLvoSzFKveLOnC5dfaeT
Fvtt5hLMuR+WY80tRCiRn9C4UALD7lpXsbQibGeRMTP8VoJYlV7duk/FEHFw
u5HDX4oI2SuOpm9L8DyigynofilsB7+mDb0pBW1n0tR8YylSbmuwhj8sg/h5
vmiKRhmqVemtKxTKEZVZIl6cUIb3xyQHaXHlKLrXzpTJVY6Wid821M0V4Nlr
VRWqU44MvpDkksAKPMD9FtH0cmgnBgxa8VTCQiOtM3hjBQ6aPjeivqrE3UtG
qLKpgKj4fm2H5UqsEblYUF5WAcvXvlyTVlWgrEgJ+G6txKGlfsOrA1VQHjKP
32pfibFQ6qYOk7/YXORwckttJSSi5got6v6Csm1sDU2uCvk/3+5kPFqNNaef
pku4VUHULjwlNa8aco+/3q0frsIJhbXHXqrU4DIt3Nr4+F8I3ZTztvlcg4YT
9lGU1L/YKDT3y02qFj5iEXnzG6th89T3W3lYLWzenGdxe1MN9/F6KQjVIUEs
WHl5sRrzX8rv/nOvg0p0W5TT7Rqckor+nsRcj7cR82U2/TX4NNM9/ONxPTZ7
qkpwX63FVZZtpSuz9VBVvh8S1F+LVhp6HW43IHDk0l6LO3VwNOGIONDfgLfJ
t6PKVuqgNdW0/8DFRmSmyFZv9qrHpnfWfx83NSJpnYx3wfYGzF5tM2E+3QS+
xsFdoiUNKKsfzq4pa4JCkpecv1UjvuTfTxvSaQa74xhnlHgT1gnd7dPLbUZY
xEHG3IYmWMnVdi4c+AdN2+tLdoHNYO04Lj797R+y5jieGl38hyMnG5ih0IJw
57o6ZsUWpH8T7a5NbEEJy4CXJ0srGCJGFo35W3HASK0n5VErRCNoSg6nWpGv
12ReOdOK/YFPFH97tkJDWCTrlE0bntCUHylVtIJjHYfQ55U2xHHIu9ZwtcHc
+oj4Tdd2jD5k7gzRa0O4R/1u3i0dOG50fMLTpQ0K38oc9uZ24GgOg/Tn4jZw
MM88eXW9Ew9flUyusLWjPcdYOU2kC2ofzqc8ONwO5luOO7wau7Az5kuxqPPq
vVu2h09GdONciqXvVGE7GM+nzJXa9IAtkmIxy9qBqR86k9vP9WI5YiRQ8nAH
0vYKu8kf6cP5EN4Hr507cPtD400p3X5oV2YdEyzuwI6DsZVWFwZg0ct8rYa9
E9PVe76HPhuE8e+/HLm6nbBbKLholj6EXeYiD9tcO+GosbAcxzmC8EHeaZny
TvzZLb2jSHkU7gJK32J5upCocrfk19IoYu28KedOdiHFrfKFQ+kYsszzGfb5
dMGyuH35ZcI4xpu2L+rUdmFdQFSdbfgERJ+urHMW6oaRqi1nXc8kJhiueS2d
68aQyBU9D9FpHI775BMW0o2RfXkZ16/PYPmN6LH7bd1QE/byDC+fRZzC9RH7
zT2Qbf/TwXR8Hsc3Pw5Ju9ID4TNqr5THFqAznvJic0wPVGeOF1BTllBi0laW
PdwDkY3fbpiErkDA0DTUS64XgxuOfa9tpJDd/xSE/e71IuJrU3/5Ch3h3cxk
UfK9F+F3XSLfH6An69KUPiqu9KKWl0rPE8RAzP/RLVaq98EzJp5pRICJrEhe
fRL+qg9xlIfiSmk0wv3fuXNRJX345Z/wtt+ehWS+/RHZyNuPQb9slX832cgQ
1cxO06Afz0rGhAKdOEiyHxbag/txli7QkPEvF5n/AXzp6Ed29OAB+q085A2H
rck3yQEcdGiXmLbhJf8Vb7MbtxwAU/jC5dtta0hBQWLkha8DcN0pv83l/Fpy
rO3zFGVpAOJXddTvd/GTGH6u5zXqgxBo39POZS1IWpR7rrY6DWLtVov8ELp1
ZKt2wleRykEcaXM1FJVfTwqOyj71EBrCQxn2QK2l9YRX0rl9r8kQch88v6UU
s4HUZWn38n0cwmEtNvX9osKkUvJ09JaxIRR8d7podVKYzOpzyV1TGoaJff/g
D1VhkhyqHtjlOIy6LYbLJwY3EFNW5THvwmFo9XP82mOwgQTs/6H1YM0IPL/P
8+i7rCebz7LHe54fwZFCw92vfdYRTqel3W1RIzBTjA9/YSdEtl7s6700MoIo
gxKuQR1B0sPWPOS6YRSWub9OPWYVINk/73G8UB1Fv+tB0ey8teTrlSMNfmaj
aHhyNTHsCR8JUFU8l+s8itu1/02HH1xD1lc1+rIljWJr4MLfT2t5yc0PKV43
akZRbkb79Gicm3CPcBr0L4zihyT/+5BfXOQpldbvKDaGIJ31bxhSV+vX63lU
XmsM7EeSn36uYCOT6faudDfG4Fj5zUKHg5UoClrG9nmOgSE/3FT5KjPZpdse
P5g2BlmXlMiEdiaimLEriLVlDLaU+7wGDxjJLk6ve+qM43jh5L48IcVAHqoJ
HfSTHkfN9AXD0Ckq2TCQwsl0Yhz3xHRintXSkdad+6rdbMYhxUfPUVtKIRP/
zoTIvxuHbD37zt+fV7DPJPzmZN44iIN0rOjwEjZ+cztUNjiOhHrWc+k6ixAy
f6CYt2YCXrHRRU0587hwJlixZt8EkoJ/3xo1nIPIB5GjVNMJ8PD7PYtgWe0/
N6ZnOq8nsOmavGRV+TSowpr1MYkTUHQX9nCOm0LqYtIJyboJ7Hxje5UWMgkG
BY7JrJUJGHdFibwPncBww0qm9bZJ6Ieo3hr5PI7FzA2/NI5OQtahadS5ZgyR
G9sGZO5PYmxvnbo6bQyle1KOyb+bxCUxG2l2MoqAkcHhU78n0UFfrq8vPIJP
5gV/3EcmIdhCr1yXPwRJP6vOHoEpPDO/zFOy6m9FuWxqZ8kU6vsP/4zRH0Dz
Jt+unqtTYN/ToMG5tx8V2qyV7h5T0C6WDoiT6lttPl1W/e9TUI0pe2u0vRch
6goe8h1T4KPvD+RU6UFt7HNzWfZVn3Iuj8wz6MbUyISPpsI0Mh4OWAc6dmEp
b4vQfaNpyNAPVHxP6cRa9uSpnJfTYFC8PnxpsgNy0mIy25OmYX3jMHO3Sgcu
PhzKTWiYhskTs7iA1XlS8/HpTz2GGZi6XtTu7W1DJru6AIvMDE6ckV3QPNyG
A8z2tf/OzKBVQcZ3V0or9ExsV8ocZxBwY9vH3VtbweR926MpZga2A4YOB5Va
wLfVw42hZgb3EhzZWZX+IXx6fkGLMovNks3fZNCMLOe8uvdSs9j17uBcy/Em
3P1vcZuY/izyIwa3US0bcUYkdOCrwyxsZ1s+Lvk0YD01esvVT7N4kDnzRCO/
HsV0S7Xy1bPwcWquO7E6//lEnjEIU+aQ0aCvFEfqYPmOL05Ueg6Bkhmb2l6v
/ktOParC6TmU7mg7/LShBjqlTx/YOs7hEw/NVlauBtuCOkPLY1e5Vqn/pXs1
TB1OHlarm8PeE3p/5af+wjnWzraMfh6TxYGzHRf+Yml6RdZGdh51hSf3aJdX
YZjF7obKuXk4zX7YKXSwCpMBDvIbXs4j2KpykDerEky+/i8EPs+D370scIpU
YvsZncsyLfOwih6lPs+rwMdSjkpjtgX8rskUf6VXAYHPZ0vj9yzAv81WsKix
HHMxwecELy2Avcr5zbob5dj5cL9dsPsCDqraPdailkNdOlDmwK8FuEzoeh9S
LIPNDo77830LuBKuZLPGshR/nPr0K/kXUbZ4eCYgvgTlDA+L89QX0fnBot53
shgflNma/t5aBLOtVUgqKUZqRe3zleBFNLKXpGZ7FiHcdUORZtEibOltDlr3
F2KjI2dc9OwiGto41npqFYJLtHn7lq1LYL8m2ND68Q/cLZIPp59cQjAP0xUp
nj9QoX1mveu4BNeqqo0qjwoQYLpsoZ6whLRjmzzah34juTj+hmzzEqTNd70e
vvgbvT71a/awLSP7jANNqSkfa6XdjM4qLaPrpYmwp2E+snY26gVcWYZIn87t
qoY8dAbndk34rLKtXnLNhTxkVOtutshdRki1+IX7vbkQz7JiWxxfhuMpSqyn
VS7Ye+TefhRbwasyGQsaQy4Cnj2qvXNsBb7mcmMpvjkwi9RMP+OwAnYFY5bH
23NgqmBz3CB+BW5L1bXaedloE132sGpeQdTY16JJ42zs3GlETjNRiIOb3xvz
lSxoshzioohQyGYfar9LaBY6tXZ9TVWgkGEdumIdjSxIZDxWeKRLIe5Jnptf
9Gei8U6Ey7HLFLKyIrV1m1cmKGHUjF2PKIThkJKK1IFMCBYxFor6UEjKh8nC
opoMqGXwJgjHUcgVr6+sYQoZYApzuSmRRyH859YfjfVPB8t4HbNqM4WccVzo
+7PyCzcC9e2vTFFI9o81obUWv8A1ZloWxEFHngfz+H2p/wn3HKPF5i10JN7n
g4bqkZ+QNYpilDlAR6zCA40uZP+AkZfHgPNpOjJ9NKxoTPkH9HMexs/cpCPB
w1t8mtK+Y39Hut7tl3Rkped7PYPSd9x5Fl88+46OMC4fyjz28xsMG0MlXNPo
yNvnU9ei1b5BOb/PdFcFHTk14DY6WpSGlqpGu/Y+OlLFlafFb5CGtYcK7oZR
qeSVW+FBup5UDEuvHLq5nkqohyK839qkgoOU0enIU4nMee446qZUuPG/8N+l
SyUaZ4I4nkV8xVquW1wSZlRy9HaLeb7KV1gZ1Zltd6CSsNubIs/XpcCUj+Xd
AX8qmXVrrZC4l4Ip0cNpRklUcu1K7rQ5fwqYz3YnvymkkhqlhqsZqzn51WMx
t4KO1fPTDoO7//uC55pqurxLVGLmyCGcRv8Fxkddhsz56UmwQKjw/tjP8Dhw
8FaZLD3RfOvk9eX0Z/gkJ1Sr6dCTW69Zw7jpP8Nbj00k15SeRPvtb1VPSgZb
eoDOyYf0ZOTUKSNVk2Sofgs0GPVZZfFl30XeZHxj0T0clEBP+K6w3TLPT4K1
67DYqT/0ZKxTTeGhXRK0yc+mdR305MrnK96SckloUhi3G1mkJz+33wgw609E
dXTRSgU/AznlV/NJIjIRXyefXM3eyUDMtMmLyxcSkRt5/GvmIQaiLca9f82G
RNTcuNVXfImB8Kf7mh77kgCGPQLUHnsGYhu8cYvi7gTobXhE4QpgIIm7/vua
9yUeEnfqOjU+MxCd6ZLAob3xmCgwSnhVwkBiuu3b3mbE4dqohnFDDwPppM2K
5GjHgW4hfUaJykgKs4yvHvsbCwFVyr3oDYzEyK/Yf9YkFvKXlBs37WEkh40f
1lqOx2D3ifBtsccZiRat5VXhsxgc0TY7p36dkUw6WKsbCcWAsyb1Xu8LRjLI
qWjCnfgJ11vzHwSFMRKbhTWhVdqf8DIy+9L5n4xEbGZCLKjjI1y/1++RrmUk
lt3y5mcff8RrwX0TtPFVfaaBPuPGj2Bay+M3zs5E6oaLNrpnfECBubP4wDYm
Uvy00GDE5AMsFKv9x9SYyKTdxU4Bpg9opK6bYTRiIncbA2eWY6KxkPXsgMSD
VX1YzNrAk9GYroKlgTcTOaZowdGy+B45zNavfROYiHXBk/Gc6Pe4G67r0l7I
RBzfbJHCqfdwPjNuq9LNRO5kzuhrUd9DTd/5RCQdjWQ55ZyrSopCnirhWydM
I/zbLEwaTKNgcGBvZvBeGqEMVBSeXBsFp76A07KnaISOt3fPnj+R0DRxri21
pJGNHrmPH9pHoktDTv2hM40sMPSnrleIhELq54A90TSidOuKBMdQBO4ZyzdS
cmjkCP/RYzrvI6B1q45W949GnANiWguMI+D2Lmfjr3ka+Xii+sezDRGwkBMS
T+RnJj4W2gvW9eHomVvgSZJjJjadzsU+fuEY1ncdzNBjJtepttHNp8MxpTie
3GTBTB6ct9+iJRCO/I06l2kvmclZfVPW4rowyGz7Qk8imIlZHoO6WVAYYudO
ur7IYCZqgsKdXBfCINSozdjYyExGzVkkc8TDsPdD8tX9s8wkeHf0Hdu+UJyu
S0yL42Mhr0UUD+5MDEWzvemU9C4WwuWncaTlfigKjnSLpOmyEI+MqKNPSChk
Pc8qnLBgIW6Xb6nwsYYiH81751+wEEk1jgOiH99hf6+zZGIECwnvXCvZjnf4
kfWUZpXJQsyu1DFfrguBUnRbpWYzC/lbcdLr3Z0QNAtlO2+ZZyEf29d2vOIM
gYmaqtwaAVYyVR3NKhgbjBPjtvmc8qxEcGNpgMbhYNyMctIWPM5K8mv8GpS7
36LuiXOa7E1Wsk02cEeV11tcM/Ln13dmJW1uP8wl5N6i+VuR6asPrGQipBcP
aoPAmY/gP3mshJ1ldznsgyBxiTNfsIOVVPX+TrbaGoSMrcebrSls5LkUczJ3
eSAET4p1tAqzkQuK/jnsdoEQb/erNVRmI62vd9FMtwUi1rHke6sBG7FOdjDk
rA7ALZ+GN9b32Iig98LNpacBkNxbqyvozUYqhENfKMoHwF+lcakgiY3EFLfW
xnf5w1dm+e3LMjbyPfibg7G/P9hPnZE+NcRGGELK5TWP+IMav/RBho2dOG4W
33eGzh8v52j8ApLspFlFod491Q9piW/ucGixk3cJjx8O3vTDe7bwdJ7L7GTo
V1z8pW1+0KMzmhd/yk5+OIyumWz1hb12zRaNMHbSu2/I3ifIF1kGoqp3MtgJ
xyadSvUzvpC7dvxIfPMqm46sWVjjC0s7e63ZBXZiNMkm86XCBybaP+WOreMg
LMFVf665+0BGfyPn170cZGdiHJ3wMR8M9/2olzzDQdrP71DL4faBC997nxhr
DiJVlCxwttIbQR/HVJW9Ochl5SHxZm9vMGsm/6tL5iCPD3eKaht4Y+7QwrVn
FRxEeQ1vq+8Gb9zvbenbP8pB6qVKdfLavHCI764BIxcnUXVKP18W7YV3br9T
G3Zwrpqz7o6km16o6B6hpR/hJKeUxLvMFL3Ae2dZO+EaJ/n6X2T24LInZE8z
2sU7cZKZ8NuCKPCEzHP+kB8fOclE7MCRs56e4M1QT64p4CRS7zeq7f3PE7c8
Q1JXejhJ93SgdpOEJ6T+2xuvSOMi9dJ2evunPMCou8nXbisXYTc/7WKY7YEL
xjcsSzW5SKYXLsu4eyDLTGqf7OXVXHrZRTfVyAOOdBbTwc+4yKW2uI6xHav6
SJXIdZGrvDN3feOSO8R8k9WjcrjIRr3SOctSd4iONf7d38FF6N6U1sS+c8fM
8U7pO3Tc5PT9zN3ut93Ru1fD7AgPN2G+zRfGr+GOLw98AnaIcZP97wPPqAq4
w7+oJW/tLm5yKSs/n7HGDcwVUgMMqtykN1Hjaa69G8YF7FkWjnETA33H5c8S
blgWahOdNeYm/ZYTm8uqXNGgcm7X4i1usk8yZ5H7sStuVk7sozlyE8sQuSir
Ha7YIZS8X8iDmzyeYj491egCTZVgJbkwbrK1aMXI1dkFPSd/ypxI4iYTc3Lb
lFVc8OIyv/CDLG7iOO65fWboDdguJTNEV3ATb76z9OmhbyC406+rsY2biMU+
13c+9Qaa/kUZAqs5/+bvrosGLG+ga3ja6yyVh8R9YN+wNcMZ50QOGEfy8pAe
66CSIWtnyDq+3jq1iYcsDpTdjdnhjEus6D6ym4dMVuYIn+t2wrtdl9/FqPMQ
zT0a2xfeOeF/jb5xtA==
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
YlR5iJb3gQydOVf8H5vNhgc=
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
q5qX/NH4H7VIex0=
         "]]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zIwkwh5229r2wf8A7pV9lA==
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D5/f5nA=
         "]]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzllvc71o/3x+8b933jdts7GSWFskLW/ToHKRVKEi1ZkWQUDStZUUo0jCSF
SknJymgh8Q6FZM/ILFt2Pr5/x/f8cq5znev8cK5zno9zZOw99p9gIZFIMWQS
6f/8/3ezT+vxDHBIAeN3rlPL0s3arlWJiW9/ZcCF2Axi3YlYnYWMgt15ca+h
NOv9pdjrJN2009qCXwty4bm/7JfXo8a6aglmNvqRb6ArOyX1685gXdNrzIft
m4qAKnr48vNNr3W7FFMdnR6+hcmawgHGpyZdydqpK9qL7+GehOTzHMcFXZHA
9h+NyR9B3fm+O7lSVE90SnZkfWEJsFs+s3jqoK5Hedq4TaWqFHS/83/g3GSm
JzoUbGHQVAbqciMaY66Oeqcom70OdX4Cu1hpRscrHz0xgVSGfk85GDwInKMd
jNJTVz685kH3Z9j4yfnr0t+Hej6Hu83m2ivgmbxh1z7RbD3v+rcZHxsrQTXF
fKE4uFTv6+1Mq4Nf/wNS9+nNklCvNx+9R43z0xc4f/7ibXOnHr1D/U1RMgVV
EJNpP14qPq73Qm/QtPl5NSR+7Dpzk21ZL1XZOcj+fg0cTPNa2BnMwfT9nV/w
5/pXaOHoadr/R4iZd2Y7Z4r/NxBc+pfQdn4d84c+67k6jVrYXuj11CJEiflk
n/xvWmYt1IUb1G79rMXsmqq4yCJbB/GLQpvcvhgyPwg+yK65Vwdz0XyBmhv2
Mo2zEn5789XDWrNjZxQUrJk77MNsWCLqwXKiXMQ6yJ4pvZ5pHPivHqiuRNEY
6TTT42osz7T3d1AgyneMT3szdy8PHzo58h1GNQckgxmBzImHLOt67RpgOiZ7
e1HVFeamx/NfTjU3wIBBSzBLfDTz89v7KpS9P8CVQr8YOBfHlPZLyXtT/gPK
bxxY3KbyiLlfQ2hfuF4jjKXRHGL90pli7mp3LuY0wrnX05FcFq+ZUmLz724q
NIFkgJSkmk0B82JIbGHtoyZQFDUc9+AoYUZPtiiAWDOU1Yc7kLMqmAu5tV6d
0c0gIx+mdsq2lnlA4WnRa/YWIJxuDoyENTKfz/aPFl9uASVpiktSbSfzJMfG
rytzLTBmnyDeNdfH7KbBYOCZVuC1kAsIcf7NDLJjpBLDrfCkc3SPmuwUc+dM
O5NwaIPTRW82dr2YZ65LPtdwub0NWKdadrxaTybmTvbYsR9sh8iv/RLaFVTi
W8toaeO3dmgK/poms56byP18oeDPrg7g4Dk2ldQiQIiLeQ2ZfeqAfMrZ0Icc
4oS3WlPfItEJujzJjrfJMgRnr/n6v4WdULWrsHpZSo4wsWhlB40uWOg46lqf
sZl4Xyjd35TVBbXqxT2Xg9QIttSxJVvhbmCsbG2tr95GSKfStAMPdIPFuJKK
YyBBMO8Fa1bc6oYB8UPPrlw0JIJpugHadd1gLHVf4vVnYyKToR7VyNMDsm9a
5rtc9xLj/ux9D8x6INQsdY7abkGY25hP3brRAwqPZnZvoR4i9paxKeZU98Dj
1KN+Wz2OE/4RNdMr9J/gdzdjgP+VA2GQfjTPZ89PePC7X37fnZOESkZutXTk
TwgqdGMrv+dOHMnziJ358hP42B/V8ZG8CHoa6dQcZy+kiTe4rQ2/QPxLHbsn
v6cXTuw2K4rhDiCOPuD3uRrZC+tzG4fP/AoijOtL9olW90Jmd3zmtuUw4tQg
u2sjVx/IjOBUzNQ1wraigfHJtA8Wtg4IyvhGE6oukv49UX3ANpGU4Sd2h0j5
zf9XqbYPqjmsfu49H09Ei2gXvuD7BRoXnHgu5CYRL/zukI5Y/IK1H9vNqCuP
iBKXz2w6d3+B7Hfv9G2lj4nJ9s1Lu5p+ASm3i8jF54R0yIp4pFg/RDx2U4b7
r4gpNtfby0f64ZFpb8Paf9nEnszndx896Ad/sZ2yRhX5xL/r0vsu9PSDy9Tn
AYPtxUSmxumxS7ID8LiLvZ1990fCXPbygwLnAbB5nlVj5lZG7JrMuyKbMQCJ
T53PfZCuIGrser6Vjg7A3Jb8k87+VYTIIfuHt9UG4cm9YgWqWS2xtVNjbdz5
QejdNUpu2/ud4JelnqopGoRhh6FM2cZGQrxA+5nmyiAE8F91kfjbSrh0kpfq
DYcgt2lH8IbKLmJF/mRwSsQQPK+O4pDK/UnwHjty5HHNELwJeiUFi7+Ij/eL
09r4h6HBZWT6e9UQ8YfFyc/IehgU27rO9umMEtlxsPgzaRi2RqVf1MuaIBaK
AXJ7h8FVTVSO/GKauM7wtSuUHwFZzh1kZ+k54lj1Rr9JjxEo3M/ps11qiais
zEo7nj8Cj6WL7nvbkGBfT84MaXkE3vnt8NJiZ4UMYZ6wRsPf8F+IFQ+vOBW6
dAdOdl/7DeP39C/3p3CAnPGrfMn63zBxvmH38xwGVO5VDokR+wOvfsZPVCrz
Ab985E8tuz8QvjxlrNQpAM0lxoOCz/7AovrRHOsJYaiXP/h0w8QfME4Nvadz
QRzmLHnUXLVHYWuZgtG9QEnIfmh471fQKBz3W1CUi5IBe07diTtfVvOLxTlF
KrKQwCze6SMwBsN7xwqG1DaC7GGul7eOjsGo3qJIxCMF4L62vLXn8RikkarT
uCOVQM5haNBxbAw+PVHv7w9UhQF6x58oiXEwWxuTLcChDqVvzzOu6I/DOZ6l
HOcRTch3NmmNcxqH6oxy1WtqOpCgr3nkU+Q4rHTaGsePMGHN97ZY+utx8A9d
WPeMXx/c0/NuuzWOw7e4nzbe7obAO8ZtPbw4DimdD+vilXdACAttOEhmAjgS
+MMvGO6C7MFbe9V3TsBpaw+P8A8mMP3+UhTZbQJmzxXOnrLeB5qiHi+Gbk1A
ywke+uHb+0HV9OfL3wUT8MuZtSVN1BI0P6gmcnZNADnp64/8CStQ5b593pAy
CXyDe5+yyx8BfwOxHXGKkxAfvUvH+osNSIzkcVP3T8KdBs8Y5zN20K2i8+Pm
xUnoiAr/HvvRAaY6rR6oJ0/C/LCQ8/JhJ9CxS3GfLp+EG4s9bB27XECq8Obu
b78ngZa+eON23GkQc/HRLBeYgm829/U6N3rCcaskzUadKbifLc6XAWdBMl1y
L4v9FHhQzfLO3fOGzJvU0F1Xp8DOjV/KDi8Ay1qjloysKTBN73ofruMLb5Ze
75dvngLyw00RorcDgE2DMV2yMgVPvB9nFz+/DKOtKx/PbZyG6rtv0lQrgmHp
o8S77XunQbpWuo5LLgzSpHpGlC5MQyRX+prt38Lh67a8ferJ01BjZVP1vuoa
JIz9Hj1QMQ1MQ+cGzw1R8Nyl8r/osWkYUe6UeTcVDfJx3n0DIjNAUTquuIHn
NlR9ohscxhlowM2Wva53oWNd7K+BkzOQfVkzoJgvHuqMOeujY2YgcDlO/BhH
4qr4TDkti2YgSqrzp9fRB/DAUCNGvXcGjue2Zf/hfARNL8JclLn+QjfFp+uH
dCrMjE3dNdL4C3JaG6k55x/DcvkGsQs2f+FT1TFpUcF0EOLKnikL/wsODsHt
buQMUFOUUdr8+i+4PaftlDF+CQ7+fz69av0LBpEb5w/PZ0Hjs5C3ZmyzoMvM
A29qDnzkMhThUJqFJuVW2pB5HhDsl5o6rWYhI6OUGd39BszsfFe+Bc3CaOVs
Mlfp6p9450xMe8YsDNadcPky+w4E5WJusjXOwkyx72bzio+Q8ndhcSdpDnTt
Ep17KkuhJLK8+YnCHDzSuxXcSi0Hr2NLG2Us52B54YiAekQFWEk+HMkPnIPx
k4J6zw98gTUsTzecfL5av47fts67BqrJy03qP+ZAxUHSVtCnFgQlQ9nWkuYh
3rujIs61HjySBTOlFechcW1gQFJcA1w8EPAdDs4D5fxzmR7WJtj1NcTHN2ge
tLzlZklvWmBjYt/D2hfzoBH6UOV9QTvYB1rsMWieB2W3nxU57N0Q+cLP9xvr
AvAOB+r96+uB5b8ryheVF8Ax0zVU+G8vjHL4uekdWQCrmc2BCvr9MJ0QqC4R
vgBD714Mv6kaBGps/BWRnAX4nmufG5Q4Aputdp1Q6loA2Vs81kH5o/DsK6Pe
lr4Ism1eF5z5JkAk5/DXl9sWoYEtpEJ/alVXGUlHRB0XwfBAWV4l6wyo+DP9
kqIXIXiCe6rSaBYMFe8pEe8WwUbjgsmn4nm4uIVxYWFoEaTtbyXWOC/Bf9eG
LOuFl0AtUfKS3Z4VqGXzry43XIK5lZO+8VvJmK5Lb2/wXIJNnTsoZzpY8E1d
U9hK0hJk/GoqfZnChilRElVGVUswmp9VVx1ERakg7sync0tAxi+vP1xkRx7p
js0b5JYhg/bh9JNQTow+lb3nvcUypBkesmh4xIV6tBxOr6BlSLiptbu5ihsT
7P+dMny1DKYt+6HyEi9mV790U+5YhhsNg8GP4/lw8G6LwDb6PyCu0/b4ZPGj
kOJNm8Pa/yB/s0T0ujIBLFFpM0tw/gdy7SW6ETWC2Jf06dfU3X+w6fGES0G1
EH74YSp76tM/aPw800J5L4zrS7zpS5P/QEXwuLFMsghyDajdfyazAj+yPcs3
u4tiQmhA09l9K6DQXR5dIS+GTmlG760CVyBZev42f50Y2mtcNLd+uQLK+ffX
ZzqIY4/0vxjvjhW4315Xl9EjjioqNniQSsJ43v/sr+1Zg0Ycu3lIkiT0dR/e
JJ2yBvt2qua/0VjNXzTxudC/Bjd9uKwRYEpCgeCtDT/EJLDtbOqNfSdIaMYy
R3/FlEDSI5YPqgEk/PWkK/WMhQSKVlG+SN8lYUixAyP+qAQafOB/tTaThOXf
3EvuHpZA6qMb7pvKSXjsYdCJr2YSyDHZzK7fQcLK2/vlYnQk0O2e5SXnGRJq
HTP+xy0lgTwT9t8SGWR8xl3C6rm8BqPLbJY6NpBRXHiB+bJxDSrbPKYoEWQM
1Oa/n5WxBm1ux4xEHiTj0PXleYOANWhZ5v9y1p2MWm/mr4marEFm73uzM+Fk
1DHzT6wRXYNnQ19WzyWTMfYg66WhXnE81PZwU1QBGXvEWq90Z4qj7uche9U6
MjbsOKl4Plwcu763+f0cIqN915hoJ4ij0O5Kr0csLEiNl4sJZBfHUcWV3e5r
WHC2a/rJ8dV5MPAbeZc6CxYK187K3hPDm8JX4lVNWTBKud01wUEMhXg8eTY5
saD+xZT0m1vE0Num2WlzIAtWWZ3dsGVOFO0FOZKJeBb0lz44EVYmijPSewps
XrPguhJV02c3RZH9cH/29S8sGCJ51SnlqChGXJa5WdnLgq1i6xYuKohimJGB
Kf8yC7rqSfaozoug7d4bf1yEWdH3WjzLhp2iGEPs8PymzIrs+W1O+xNE8G72
qx8Gu1hRTErdoeiUCN4xo0t+smdFj9EKKVamCNLfJ+yy8GdFJ8OCKHleEdQv
vGc9fpcVE5Qtujf0CWMhh+mexFesqMVN11goEMZzUaMyB/5jxTU9QxOJUcJo
jG/bxXtZkS9u4wzlhDC2a0z6jS2xYtIj1ZIqXWH88bRqpU6YDYu/yqmICQpj
/nTwyVIVNhxKFWbm/RbCT2nm+R93s6Exk8t2pVwIG908h6od2TD+hM/f8WQh
ZNsmwjJwiQ1pWZUeIb5CaCYRQOJJYENy04uDWZZCuOlsc9/2HDbMepJofUZV
CKcqbV5F1LChZGnRno8MIXQd327bOsCGrC98t8YNCyJ58f2sNgsF1w0JbB+v
EEQRfdL5pxIUPJTK/6v8sSCqO+q2rdtGQe3vwjn8oYK4dX/KxhfmFGy4PHS5
zl4QTYydjhiepmASK6v1sr4gcje+OT94hYI9qvcuxsgI4unuzz6JjygInOaH
rpIFMTyt1PHoWwqaTPwZ+90jgFFFLdsUmyjY67g3IrFUAK+K6kzRJin4gysW
klIFkCrEFzfJRcW7gUsDC6ECWOkSuX5kIxWHI4Ny0p0E8JTmj/gJAyru43Xf
nWosgG0s4rMUGyraK4uEDCgI4GJJKLHJh4q+K2h7liGAf7+Dh/UdKtZu8+HR
H+fHMvZzV2NfUdGtxG1g33d+9EoxvfHzy2p8xsApOZ8fI60mffX6qVj8ZFBZ
4R4/GlhG7k8j09Cb149rLIAfy/VRUHwtDd/7J/eP2PGjNaH1MUmLhhJa4/9J
7uDHa0MJB5UP0NBX270nTIEfjewim7560PCF0PI5KR5+/LVdzdA/kobm/kO/
h6b4UONNTsK2pzQ0rfX93NvMh+dt1dtIZTQM2B59n/6eD3d6NtOaO2n4rXSX
jG0qH95MLpN6t0DDrs9v13ZH8OEpNbH1WcLsKKGX53nNnQ8H5hf5XquxY8KR
YIbNAT4ctYz6/cGMHa94fVs4pMOHM5qT2e2n2NHkXIR5gDQffpbadYIWzo4K
a77oVlD5UGljLiumsqOye8eU5h9efDFvEXXlAzsa1B9VaP3Oi2JtxpS2NnY0
SskkhxXxolZ69knmHDsWa5kI2j/ixYPNWQWZghxITSg9bR/Bix2X7GcUVTnQ
cMUzIsyDFytN+iULTDmwZubZ2JeDvKh867DG/lMc+Mnur7oawYufoUNr4QoH
enXaTxdt4EXmYKR8VioHXpFsrHdk8GJxSQjN+yMH0tm7F2yGeVD7aU+9UQcH
Vqn/NNco4sEOsdLIDQscmL7lwDqTazxoZ6CvJiDCifvywhyHjvLg/knfz9zq
nMjwiAsbkedB98fXjEXNOVFm5XQj9xI3NgdHFii7c2J8oZry+hpudLWJF7aM
5ETJlmna+Qfc2FFYZR+Rzoktg2FyNE9u5P4MSf+Vc6LEnU0qjfrcuMmR+7No
Lyc+rSma/SnAjR/kzDvOkeioni6+e0s/A0UtZHq719JxrVLDfG4BA9f/jGs6
pEtHtS3hnT6RDHwRVFPUbU1HFbRq8LNhoOfd1uvnztPRuO1EcZEqA+W1mkxF
79Cxj3rwgiaFgfF6bcuVr+nIsG4ZHW3mwlilf/fDv9GxNtaI3veCC7kOWCke
+EPHsy5qBUJBXMjycjldic6F63ZJ9oZYcmH4PE1YRJ4LdVfE/JQUuLAg6/pZ
xk4uLBnz8RRaoeMTesp7vhNcOMag/gltoKMZ2WZhfQgXZllbasc/o+Ml48YN
21f/DP8dJhNbA+lYYi2tf/YDFx4ckv5Gt1zty9Xc5GUHFxbmBJVLKdLRw+/S
zrlFLvSWHvjsQaajnfFbtX3iDDyyYF++2MSJSpZS3PlaDLQa9coue8mJo0PF
LfJWDFS/03GpIowTbwg+uZtxjoHSXGHitGOcmPhsQl/3DgNvae73Dl6dK7tR
dmdzNgOr3IR8tbk4cX73omtoHQO3h58R3dzHgRcGu4aY4wzEsv90Dr/lwN2C
XtYUHm68obm1quwOBybfrHjTuoUbZeRdsk+6cWBd/xjtvQk35reWNRnv4ED+
s/+MX7lyI/96VRlHKQ5UPkjxe3mNG+vclbyKVnWgFCb8oPgZNw7krBveU8+O
/B8MsxsruXGUl7Qk8oIdPW89eLMywI0bLMnFkldWdXdM66UmjQe9UlMptrbs
SDFdF+snx7O6D10FbTrseNzWzeOrEQ9is2xWjBA7ljgp6Cif4MHhZ0fLg8Zp
GEQ+9TcplAdzNv+qzaii4fE0vTTxNB4sjRh4ybPKFZnYbMPHZTx44qqaYmYw
DaUn2hqYvTzYYLJjbagNDWfN+xTPknmxk+ZkdUeHhoNa251M+Hjx0jJLTZsw
DXN97iZskeHFvM3nXY5PUTG+qqtcSJUXBTY7HBavpSJ7ncIImz4vGu2JOGAe
ScVJkUsci/t4cWb2/W3ta1T8J9YjPWfLi08X688kOVOxVe+I6pInL857PisH
Iyq610/p0IJ40XLc9SHXeipuEctmisXwYlD3wwARMhWN9JK01Va5UuI0GH2o
i4IDFm+V9r9e5cJI7IP6dxS8ckJ4rU8JLx5KWXQJvk9BumM229M6Xrxvdyrv
pB8FRVXifrX1rHKMYWQQdpiCRvFVH0QmeTEjl62uSZuCpocO3j7Mwocq7gYy
tmIUPCJJ2Kbx86GQ+MeJtfNsqBx0VW5mHR/Gi54h8bWwoSMn9Jts5cMtvCGc
2oVsmKx6IjnDcJW7L4Vr7q7e5f8BtlTkCA==
         "]]}, {
        Hue[0.3356314599949535, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJzllvc/1f/7x885xjnGMcp+l0hEyspIOq/rQkKkSIQiWqIiym5oSMhIiIqM
psxSpDKTIiIZGdl7r2yf8/07vs9fnrfn7Xreruu6PW/X4/54Sjq4mJ2kkEik
CDKJ9H/7//flkNLhevl4EkSYb9xw9UXpLueKhw8/9qRC8mfPzXdtaYyF1Ny9
OTFZEH0y8EJHqCIj5aymQFXuW6C1XaMrmhkyVGJNbLWD30PHStL22nt2jH1B
jCctsh9AdkOrzeRvV8Zf+eQTp558hHebKPQLUtcY4j+nAjQXP8Mjo5PuLEkh
DOGrLb/rEwrh+B67czgZwxCZ2jQklVcEZ+tGs1zEkxlsz+s1lCqKoUbrakvN
6TSGyMD1gzoNJfCUsX+D73AOw4ltq7tVWylURtykDjcVMETXJtO1O75AsFCo
7trEMoaqovV/8e1lMC9tqWUZXM3wtm43mWv5Cot5G7UEEn4zLtZ+TC2sL4eD
9Phbq6qtjKrINEuLqm9QR4/pjPfqYsyHG6lwln6HxteHefleDjCsehtCJXMr
oJYjbe2l/HHG6139+xpfVQJPc1xb2OMZRrLiaX+HRz/g/vT7WOuMRYbP8Lvc
kZAqcG/7628WQyZyLuzmTPKrhs0stIMkFXbitzbLpRq1n/Dtx7ditVou4tkB
uWFq2k9ItD2kX2XOT/yd+upF2VQDb3P/pvB5CxIFAvHZP+JqoOzSnFCcpxhh
kBk7fJG/FtyMEnZWaUkQexxu2VICayF47vEVo19ShIQUw+DqSi1YknqaU9bJ
Ei53onmnL/6CPw2jAafUtxF7lwetHId+gRK7Y+l0ojIx8YSyscu+Dp6F/afE
rqFGyD6d/+7UWAd2P5xjWdw0ibKPj5TY9v+G3q0etYrnCULCNynn/ZffcOXO
R7gmrUOYqQkeuL2rHgYOvfC1i9YjRM+r3Pd6Uw983bY+T+INiQ2i85/CtjSA
1dvv2rYWJoTXjei8n4kNQFy2KU4fNiXCJ5u2gGgjKP8anKyQOkQsvP3p3hbe
CIY3H+SNdB4mzLc8/5BFa4KjN/zvIRwlXv3rHc2/1gTawnb2YbL2hCPH5qrV
uSYQFZgr1hU7QbRTof/qhT+wMd/hzq+bpwl/e3oyMfgHFEI4m3J9nAn9mRYG
cbwZbFyPikXRXImNCZfqrrU0Q6RzoT9kuhFzjh32NIsWCK80HD5QfImobhot
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
8qOf3t/qhJpl+B+LgvqG
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4.316084375907308}, {0, 65.57727530890185}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 4.316084375907308}, {0, 65.57727530890185}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "D1232", "D1600", "D1620", "D1700", "D1900", "D1905", "D1910", "D1920", 
       "D1930", "D1950", "N1440", "N1520", "N1535", "N1650", "N1675", "N1680",
        "N1700", "N1710", "N1720", "N1900", "N1990", "N2080", "N2190", 
       "N2220", "N2250"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.748773307335297*^9, 3.748851723436*^9, 3.748852108630307*^9, 
   3.749207214065859*^9, 3.749207289474895*^9, 3.7492077908100758`*^9, 
   3.749211524748374*^9, 3.7492124149165077`*^9, 3.749284871700865*^9, 
   3.749290474649424*^9, {3.749290620200583*^9, 3.749290644712606*^9}}]
}, Open  ]]
},
WindowSize->{948, 1131},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4460, 100, 187, "Input"],
Cell[CellGroupData[{
Cell[5043, 124, 3010, 58, 187, "Input"],
Cell[8056, 184, 580, 11, 59, "Message"],
Cell[8639, 197, 580, 11, 59, "Message"],
Cell[9222, 210, 578, 11, 59, "Message"],
Cell[9803, 223, 566, 12, 23, "Message"],
Cell[10372, 237, 14473, 249, 248, "Output"],
Cell[24848, 488, 788, 17, 59, "Message"],
Cell[25639, 507, 688, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26364, 526, 2678, 59, 231, "Input"],
Cell[29045, 587, 625, 12, 59, "Message"],
Cell[29673, 601, 625, 12, 59, "Message"],
Cell[30301, 615, 625, 12, 59, "Message"],
Cell[30929, 629, 614, 13, 23, "Message"],
Cell[31546, 644, 300254, 5344, 246, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
