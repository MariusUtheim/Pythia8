(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    982875,      18023]
NotebookOptionsPosition[    978890,      17898]
NotebookOutlinePosition[    979229,      17913]
CellTagsIndexPosition[    979186,      17910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Common", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"On", "[", "Assert", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"comment", "[", "c_", "]"}], "[", "val_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Print", "[", "c", "]"}], ";", " ", "val"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"atNotebook", "[", "path_", "]"}], ":=", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "path"}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Second", "[", "xs_", "]"}], ":=", 
     RowBox[{"xs", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sanityCheck", "[", "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h", "=", "#"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Testing \>\"", "<>", 
             RowBox[{"ToString", "[", "h", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Assert", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"m0", "[", "h", "]"}], "\[GreaterEqual]", "0"}], ",", 
             "\"\<Negative mass\>\""}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Assert", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[CapitalGamma]0", "[", "h", "]"}], "\[GreaterEqual]", 
              "0"}], ",", "\"\<Negative width\>\""}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Assert", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"dec", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dec", ",", 
                  RowBox[{"decays", "[", "h", "]"}]}], "}"}]}], "]"}], 
              "\[Equal]", "1."}], ",", 
             RowBox[{"\"\<Incomplete branching ratios for \>\"", "<>", 
              RowBox[{"ToString", "[", "h", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Assert", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", 
               RowBox[{"isoSpin", "[", "h", "]"}]}], "\[Element]", 
              "Integers"}], ",", 
             RowBox[{"\"\<Isospin is not half-integer for \>\"", "<>", 
              RowBox[{"ToString", "[", "h", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "j1", ",", "j2", ",", "jOut", ",", "lChan", ",", "inRange", 
                  ",", "outRange"}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"j1", "=", 
                  RowBox[{"j", "@", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
                 RowBox[{"j2", "=", 
                  RowBox[{"j", "@", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
                 RowBox[{"jOut", "=", 
                  RowBox[{"j", "@", "h"}]}], ";", 
                 RowBox[{"lChan", "=", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"inRange", "=", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"j1", "-", "j2"}], "]"}], ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"j1", "+", "j2"}], "]"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"outRange", "=", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"jOut", "-", "lChan"}], "]"}], ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"jOut", "+", "lChan"}], "]"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Assert", "[", 
                  RowBox[{
                   RowBox[{"IntersectingQ", "[", 
                    RowBox[{"inRange", ",", "outRange"}], "]"}], ",", 
                   RowBox[{
                   "\"\<Angular momenta inaccessible for \>\"", "<>", 
                    RowBox[{"ToString", "[", "h", "]"}], "<>", "\"\<-->\>\"", 
                    "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], ";"}]}],
                "\[IndentingNewLine]", "]"}], "&"}], ",", 
             RowBox[{"decays", "[", "h", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "True"}]}], "\[IndentingNewLine]", "]"}], 
        "&"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{"Ns", ",", "Ds", ",", "Ms"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Kinematic", " ", "and", " ", "helper", " ", "functions"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "BR", "]"}], ";", " ", 
    RowBox[{"ClearAll", "[", "massDecayBound", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getDecay", "[", 
      RowBox[{"hIn_", ",", "hOuts_"}], "]"}], ":=", 
     RowBox[{"SelectFirst", "[", 
      RowBox[{
       RowBox[{"decays", "[", "hIn", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "hOuts"}], "&"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BR", "[", 
      RowBox[{"hIn_", ",", "hOuts_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dec", "=", 
         RowBox[{"getDecay", "[", 
          RowBox[{"hIn", ",", "hOuts"}], "]"}]}], "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MissingQ", "[", "dec", "]"}], ",", "0", ",", 
         RowBox[{"dec", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"decayAngularMomentum", "[", 
      RowBox[{"hIn_", ",", "hOuts_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"getDecay", "[", 
       RowBox[{"hIn", ",", "hOuts"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"decayProducts", "[", "particle_", "]"}], ":=", 
     RowBox[{"First", "/@", 
      RowBox[{"decays", "[", "particle", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"minMass", "[", "particle_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]0", "[", "particle", "]"}], "\[Equal]", 
        "0."}], ",", 
       RowBox[{"m0", "[", "particle", "]"}], ",", "0."}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"massDecayBound", "[", "particle_", "]"}], ":=", 
     RowBox[{
      RowBox[{"massDecayBound", "[", "particle", "]"}], "=", 
      "\[IndentingNewLine]", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"minMass", "/@", 
            RowBox[{"First", "[", "#", "]"}]}], "]"}], "&"}], ")"}], " ", "/@",
         " ", 
        RowBox[{"decays", "[", "particle", "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pCMS", "[", 
      RowBox[{"eCM_", ",", "mA_", ",", "mB_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"eCM", "\[LessEqual]", 
        RowBox[{"mA", "+", "mB"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"2.", "eCM"}], ")"}]}], "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"eCM", "^", "2"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"mA", "+", "mB"}], ")"}], "^", "2"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"eCM", "^", "2"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"mA", "-", "mB"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"psSize", "[", "mDistribution_", "]"}], "[", 
      RowBox[{"eCM_", ",", 
       RowBox[{"{", 
        RowBox[{"hA_", ",", "hB_"}], "}"}], ",", 
       RowBox[{"lFac_:", "0"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m0A", ",", "m0B"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m0A", "=", 
         RowBox[{"m0", "[", "hA", "]"}]}], ";", 
        RowBox[{"m0B", "=", 
         RowBox[{"m0", "[", "hB", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalGamma]0", "[", "hA", "]"}], "\[Equal]", 
           RowBox[{"\[CapitalGamma]0", "[", "hB", "]"}], "\[Equal]", "0."}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eCM", "<", 
             RowBox[{"m0A", "+", "m0B"}]}], ",", 
            RowBox[{"Return", "[", "0", "]"}], ",", 
            RowBox[{"Return", "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pCMS", "[", 
                RowBox[{"eCM", ",", "m0A", ",", "m0B"}], "]"}], "^", "lFac"}],
               ")"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalGamma]0", "[", "hA", "]"}], "\[Equal]", "0."}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eCM", "<", "m0A"}], ",", 
            RowBox[{"Return", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Return", "@", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pCMS", "[", 
                  RowBox[{"eCM", ",", "m0A", ",", "mB"}], "]"}], "^", 
                 "lFac"}], " ", 
                RowBox[{"mDistribution", "[", 
                 RowBox[{"hB", ",", "mB"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"mB", ",", 
                 RowBox[{"massDecayBound", "[", "hB", "]"}], ",", 
                 RowBox[{"eCM", "-", "m0A"}]}], "}"}], ",", " ", 
               RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
               RowBox[{"AccuracyGoal", "\[Rule]", "10"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalGamma]0", "[", "hB", "]"}], "\[Equal]", "0."}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"eCM", "<", "m0B"}], ",", 
            RowBox[{"Return", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Return", "@", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pCMS", "[", 
                  RowBox[{"eCM", ",", "mA", ",", "m0B"}], "]"}], "^", 
                 "lFac"}], " ", 
                RowBox[{"mDistribution", "[", 
                 RowBox[{"hA", ",", "mA"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"mA", ",", 
                 RowBox[{"massDecayBound", "[", "hA", "]"}], ",", 
                 RowBox[{"eCM", "-", "m0B"}]}], "}"}], ",", " ", 
               RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
               RowBox[{"AccuracyGoal", "\[Rule]", "10"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"pCMS", "[", 
             RowBox[{"eCM", ",", "mA", ",", "mB"}], "]"}], "^", "lFac"}], " ", 
           RowBox[{"mDistribution", "[", 
            RowBox[{"hA", ",", "mA"}], "]"}], 
           RowBox[{"mDistribution", "[", 
            RowBox[{"hB", ",", "mB"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"mA", ",", 
            RowBox[{"massDecayBound", "[", "hA", "]"}], ",", "eCM"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"mB", ",", 
            RowBox[{"massDecayBound", "[", "hB", "]"}], ",", 
            RowBox[{"eCM", "-", "mA"}]}], "}"}], ",", " ", 
          RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "10"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "a0", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"breitWigner", "[", 
     RowBox[{"\[CapitalGamma]0_Real", ",", "dm_Real"}], "]"}], ":=", 
    RowBox[{"\[CapitalGamma]0", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dm", "^", "2"}], "+", 
       RowBox[{"0.25", 
        RowBox[{"\[CapitalGamma]0", "^", "2"}]}]}], ")"}]}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"a0", "[", 
      RowBox[{"particle_", ",", "m_Real"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]0", "[", "particle", "]"}], "\[Equal]", 
        "0."}], ",", 
       RowBox[{"Throw", "[", 
        RowBox[{"\"\<In a0: Singular mass distribution for \>\"", "<>", 
         RowBox[{"ToString", "[", "particle", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"breitWigner", "[", 
         RowBox[{
          RowBox[{"\[CapitalGamma]0", "[", "particle", "]"}], ",", 
          RowBox[{
           RowBox[{"m0", "[", "particle", "]"}], "-", "m"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p0Mean", "=", 
     RowBox[{"psSize", "[", "a0", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "p0MeanCh", "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"p0MeanCh", "[", 
      RowBox[{"m0_", ",", 
       RowBox[{"{", 
        RowBox[{"hA_", ",", "hB_"}], "}"}], ",", "lFac_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"p0MeanCh", "[", 
       RowBox[{"m0", ",", 
        RowBox[{"{", 
         RowBox[{"hA", ",", "hB"}], "}"}], ",", "lFac"}], "]"}], "=", 
      RowBox[{"p0Mean", "[", 
       RowBox[{"m0", ",", 
        RowBox[{"{", 
         RowBox[{"hA", ",", "hB"}], "}"}], ",", "lFac"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", "\[CapitalGamma]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"hIn_", ",", "hOuts_", ",", "m_Real"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "br", ",", "p0", ",", "p0res", ",", "p01", ",", "p0res1", ",", 
         "lChan"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"m", "\[LessEqual]", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"minMass", "[", "h", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"h", ",", "hOuts"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"br", "=", 
         RowBox[{"BR", "[", 
          RowBox[{"hIn", ",", "hOuts"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"br", "\[Equal]", "0"}], ",", 
          RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lChan", "=", 
         RowBox[{"decayAngularMomentum", "[", 
          RowBox[{"hIn", ",", "hOuts"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"p01", "=", 
         RowBox[{"p0Mean", "[", 
          RowBox[{"m", ",", "hOuts", ",", 
           RowBox[{
            RowBox[{"2", "lChan"}], "+", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p0res1", "=", " ", 
         RowBox[{"p0MeanCh", "[", 
          RowBox[{
           RowBox[{"m0", "[", "hIn", "]"}], ",", "hOuts", ",", 
           RowBox[{
            RowBox[{"2", "lChan"}], "+", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p0", "=", 
         RowBox[{"p0Mean", "[", 
          RowBox[{"m", ",", "hOuts", ",", 
           RowBox[{"2", "lChan"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"p0res", "=", 
         RowBox[{"p0MeanCh", "[", 
          RowBox[{
           RowBox[{"m0", "[", "hIn", "]"}], ",", "hOuts", ",", 
           RowBox[{"2", "lChan"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Assert", "[", 
         RowBox[{"p0res", ">", "0"}], "]"}], ";", 
        RowBox[{"Assert", "[", 
         RowBox[{"p0res1", ">", "0"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalGamma]0", "[", "hIn", "]"}], " ", "br", "*", " ", 
         RowBox[{
          RowBox[{"m0", "[", "hIn", "]"}], "/", "m"}], " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{"p01", "/", "p0res1"}], ")"}], " ", "*", " ", 
         RowBox[{"1.2", "/", 
          RowBox[{"(", 
           RowBox[{"1.", " ", "+", " ", 
            RowBox[{"0.2", 
             RowBox[{"(", 
              RowBox[{"p0", "/", "p0res"}], ")"}]}]}], ")"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"h_", ",", "m_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"h", ",", "decs", ",", "m"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"decs", ",", 
         RowBox[{"decayProducts", "[", "h", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "mass", " ", "distribution", " ", "function", 
      " ", "and"}], " ", "<", "p", ">"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"ClearAll", "[", "aN", "]"}], ";", " ", 
    RowBox[{"ClearAll", "[", "a", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"aN", "[", "particle_", "]"}], ":=", 
     RowBox[{"comment", "[", 
      RowBox[{
       RowBox[{"\"\<Calculating aN for \>\"", "<>", 
        RowBox[{"ToString", "[", "particle", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"aN", "[", "particle", "]"}], "=", 
        RowBox[{"Re", "@", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"breitWigner", "[", 
            RowBox[{
             RowBox[{"\[CapitalGamma]", "[", 
              RowBox[{"particle", ",", "m"}], "]"}], ",", 
             RowBox[{
              RowBox[{"m0", "[", "particle", "]"}], "-", "m"}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"massDecayBound", "[", "particle", "]"}], ",", 
             "Infinity"}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"particle_", ",", "m_Real"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]0", "[", "particle", "]"}], "\[Equal]", 
        "0."}], ",", 
       RowBox[{"Throw", "[", 
        RowBox[{"\"\<In a: Singular mass distribution for \>\"", "<>", 
         RowBox[{"ToString", "[", "particle", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m", "\[LessEqual]", "0"}], ",", "0", ",", 
         RowBox[{
          RowBox[{"breitWigner", "[", 
           RowBox[{
            RowBox[{"\[CapitalGamma]", "[", 
             RowBox[{"particle", ",", "m"}], "]"}], ",", 
            RowBox[{
             RowBox[{"m0", "[", "particle", "]"}], "-", "m"}]}], "]"}], "/", 
          RowBox[{"aN", "[", "particle", "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pMean", "=", 
     RowBox[{"psSize", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pLab", "[", 
      RowBox[{"mA_", ",", "mB_", ",", "eCM_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"eCM", "\[LessEqual]", 
        RowBox[{"mA", "+", "mB"}]}], ",", "0", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"eCM", "^", "2"}], "-", 
             RowBox[{"mA", "^", "2"}], "-", 
             RowBox[{"mB", "^", "2"}]}], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", 
            RowBox[{"mB", "^", "2"}]}], ")"}]}], " ", "-", " ", 
         RowBox[{"mA", "^", "2"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.748669524861602*^9, 3.748669582373023*^9}, 
   3.7486697012594643`*^9, {3.748670034621367*^9, 3.74867003584444*^9}, {
   3.748850730193564*^9, 3.748850792721237*^9}, {3.748852337515998*^9, 
   3.748852344043009*^9}, {3.748852465513892*^9, 3.7488524953448477`*^9}, {
   3.748854049101363*^9, 3.748854051797125*^9}, {3.748854210170862*^9, 
   3.748854220682596*^9}, 3.748854343167962*^9, {3.748854860645739*^9, 
   3.748854866525126*^9}, {3.748854967099968*^9, 3.74885497415819*^9}, {
   3.748855016139378*^9, 3.748855016323731*^9}, {3.7488586193445883`*^9, 
   3.7488586733835993`*^9}, {3.7488587049190063`*^9, 3.748858708176291*^9}, {
   3.748858890522806*^9, 3.7488589780654917`*^9}, {3.748859064504065*^9, 
   3.748859064747841*^9}, {3.748859275100007*^9, 3.748859281075721*^9}, 
   3.748859403602632*^9, {3.748859471360957*^9, 3.748859474400476*^9}, 
   3.7488595262164707`*^9, {3.748859657164708*^9, 3.748859658310268*^9}, {
   3.7488610648443832`*^9, 3.748861091881289*^9}, {3.7488611253622417`*^9, 
   3.7488611391698723`*^9}, {3.748861196136998*^9, 3.748861260215808*^9}, {
   3.7488614494609632`*^9, 3.7488614726846027`*^9}, {3.748862763356174*^9, 
   3.748862822610902*^9}, 3.748865956720427*^9, {3.749184489986223*^9, 
   3.749184599047361*^9}, {3.7491846967095623`*^9, 3.74918470451777*^9}, {
   3.7491847733572683`*^9, 3.749184779615732*^9}, {3.7491894834267387`*^9, 
   3.7491894869952173`*^9}, {3.7491895251063213`*^9, 3.749189577510888*^9}, {
   3.7491896195539637`*^9, 3.7491896783281507`*^9}, {3.749189764127018*^9, 
   3.749190085975769*^9}, {3.7491902614043913`*^9, 3.7491902828429613`*^9}, {
   3.749190327978972*^9, 3.749190361225628*^9}, {3.749190411738736*^9, 
   3.74919050801611*^9}, {3.7491905398271923`*^9, 3.749190654585224*^9}, {
   3.749190902464917*^9, 3.7491909763992853`*^9}, {3.749193450025977*^9, 
   3.749193585703063*^9}, {3.749193856089314*^9, 3.749193865065164*^9}, {
   3.749198267750867*^9, 3.7491982762136183`*^9}, {3.749202353746516*^9, 
   3.749202380141714*^9}, {3.7492028690561647`*^9, 3.74920287286353*^9}, {
   3.749202953462181*^9, 3.749202955502481*^9}, {3.749202993878859*^9, 
   3.749203022558423*^9}, {3.749203063660543*^9, 3.749203067268228*^9}, {
   3.749203177259687*^9, 3.749203178346835*^9}, {3.749203244561077*^9, 
   3.749203252073715*^9}, {3.7492033534231653`*^9, 3.7492033798316793`*^9}, {
   3.749203498292313*^9, 3.749203534011194*^9}, {3.749203592835833*^9, 
   3.749203596921962*^9}, {3.749203673953239*^9, 3.749203685585396*^9}, {
   3.749203776392727*^9, 3.749203806190435*^9}, {3.749203848318972*^9, 
   3.74920391566136*^9}, {3.7492039754762783`*^9, 3.749203995882674*^9}, 
   3.74920429837479*^9, {3.749204346020575*^9, 3.749204347196166*^9}, {
   3.74928850354214*^9, 3.749288503766478*^9}, {3.7492998145249662`*^9, 
   3.749299816077146*^9}, {3.749301308563552*^9, 3.749301419593265*^9}, {
   3.7493017418679047`*^9, 3.749301741995385*^9}, {3.749361405166788*^9, 
   3.749361430469162*^9}, 3.7493627907974787`*^9, 3.749362955977789*^9, {
   3.749363255692154*^9, 3.749363290210546*^9}, {3.749460678544508*^9, 
   3.749460702729803*^9}, {3.749461479685714*^9, 3.749461481676673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"h", "=", "omega"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"h", ",", "m"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[CapitalGamma]", "[", 
            RowBox[{"h", ",", "outs", ",", "m"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"outs", ",", 
             RowBox[{"decayProducts", "[", "h", "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0.", ",", 
       RowBox[{
        RowBox[{"m0", "[", "h", "]"}], "+", 
        RowBox[{"2", 
         RowBox[{"\[CapitalGamma]0", "[", "h", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<Total\>\"", ",", 
         RowBox[{"ToString", "/@", 
          RowBox[{"decayProducts", "[", "h", "]"}]}]}], "}"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.748850796886055*^9, 3.748851008011286*^9}, {
   3.748851042675211*^9, 3.748851061394247*^9}, {3.7488610353709517`*^9, 
   3.748861035634446*^9}, {3.749184682875642*^9, 3.7491847088114433`*^9}, {
   3.7491847577309923`*^9, 3.749184787713859*^9}, 3.7491848598093224`*^9, {
   3.7491979917928953`*^9, 3.749197991856401*^9}, {3.749203390484568*^9, 
   3.7492033914436283`*^9}, {3.749203748158471*^9, 3.749203749101139*^9}, {
   3.749204825938418*^9, 3.749204827281234*^9}, {3.749361282055511*^9, 
   3.749361293742715*^9}, {3.749361336182309*^9, 3.749361364853303*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
4H8AvdKHXQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
O5oJaEVrLv0iBf4D3Htosg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
P0zdMmc=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxFzn0wlAkcB/BVR1oqDAqZVkLc5vWsU3l+IUKq9dobQjasjsWlEbdYTm6u
F86VRXmtZSTsnpbUFlIhtFhdnn2W9XZcsl6uFEddN3P37G/mO9/5zHz/+BmE
xnjT1hAIhLAv+bdJWSbO15K9EMJ/N6njpBhBtIT/zc7drOpC3IebQWVdtSFS
cWM1dr1mxGDcGkEaccZEBu6791KcdhBTcSeF8M0Midm42zhlq/38Etxccrr2
5oFK3CylwFEPWh3uAJl0KpRfj9ssiHvggaARd6XLG7+zegLc5F3heYG8ZtzM
pM8WRrxW+V7Rk6QjacPd1f9o766xZ7h/+vYiojbcjps0uJa9TekF7loBR/+I
cjfuLUOry1W2L3Ff9hgYolcLcRPbEf/sO724vz/NWjrY3IdbTBrk5bX24zZf
Wc9OREW4u8smZp1mBnBHRokCb8y8wj3vdfPDz2tf4044kVihsm4Qt5s5oTNO
EcW9iWf/uHW93K9s4+s1Nsod5vBHEU9b7lTPrvgFE7kb6Wz9OA+5U2S9Gq2H
5XaNU1HW8JFblMhc4J6Uu3C1YVIhGIXXkWn7LiWdQULT5jGvMBSqvZ4u++Xl
IKaKX/eVRqDgmefWdTqvHJnLCns+fxaFr2Z5oQrn65AG1aKHjrEoaG4ycYuz
bkSY2b9zc86h8EvBivBodDPioqleMZKIwlStr9DY4imiyva4YcVE4WZVG2HA
uxPp18vISWOhkD44/md030ukoFiQ2ZuJgmgqytVI1IeYVFjGxl5FISP12G3X
7YOIzIx+piUXhcsMo9mGNAypryk/qc5GoctDK8lrjRRx4mu7cktQ0NGkHRM2
jCFBT1d057koFPDPJWoNTSNG7hQ1Rz4KtZoNEeqqMuRtV4xiThMK4So0mcxw
DrkgGp21fIKCUPrkeU/8AnJ9rL2NIUJBMP/boYlTH5DA8DVNza9R2Fmid3Fz
1Udkx/SeWjUJCrxN6tnbl5cQ3kJNft3El38WvuEE3FlBehSuRc8topAorDeY
NlEAJVLIFoaOGDJ3Oyx1HVgHfnMLhxL0xVBW3HJFqKwMt5oz0pMNxLAo5Vhh
L5TBKaRSlmUqhlRV3d73R4nALJttK7UXQ8pn5EbZxQ3wfgcztv+4GNTyH5+j
kzRg3LSwk1Ighjvst5Z9KTpgs0wmOBSJAT6X1tet6ACr85Gtc5kYKh8W1/hf
0AVS1GjJkSoxCB/cQ/86rwcnq03PRzSJQcV60YyarA995o2GBagY1PcFUF1E
JGixGUhe1cWgaU4/a9jZCLLOaquc2IbB6KWE3MlcIzh8+2g+3xAD5lbdLK9x
I8C00XsxZAwYVKmxe6YxLC4NyUYcMKBJWNH3e0zArHkq+FkwBqXUOBXbWDP4
1XNl/1UOBuvfffLJX7KACJrhBgNrCfT4GrzDFCgQ4G5hH0mRQGiKjF1oQwHq
rj007m4JdGHxHkwaBezeewscnSWw28HOv7aDAko/sr4L9ZVAoaVf3cNcO7h9
a6S7PEECIel/W9HN7WF0rPiK8QMJTOrzxO4/7IWA0K1q5P1DEGztuL9F4AiH
0naaPncehjnvmKjDw26gdWqdXTJZCh3HKgg+PCqwNmaMY3elMM0mED598oXr
hv4HueQRGKx2bXC+cBxKDmi1U/kjcLyjcd6hMAgqVyRHGimj4HfQkn6/JwQ4
zbkzb1pGIbJJM6WoNAzKtXyuTziPgdbauwVWAeHgKgz/6PNkDGa6OZz5rXTg
MFyrGdIx6EWXOkxb6fAPZZxwYA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 0.798}, {0., 0.0032664123717113043`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Total\"", "\"{gamma, pi}\"", "\"{pi, pi}\"", "\"{pi, pipi}\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.749204313206072*^9, 3.749204832784828*^9, {3.749361280546916*^9, 
   3.749361299077033*^9}, {3.7493613447532253`*^9, 3.749361365633801*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lBound", ",", "rBound"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lBound", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"Min", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m0", "[", "mes", "]"}], "-", 
           RowBox[{"4", 
            RowBox[{"\[CapitalGamma]0", "[", "mes", "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"mes", ",", "Ms"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"rBound", "=", 
     RowBox[{"Max", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"m0", "[", "mes", "]"}], "+", 
         RowBox[{"4", 
          RowBox[{"\[CapitalGamma]0", "[", "mes", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"mes", ",", "Ms"}], "}"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"mes", ",", "m"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"mes", ",", "Ms"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "lBound", ",", "rBound"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.749361295757057*^9, 3.749361331925625*^9}, {
  3.749361372445937*^9, 3.749361386580613*^9}, {3.749361460003808*^9, 
  3.74936146036344*^9}, {3.74936154463417*^9, 3.749361677879401*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.7790674951894968`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"6.3265882298040585`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.000051705263810181064`\\\"}]\\)\[NoBreak] \
for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749361706047584*^9, 3.749363689936328*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Calculating aN for omega\"\>"], "Print",
 CellChangeTimes->{3.7493636899888477`*^9}],

Cell[BoxData["\<\"Calculating aN for rho\"\>"], "Print",
 CellChangeTimes->{3.7493636900854692`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749361706047584*^9, 3.749363690184929*^9}],

Cell[BoxData["\<\"Calculating aN for Kstar\"\>"], "Print",
 CellChangeTimes->{3.74936369027045*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.749361707425702*^9, 3.7493636923409767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decayAngularMomentum", "[", 
  RowBox[{"f0980", ",", 
   RowBox[{"{", 
    RowBox[{"Ka", ",", "Ka"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7493630133540382`*^9, 3.7493630202692213`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7493630206724167`*^9, 3.749363244005825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"mes", ",", "5."}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mes", ",", "Ms"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749363701170494*^9, 3.749363717864388*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749363718755007*^9, 3.749363789202948*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749363718755007*^9, 3.749363789334934*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9878253613186829`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"6.4415730038099905`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.00020862716696934402`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749363718755007*^9, 3.749363789392425*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"284.0875429324577`\\\", \\\"}\\\"}]\
\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"6.708274408688831`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.00011487148021371555`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749363718755007*^9, 3.749363873785343*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749363718755007*^9, 3.7493638738665943`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Calculating aN for K11270\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363873871092*^9}],

Cell[BoxData["\<\"Calculating aN for a11260\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.74936387881045*^9}],

Cell[BoxData["\<\"Calculating aN for f1\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363891896428*^9}],

Cell[BoxData["\<\"Calculating aN for f11510\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363897090913*^9}],

Cell[BoxData["\<\"Calculating aN for K21430\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.7493639323434553`*^9}],

Cell[BoxData["\<\"Calculating aN for a21320\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363952841201*^9}],

Cell[BoxData["\<\"Calculating aN for f21270\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363952981642*^9}],

Cell[BoxData["\<\"Calculating aN for f21525\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749363953195236*^9}],

Cell[BoxData["\<\"Calculating aN for K11400\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.74936400093375*^9}],

Cell[BoxData["\<\"Calculating aN for b11235\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364045322218*^9}],

Cell[BoxData["\<\"Calculating aN for h11170\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.7493640499871473`*^9}],

Cell[BoxData["\<\"Calculating aN for h11380\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364055544174*^9}],

Cell[BoxData["\<\"Calculating aN for Kstar1410\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364065644042*^9}],

Cell[BoxData["\<\"Calculating aN for rho1465\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364065732959*^9}],

Cell[BoxData["\<\"Calculating aN for omega1419\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364070838585*^9}],

Cell[BoxData["\<\"Calculating aN for phi1680\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.7493640779822903`*^9}],

Cell[BoxData["\<\"Calculating aN for Kstar1680\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364088347307*^9}],

Cell[BoxData["\<\"Calculating aN for rho1700\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364093649089*^9}],

Cell[BoxData["\<\"Calculating aN for omega1662\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.7493641135616617`*^9}],

Cell[BoxData["\<\"Calculating aN for phi1900\"\>"], "Print",
 CellChangeTimes->{3.749363723353777*^9, 3.749364119700116*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0004595350297412536`", ",", "0.007287519118200021`", ",", 
   "0.004666191282704097`", ",", "0.003777566556030942`", ",", 
   "0.0008110258549158431`", ",", "0.004354939931174578`", ",", 
   "0.002790678125414881`", ",", "0.002905210488887052`", ",", 
   "0.004958772247673569`", ",", "0.008430583402879322`", ",", 
   "0.0014840102636363183`", ",", "0.013704466965012926`", ",", 
   "0.008990123097496912`", ",", "0.009023526207223536`", ",", 
   "0.012550993877059418`", ",", "0.006942261068014331`", ",", 
   "0.004007388124615895`", ",", "0.0038192923352024302`", ",", 
   "0.009588049441810301`", ",", "0.008368552053719544`", ",", 
   "0.01821308181986342`", ",", "0.017130511031247974`", ",", 
   "0.013148058663735144`", ",", "0.015030138600367162`", ",", 
   "0.02199770858323492`", ",", "0.01609226990680204`", ",", 
   "0.020110605264897448`", ",", "0.031267015691182926`"}], "}"}]], "Output",
 CellChangeTimes->{3.7493637131230297`*^9, 3.749363769184944*^9, 
  3.7493641197021017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pMean", "[", 
  RowBox[{"2.", ",", 
   RowBox[{"{", 
    RowBox[{"Ka", ",", "Ka"}], "}"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7493633378371553`*^9, 3.749363350167035*^9}}],

Cell[BoxData["0.867177029216065`"], "Output",
 CellChangeTimes->{{3.7493633484221897`*^9, 3.74936335039666*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]", "[", 
  RowBox[{"f0980", ",", 
   RowBox[{"{", 
    RowBox[{"Ka", ",", "Ka"}], "}"}], ",", "2."}], "]"}]], "Input",
 CellChangeTimes->{{3.749362883863122*^9, 3.7493628945118313`*^9}, {
  3.749362967334681*^9, 3.749362970534605*^9}, {3.749363026493926*^9, 
  3.74936302704548*^9}, {3.7493630776290617`*^9, 3.749363078100222*^9}, {
  3.749363219817848*^9, 3.749363227713924*^9}}],

Cell[BoxData["0.410562108436376`"], "Output",
 CellChangeTimes->{
  3.749362897463018*^9, {3.7493629615225*^9, 3.749362971039041*^9}, 
   3.749363027903015*^9, {3.749363217679728*^9, 3.74936327437388*^9}, 
   3.7493633045988417`*^9, 3.749363632882085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pts", "=", 
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mes", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"resMass", ",", 
             RowBox[{"a", "[", 
              RowBox[{"mes", ",", "resMass"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"resMass", ",", "0.", ",", "3.", ",", "0.001"}], "}"}]}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"mes", ",", "Ms"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"mes", ",", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"resMass", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "3."}], "}"}]}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Second", "/@", "pts"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"First", "/@", "pts"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.749363887268896*^9, 3.749363959387809*^9}, {
  3.7493641618718557`*^9, 3.749364168543895*^9}, {3.749364268662649*^9, 
  3.749364291773781*^9}, {3.749364332741745*^9, 3.749364356720015*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.749364350955735*^9, 3.7493643597307997`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.749364350955735*^9, 3.749364359838587*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.749364350955735*^9, 3.749364359946143*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.749364350955735*^9, 3.7493643600399446`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749364350955735*^9, 3.74936462864747*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749364350955735*^9, 3.749364628767643*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749364350955735*^9, 3.749364628877656*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.749364350955735*^9, 3.749364628976082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"pts", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.749368882220709*^9, 3.749368889501492*^9}}],

Cell[BoxData["3001"], "Output",
 CellChangeTimes->{{3.7493643308803263`*^9, 3.749364352054977*^9}, 
   3.7493663288013277`*^9, 3.749368889857174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"500", ";;", "2000"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"pt", ",", "pts"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "25"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"First", "/@", "pts"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749368932944001*^9, 3.749369033194964*^9}, {
  3.749369075699752*^9, 3.749369121809533*^9}, {3.749369448251603*^9, 
  3.749369454059062*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
paRuiwX/B2k5u7w=
         "]], 
        LineBox[CompressedData["
1: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
Jc+Z8+4xN/nvF1/yXAzn87EReOlLnotRt6P35At3fclzMTbpl2wdnutLnoth
6CRruJzsS56LMWDyysrV4b7kuRgjVrrKZO6+5LkYfwozZ97g+JLnYvgndWL5
HfYlz8V4dm9Q6IktvuS5GCE1yTa7l/uS52LcXOb/377ZvuS5GHMFbWawx/iS
52IcWnP6dZS+L3kuhsfRYy8fdfUlz8V44Vmmq6P0Ic/FGOsWZn+wwYc8F8Nn
VRdhWbUPeS5Gt62ph+a/9CHPxYjr1zXnzj0f8lyMVQ6D7m666kOeM/Hf32Av
Oe9Dnosxu3dJeVa0D3kuBvd13+DTvj7kuRhTlkcWLLb3Ic/F8G2rP2rYKR/y
nMl3nfzynnt9yHMx9puluffc4EOei8Gz27PYwNiHPBdj913HmoUzfMhzMS7N
eL3/xCgf8pzJ15/7YtL6+5DnYub5cgOnqasPeS7G68fazytU3uQ5ky975Xcv
N3mT58z62gk7jPjuTZ6L8W7fq+iMN97kuRjTnFP2zC33Js8l2HsodemHG97k
uQRByfNn+VzyJs8l8GhQDVqS5E2eS1Cbn/Hjv3Bv8px5X2Bg9dPTmzyX4EmM
/a1HNt7kuQQyz+bzt054k+cS1JTW6Bfv8SbPJVi5p7bjkw3e5LkEh9NyttUs
8SbPJTjd2FeqM9ubPJfgx2DDN0vHeZPnEqxer37vM9ibPJcg10rd9F7XmzyX
YK36TOeZ7b3JcwlmcK11kiRe5LkEI0duauxT50WeSzCifFBUXLUXeS6B8dAf
TWMrvMhzCRZf+FhXVupFnkuwBbutLW94kecSZD386Tgq24s8l6DHx94Nf855
kecS7DqZk18Y6UWeS9De5ey9cF8v8pyZ7+WfNvaOXuS5BI5uRYdOW3qR5xLM
e3L47anDXuQ5M/+lzctst3uR5xJkxw9KCVnjRZ5LoJ5h8TEPXvTviczPi4Z+
/jbDizyX4MxPw7hBY73IcwmurQtUHRzsRZ4z8bcJleX39CLPJfi1wcNRr6MX
eS7BhKmVVg5yT/JcghT/YW+bGj3JcwmupOr6W/zwJM8leL/eylP+3pM8l8Di
wsL80Kee5LkE3Z5adZl2z5M8Z+IZsoJbXeBJnktQtVT+MyrLkzyXQGzJX709
yZM8l6A6IDduZKQneS7B8+K3t1W+nuQ5k29n9S99dfIkz5l4CDaZPmd7kucS
vGbZpJQd9STPJZA7hQc92u1JnkvQv+F5+/cbPclzCU6Vs2SNyz3Jcwnadfu0
u+cCT/Jcgk4WXgaLpnqS5xI8Hd1xltUoT/Jcgn0X/wu5NtCTPJfgs/XBwW17
epLnEox6U1uxraMnec7Mdy4luVDhQZ5LMKvXOYdhPA/yXAKpl96mqBoP8lwC
LDAe0KvKgzyXInlCaEn8Kw/yXIqyR1ZGE8o9yHMpUp96epff8iDPpbiiPuJ1
Ks+DPJeiU4fqKQMzPchzKR6NL3F4nehBnkuxZ1qnHVERHuS5FNX98or2+3mQ
51Ls/PM9eqaLB3kuhan/i8+9rDzIcyn+BD7wUJzwIM+lCBWPcKzf70GeSzGo
94mbNVs9yHMpjpgMn1a7xoM8l8KxSvRObOxBnjPrfZmQ8N9cD/JciqisP9bj
J3uQ51II1tzZsWmkB3kuhXHJwLmeAz3IcymO9tPpcrunB3kuxe/hRcXaTh7k
ObPfo7tXr1G7k+dSDKlcnH5O6E6eSxF2vfy+qtadPJei8uSJqEPf3MlzKR6s
ytOreO9OnksRYrdw8srn7uS5FInFxV8ePnAnz6Wo3yTtv7HInTyX4l556Ytv
ue7kuRTNj3rK7DPdyXMpZnX+5DcoyZ08Z86rw3Sbsih38lyKWN7Ca7aB7uS5
FEL3aQume7iT51IUPd+hFtm5k+dSfDHswb9r6U6eS1Hy5c5/kUfdyXMpAkzr
lljsdSfPmfFDDINMt7iT58z7tZ2rF65xJ8+leHJ3w4SpS9zJc+Zz63unJ8xz
J8+lyJ46NXbyVHfyXIr1ZT7J88a4k+dSiMTFLmuHupPnUrhv/DzmWF938lwK
8/+04f7d3clzKeJ+bsjPb+9OnkuxTNHVo0bhRp5LcSrfTjRU4EaeS8GKkrY5
UOtGnksxfITg7IVvbuS5lPHs531ZpRt5LoVd0vbDG1+6kedSXOf+tcspdyPP
peD7Gsn73nEjz6XY4DKgyvOaG3kuRd78hX3l2W7kOXO+JW5J1mlu5LkU+w1e
mMsT3MhzKRYtHujgFelGnsvw+c2Jon6BbuS5DC8WvRqV6+FGnssw44hl/kYH
N/JcBscU210ytht5LoNvwphemSfcyHMZ6qY+q9hz0I08lyFk+72wATvdyHMZ
PNuar6je6EaeyzC+7aq6zJVu5LkMHo0fuPZGbuQ5s75OOZ9M57qR5zJcHHSq
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
Fdit7TSg9wtb8pzJL8MD1etLbclzBczX8g3Ci2zJcyV8rV0/fcy1Jc+VOO1Y
2Wlcpi15rsSCAS+SXM7akudKTPuExE+RtuS5EnY6evKFAbbkuRJfb07KSXez
Jc+VeBXuf6OPrS15rsT6Pwa6Aea25LkSwnPC7I5mtuS5EpPH6Qb57rIlz5Vw
P+2VoWtqS54r8frBaclZE1vyXIlHjX+tpy+2Jc+VONTO0OD5TFvyXAmHY8sa
zCfYkudKOJb5V/YZbkueKzFMNbnqvr4tea7ElP72fCtdW/JcicilBX0md7Il
z5UYUzoDjSob8lyJX79NT10V2pDnSijllpHOdTbkuRL9jSV567/bkOdKpNRt
vj/qgw15rsSojtpb7V7akOdKXLeySqwpsyHPlUj8O2fvi2Ib8lyJB6/eyIrz
bchzJTw3fzyRd9GGPFdiw9JvFy+l2JDnSpzr41t4Kc6GPFfi8huOb16oDXmu
ROrADfq3fWzIcyUOdH5x+IWzDXmuxJ9pF8xqrGzIcyXmpCb2bXfahjxX4l45
iz3ysA15rsTVkzzO2l025LkSi7Mb+ziY2pDnSowTGm26vNKGPFdi3p9Ho37D
hjxXouboyYCRc2zIcyXqnHs6Hp9sQ54z+bI7W5A3yoY8VyJgzayGNkNsyHMl
nly4cGhrHxvyXIk9H7qa5vxnQ54rcXDxoas92tuQ50qEz7rvzlVYk+dMfnda
WFTNtybPlThV3bhtXa01ea7E1lLpppJv1uS5Evtj3bIWfrAmz5UIVBdsLX5p
TZ4rwd//cJPxQ2vynMm3780JT+9Yk+dKXNxyeuLuQmvyXInbs920zZetyXMl
bpy36hmQbk2eK1G7IW7XuLPW5LkSq13x8XmUNXmuxBL1A1/bIGvyXIW4Pt4H
R3tZk+cq7PT9c/CTozV5rsIdn61ekVxr8lyFlZcWl5qesibPVXja0H9I38PW
5LkKsWd2B1TvsibPVUja7N/50iZr8lyFUs2oMOfV1uS5CvoPbhlsXWJNnquw
uM2nvGnzrclz5udX9F3Se7o1ea5CysbOz+TjrMlzFfLl69fUGFqT5ypsnBt2
690Aa/Jchcq+VvpP9azJcxX2ZV7YW9bVmjxXwaLTd5/SttbkuQpXVr0LfSS3
Is+Z+Z2XWFXwrchzFYYk1U35WmtFnqsgCI66w/9uRZ6r0Fmv++Cun6zIcxWq
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
vkG0nUWea6H3eM32mE0s8lyL/4TTpi5YxyLPtVjrH/HohwmLPNeiW6LF0OAl
LPJci2ujHk+Zv4hFnmtR1CVTUTuHRZ5rMUdH1zlxOos81yL7S9drppNY5LkW
5V1Tk7uOZZHnWoxW/FxUOpxFnjPrkVUHuA9hkedazBud7G2szyLPtchxXTix
Q28Wea6F27typ8c6LPJci9hnW6zDu7DIcy3Sq9S997Rnkeda3AovvLxJZUme
a3FnQ087Ad+SPGfmz1niGfvHkjzX4qk24KlxtSV5rkWvYePX8V9bkudaSG3N
OmQ8siTPtZgsdm/cf8eSPGfOr/OLDgYFluS5FtPOxK74mWVJnjPr6TMtJ/uc
JXmuxSdT3nzHaEvynJkvafLv9YGW5LkW36+uvDzG3ZI810J9NSmoo60lea7F
jNFRbn9PW5LnWnDEod6vDlmS51p8OaqKvb3DkjzXom6ASUHOekvynIl/++/v
M5ZZkudabDuxWJU635I8Z87j6/thaVMtyXPm82WjjC+OtiTPtbArytx5bbAl
ea5FdebXo2W9LMlzLeJyTY986mJJnmuxJN/bVKSxIM+Z8co6je0ttiDPtTCb
crhmdr0Fea6F84mJPvu/W5DnWhzqL+0UXGlBnmvB77Db7O5zC/Kc2f9w4RnJ
AwvyXAsd972Z04ssyHMtemxY4MPNtSDPtbB5O3XmzQwL/A8RRsh6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw122VYVF0XBmCUEDAAsTBQUezuwmdUxMbuQuwCA18Vu1sxsDtQlO7ulE4R
kO6c7vgOzPr4wzXXDGf22Xufda/nDDPY1n7N3o4aGhr/tDU02n5v6DbW511r
KQpf++RZPQ6BRvtPGVKepPLKm0OQd6Z+2ETdMgzrGPQucFkofnKyV9galuGW
O+td6s9QXDoU5vC0Txn2aFtmm3cOw7rKb2/iBpXhl4n55KQjYRi57VGMYEQZ
9CcvSAvKCIMyt+2AZVgx5GS8fHI4cpijbZpZhiXbz2169SocPxKWTb8zrwyq
6idFTzUicAFTd4QsYZ6fWBnGORCBNUGmNxpXl0Eo63I9KDsCwyfquvXfUoZN
07yymy0iIXdtG2AZArqL9rz4GYkssyLJxUNlCDTvfmd7lyi4MKPzOsGMf8uT
feMto3Cuh8eicscyvOjzZE3c+SisevDCrvu1MsR0Nt49MCAK5jpXnBfcK8MN
58ywBewoSC+2nXAZkl8+ejpldDQyRGuZMy6Dg9mxUYJ90fh6zEL/z5cyXJKy
cm9/icbZtulzK0PoyDwetywa1m2n61eGdZe3yqcNjMGQtuGFlWH7qKDjm3bE
QNx2uLgyfNxRVrflfQzSUtt+yvBh6gzd+aUx+LwwgKfILcOAAO4to8GxOB3x
oe/4f2UYau4wKW13LJYzs2dTXQb294CqM99jMdjrxIHHzWWYb+X9sE9TLIQj
2hakDBu2RU/2mhiHlE9tByzD/nu9GhecicNH5mhDdcrRNGNw2Z/IOJx62kdr
Q7dybHfTXHtMNx5Lu3QcfatXOboXa78yWhOPgcxqBJmWo0TSeUDU23jwFW0L
XI7WTAOby3XxSP6vbYDlWKrzTrJhagLet35nVrgcva1XvVx8LQEnmdGdRzn4
3zd33JKdgMXljm0rgt3+HXo5mSViwJY9s0tXlmOzxaTfrScTwW3bfpvK4czu
MP5iQiIS27aLTTkGXVtgx+qbhLdty3ugHL3G90mdbZ+E423Lcawcxf43vp+K
T4JV2/SdKcdQgcE5Xv9k9Gs73Svl+M98w7+QU8nMvLVtwHK8L/C9kpWRjPi2
wz0ux5n06hkWo3/j9au2n3JcDfThaN7+Dfvu16J+fyrHWfmL4NE1v2F570it
zLUc0744hocsTIGJVtsVVo4xB7ctDXRJQcv5tg1djoVjeqYP10tFrKBtQcpx
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
hF9aEsrnjRC3DFovixZTPm9EqFXWL1wWUz5vRPLQ3IWnIKZ83oiQud8/v1SJ
KJ83Qliz2solSkT5vBHZk41CXl8VUT5vRI/PgvsnFooonzN/b3Ry3Sg9EeXz
RvRkV7pFpAkpnzdhwSaNWWOeCimfN2Fv3ZLv9puFlM+bYKVx9MeNQULK502I
6PFScqhOQPm8CbnByTv7ewsonzdhnqKn63NHAeXzJqz9XOmWbymgfN6ET0mD
l/81EFA+b0KnS/8df1PEp3zehHPh+4z6/uBTPm/C0plnRq05xad83oSPl1fE
sxbwKZ83YU1cGL/CiE/5vAmPvcrzppbzKJ83ocBzlNM0bx7l8yY0N+9aX3GF
R/m8CSGHfXZNW8ujfN4Eub2rbLw5j/J5Eya9neKQKuJSPm9Cad3bYXopXMrn
zPNJF89UvudSPm+C6c/Iv5tOcimfN+GwyZW4fYu5lM+bkPnNKFzflEv5vAkB
KUWr5/M5lM+bsLPT2n6dUziUz5swd25pqO1nDuXzJmxxSSi1cuRQPm/CnNW9
LPzXcCifN8H6wp2nv0ZzKJ83YXu6vdtwbQ7l8ya8uvdky/DS/+fzZnxT9XH8
Efz/fN4MnZ5H2D+e/T+fNyN2kYnbsGNsyufNGKPp/3Xgcjbl82bwL4cVPh7B
pnzejBSL0xvPabMpnzej+2ivzX7xrZTPm/FpQljDpiutlM+b4beq4XuZRSvl
82YMKHGrXSRroXzejMV2WYb3glsonzdjyrF5r13OtFA+b8b98Bj9FzNaKJ83
w2h2kHiTpJnyeTNa31To1Yc0Uz5vhnjzYN6CC82Uz5uxkjf5zD5WM+XzZrie
P3d4hVYz5fNmeDuHuQuSmiifN+NaavnYbQ+bKJ83Y+m5iLoL65oonzfDaVR2
3cZ+TZTPm/HqSher2opGyufNME57bD7yVyPl82YkD7kc3JepS2rPmecn+LOC
LRopnzej+MsznY66jZTPmxGwLcOWm91A+bwZ1+eMDr71voHyeTPcQpadjTzU
QPm8GScmnjN9Mb2B8nkLLBocxnfRbqB83oK1jePn9s+pp3zeAtXtn7VxTN+i
9rwFz0MDcjSP11M+b0H17ES/fFY95fMWrNoXvmi2UT3l8xZ8rQ5cO76ijvJ5
C+6YV7h6+dZRPm+B3X1L8/AbdXS/vQV5551/rtlUR/fbWzB/QOcR9qPr6H57
C/5Wj3U2VNXS/fYW9OX94k7JqaX77S3o0X/s0sLvtVB73oIOKcM9lExOU3ve
Ap/nATM/rqmF2vMWTH1jZxg+ohZqz1tQ9WjajrWqGqg9b0HPV6Ybd+XXQO15
C2xyZkyvdq+BQXuBboHD8xPz/92oQVW758zjo3Zxi3bU0P125nHMDsMh02vo
fnsL+LPKLx81rKH77S0YFVt42ryhmu63t8Bx4bodS+Kq6X57C4o6b/r65301
3W9vQXhSRlT62Wq6386c38LdE8eur6b77S244rXRkTOhmu63M/P9xH5Y367V
5Hkr9DalJHyrryLPWxF6/jf3SUIVed6KyuXNi8q+VJHnrehsEXjw/pUq8rwV
i/Ied3i+s4o8b8XdsV4RMosq8rwVDmLu+rD+VeR5K2b2TbuSL6skz1sxLnlE
xyVFleR5K1ZMXfG2e2gled6Kn35xfSe9qSTPW2F6YsEKl3OV5HkrSt481LXb
Vkmet8LTYM+w2xaV5HkrbK7a3uCZVpLnrTAZxNX11Kgkz5m682Xsq+CKCvK8
FeVlKWbd4yvI81YsidN7Efi9gjxvhUvEs8YfdyvI81Yc+3Sqb/XRCvK8FTHV
ssGHV1eQ563Q2e6qNWtqBXneiqlLTJNXmVSQ5624V6jt6KH4//32VoQbag5b
U1FOnrfio+Jd6azEcvK8Fcf3Twzf71ZOnrciMKmg4M/jcvK8Fa2/dqy6e7qc
PG/F6F2jF17cXk6esxHUeUqxz4Jyut7ZsNBpsBg+qpx8Z2P9m1HPCw3L6fpn
Q2I4vkeqqIy8Z2OZ9oUGaUkZ1QM23vb9Y70voYz8Z8ODM9axq0cZ1Qc2quwf
/2h1LqN+gI17q8xMulwso3rBhkyp2c12Xxn1B2z8DrJOZVuXUf1gI1PQ4W3g
9DLqF9hY11OU6D+ojOoJGyzr3HcNemXUP7ChG6sq+llTSvWFjTCT4b0bg0up
n2DjhOPHl88elFK9Yd5fPsTIZVcp9RdsTFl9e5rptFKqP2woH/6KlemXUr/B
xpxz285YlJVQPWJj5lxLkwr/Euo/2Bh1N9O+7l4J1Sc2bMaZLl1pW0L9CBuq
nlWOPWeWoL1c7WPD1HPH35mGJdSfsPEkaPa80Np/aC83dmzcd7j55GXkP+pX
2Kie88w788U/+vyQjVtnODdtj/2j/oWNyy3WquVL/tHniWyY/Wff+ZHZP+pn
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
DcES5eakAPJcit2jrr00iQwgz6X4Zj/3ZKl/AHkuRfbMDnd+uQWQ58zxZrnm
XPgSQJ4z4+/Tf8WG1wHkuRRHdi1qnfI4gDyXouzSID+T2wHkuRQn3L46a10K
IM+lsK0oeCA4FUCeS2GWk/y86UgAeS6FTuG9n/W7A8hzKQaxZ8U2bQkgz6XA
R2mhYHUAeS5FiVTQqLUkgDyXwuruTrYJK4A8lyLB6njFlOkB5LkUmveOhK0f
F0CeS7FU9/WZ8+YB5DmzviFLjFz7B5DnUgwozb5cZBxAnkvRs/pptHHnAPJc
ivH7uGmrOwaQ51KcMtn60VniT55L8SVp3uRStj/9f7CU8WjwlXF1/uS5FKu3
nbt+rdSf/l9YitnpBdNL8v3JcymGzUt2npvuT55L4Tq98uXXeH/yXIok7bjZ
huH+5LkUtxMMzl7x8yfPpRi7+vgy8S9/8lwKvfGv3R2++JPnUrQ6zX8tfO1P
nkvRdeHILhef+JPnUrxyM1bq3/Unz6XI9E479O6KP3kuhX/4yBVTz/qT58z8
e2h8zD7mT55LsTl14o5TB/zJcylk0Z+vDrDxJ8+lOO0E3ZSN/uQ5c73dlNZf
WOlPnktxa3qq2bRF/uS5FDOO+brz5vqT58x+Hed/I2CaP3kuRd7L4m8Xx/mT
58x4ObP0lg/zJ8+l6PCk9qepqT95LsWof6obwp7+5LkMq2d+d87p6k+ey+Cu
3SnPX9ufPJfB+bE13in8yHMZrhr7ZtwR+JHnMgz7aH/lXLMfeS7DzcHxK09U
+5HnMky2lk61++dHnsvw4OPW8fZ5fuS5DN2tZ08/leZHnssQNJez+HK8H3ku
g71W0U6ncD/yXIan2VtPf/P3I89luHSq+G6kux95zoxnaYpzyTc/8lyG+Klv
n3Z870eey/DxXdKl0c/9yHMZsnZkrN/80I88l0EnYYrR/Zt+5LkMt25ddY+9
6EeeyzAgcNEwjdN+5LkMfaL6nJ5n70eey7B++6M3t/b7kecynH289FH2Tj/y
XAb5+5YVZpv8yHMZzmuY5/y3yo88Z563eds3c7EfeS7DnGe6g8bN8yPPZej1
yKzUaaYfeS6Dhs2PteKJfuS5DCeHbz+7Z5QfeS7DXUO95XlmfuQ5M19LziYu
7edHnsvwn/xSbZyxH3kug95i/vcFXfzIcxlGz/DRStTyI8+Z+Yx4LbFW+JLn
MgS4Pb1aJPAlz2X48vPWmyMtvuS5DPUT97E61vqS5zK8uzHk6NtSX/Jchme/
ggbMLvAlz5nx7x1iXZLpS57LkDpyn/RGsi95LsPaAbdNJ8X4kucy9OjiHFAR
4kuey+Bp+y7iha8veS7Dr+EBk1a7+ZLnMuTyxd0MvvmS5zK8Zl9bmfXOlzyX
4XLiWfaL577kuQyu3zq02D7yJc9lsJqwyHLSbV/yXAZccmzVvuJLnssQ2Suz
8d9ZX/Jchuqyy1NDTviS523r8zvp9WFf8pzZzw+aP13a40uey/BYb2L4ge2+
5LkMISUlvTZs8CXPmevpxcJfi1b6kucy1CkC/7NY7Euey3Cwz4NT0+f5kudy
qAYN+jp1li95Lsf3y5nK6ZN9yXM5zJM7XJ07xpc8l6ObZ79RS8x9yXM5tLXu
8jaa+pLncvzzCis81NuXPJcj3nN48RVDX/Jcjk86C/hv9XzJcznmR98dGNbR
lzxnXt94cUupzIc8l6P+/pdPOgIf8lyOkx8vcya2+JDncngbfbbaVetDnstR
5f/i3bMyH/JcjjgrATflrw95zox/+5oFnXJ8yHM5+h5ees8q1Yc8l+Ni4PnE
O/E+5Dlz/I33+ZkRPuQ5Mz+jBhn0D/Ihz+WIyKkwPuztQ57LMcX/qir8pw95
LseCRu/0Hl99yHM5vKyGXbR/50Oey/F70Sv99Oc+5LkcViZJxyY4+ZDncoy9
d9L9+R0f8lyO6K424RrXfMhzOZzd1r+zO+9DnsthpzdoadkpH/JcjssbH0at
t/chz+VYt+GkIv2AD3kuB3/5N8UyWx/yXI5B2srw1K0+5LkcDglbZq9e70Oe
y3Fv9dsTf619yHM5lhe52Oxd7EOeyzFS17ajYJ4PeS7H2dqgdbdn+5Dncvi0
vFo3cKoPeS5HEV+oDB7nQ98HYh6PjV+1aYQPeS6H3FxhJR3sQ57LMTf8dcmH
fj7kuRwcs3c9lvT0Ic/lMMnSqRF08yHP5dC4/W+li64PeS5HzpJRK7d09CHP
5TDdICkzknuT53KcM9/SMU3gTZ4z57N3p9e9Vm/yXI4Mrmndinpv8lwO3QJv
F+NKb/JcjmVWU+qLi73Jcznsn8S7ueZ7k+fMfplwu+Vspjd5zjzv9enXit/e
5LkcIYGzyofGeZPncjxUXbyvCvcmz+V4vvLdz3+B3uS5HM1nE2dEenuT53LM
2jhpytdf3uS5HDdier6+/82bPFdgu7Pb/jMfvMlzBT5+mfJ6/ytv8lwB98CW
cVueepPnzOsfmg5Z9cCbPFdgVI6+w5Jb3uS5AjP6K0ytrniT5wpcrJk32Oqc
N3muQOnjEWeWnPImzxVw3K45eJW9N3mugNfu4SZbDnqT58zfP2/avn+3N3mu
wOdQ96bT273JcwU6HkyKubfRmzxXIEvj3b/Pq73JcwWa3R/OCl/mTZ4rMNdG
80/hQm/yXIEeybu9ZPAmzxWw39gvbuAsb/JcgStTXhosmuJNniugw1rmdHyc
N3muQEaXHws+jPAmzxUw/Td0eKaZN3muwOQPs2ZoDfAmzxX4Xb/HYXZvb/Jc
gV/iwX9PGXmT5wpMcOXu9u3sTZ4rkPLflu58bW/yXAG/06Xl0zW8yXMFHm3W
z7wo9SLPFajYvq8wie9FnjOPN1xR9mz1Is8V6Pu1cea+ei/yXAGT8TPuBld6
kecKDDwgbzIo8SLPFWian7nzYIEXea7AycnWZfHZXuS5Aj9HGR8xT/MizxVY
/jRC43aiF3mugJs1901ztBd5rsA97zWzN4R5kecKiC7fLI4O8CLPmfG1Trsw
wduLPFdg5EuDfp9/eZHnClhfivDt5eJFnivwrDPf8uFHL/JcgXit3am6b7zI
cwUuO0UtuunsRZ4rYDw+zk/HyYs8V+Bd0HCju3e9yHMFJJu/bzG84UWeKxD2
uMOjV5e8yHMFdo0V/TJ39CLPFVhttczTz8GLPGfme27scyt7L/JcgfuRw2yK
DnqR5wrwfKF3co8Xea6A+eLCR113epHnCnytjuP83OxFnivwfELmmGXrvMhz
BTprZ8xtsfYizxXo5fDc/NkSL/JcgZ7RipI5ll7kuRIVO0oO1M31Is+VGNRs
HP18phd5roTD1PPVi6Z4kedKlIwQ5cjGeZHnSpQV77vrM9KLPFei4x1PnSND
vchzJWTXAq1GDPQiz5UYOW//4loTL/JcidwVrnquPbzIcyXeWB+6fdTAizxX
4p/8ZcwUfS/yXIleQ4cFKLW8yHMlXOfqxTxXeZLnSox1X3N1qsCTPFci4Uwv
178NnuS5EkOeW026VuZJniuRr/XXZFK+J3muxLjfiVtrUjzJcyUWNhnyP0R7
kudKqI4ElOwI9CTPlZi/MKL3EHdP8lyJnJ2T3jR99iTPlQh4Nmhv6EtP8lwJ
q6+vjz966EmeKzF3UkDYgeue5LkSA6Pvz1/k6EmeK7HXfbZq1DFP8lyJsBFV
Lcb7PMlzJVZP/dW14zZP8lwJ80/BGwWrPclzJe52mJPcvMiTPFdiloftjkYL
T/JcCa3wXcYtkz3JcyU6KY5VCUZ6kudK2HBT0joO8iTPldiR5Z3So5cnea7E
dMe9haO7eJLnSlxxGCtc1NGTPFcir2Ftv4NiD/JcicEuw6wetXiQ50q81xOd
CKnyIM+Z/dGt7/uGQg/yXInhc+tiB2Z50Pd9lRB4hZdtTvQgz5XI0JGyX4Z7
kOdKHNmjwSn29SDPlUixm/7P/KcHea5Et0V6Pic/epDnSvS/WXk44bkHea6E
84zpnUwfeJDnSjwtPHPZ8ZoHea6Ex9pBuUVnPchzJSK5P5TzjnmQ50rEHHws
d9vnQZ4r0Zi89Xf/7R7kuRKvLj3Y83itB3nOnK+1Z6L+Ug/ynNmfy1ewb7M8
yHMlzEqFhZ2ne5DnSugGzb3+dKwHea5EfXpI3cChHuS5ElN3aml79/Ugz5X4
XRmYZ2XkQZ6rYGF8amN5Jw/yXIWcopKbl5Xu5LkKsTvf2AwVuJPnKuzjrC1P
bXQnz1V4buCv7VjhTp6r8GaX3e/Rf93JcxUifCeNqchwJ89VsOEFDn+X4E6e
q3BgdGDwtnB38lyFy5ebSgb5uZPnKlwY2/tZ/U938pw5/iVJXsAnd/JchZE5
mz7dfulOnqvw+JGCu+ORO3muQu+hvokzb7qT5yr00lrc3+SCO3mugvOXB83y
k+7kuQq+JzfNqD7kTp6rmPm+JMna5U6eq5g8UDI2dpM7ea7CUOWq7KCV7uS5
CvqLgyp9rNzJcxU6rxXt8LZwJ89VMJnGZ/lNcSfPVZjf/OJm6Gh38lyFYRvS
xySauZPnKsSMuTnhj4k7ea6Cpq73w0ZDd/JchasbFlhq6bqT5yrM3DrFerDK
jTxXYc6oi67zhW7kuQqbvg1Ye6DZjTxXoc/Z7oufVLmR5yqsNtl5I6rIjTxX
QRWuq8vLdiPPVehm0ztt5G838lyFeQHOWXui3chzFZQTH3f/GuRGnjPrIzd5
UOvpRp6rIObMnzv+uxt5zrz+0+Ah5967kecqNC1On5Hi7Eaeq/Aifff5gQ/c
yHMVsmNUDaevu5HnKjzcEnMl95wbea6Cy5F0i6kn3chzFQR2S/q/PuRGnquw
8uTWvpq2buQ5s/5Dx089ttmNPFchKJZzsHyVG3mugufQHP8Ni93IcxXCfmn3
yoQbea7ClqURt1ZMdyPPVdh7fopuxjg38lyFUQs/P1s3zI08V+HrGMtRJQPc
yHNmP8/ZnHC4pxt5roKXwmyfoosbea6Cm0O1zlMtN/KceTyw9tsY+S/yXIUF
vGOs37xf5LkKiRvTcw43/sL/ALX9jxI=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hjxvxOB1zen9jtWQ543Q2+igPS6vhjxvRHDGFH//ubXkeSPC/fR/pbnUkueN
mLLs/mC73nXkeSMioy52FDD7sMbzRtyrr/49UVBHnjdi2SrDtDWH6snzRqzb
1LfKhrkONJ43ImjH++HvmHWi8bwRBw9dva4sbiDPG7Ew7LLo6/ZG8rwRz3b9
vB/EbiTPGyGS7Tiy8nATed6I7atO/r0uaiLPG/Gw+ujBc7ebyfNGpN5Tp6wd
0EKeN2JgmYnRBJ8W8rwRfC2Zdb9RHPK8EQJfRyvWWQ553ojvrGPun5I55Hkj
zIKuLFg7mEueN2JFbvfKXbZc8rwRk/vrzK/L4JLnjfgh2ZyhHssjzxtx272q
S9g9HnneiA9WPptnNPDI8yYYZz4YcXcNnzxvwrCA/rWpAXzyvAmj5o6dNGio
gDxvguzgW+9XDwTkeRMCel1du10tIM+bYLfj44Q7p4TkeRM+dbX1nd0gJM+b
kCTe4Px8v4g8b4I8puOwiCoRed4Egxv2KYUHxeR5E0w7TfDpzBGT501I+OFz
7dxFCXnehIwLHufXdpWS5024l5XgEPpBSp4zf/82sKqeJSPPm6AYabhXXSAj
z5vQ0+pyyYwLcvK8Cen9rXkRJgryvAl+xxpDUrMU5HkTVMP+Wjy9pSTPm3BS
PO/7qgUq8rwJf/es6jFdpSLPm+A8q87NLk5NnjfB1395bcTSdiyN5004++Wy
zNOnHUvjeRP++/V2/TRjLZbGc+b9WmGLTjzWYmk8Z8bL7M7oezraLI3nTYhe
x9r+8ao2S+N5E5ZG+08qUWizNJ43Yd/xwLI9V9qzNJ43I3P7xSvbOnRgaTxv
xh3lhtKmBx1YGs+bkfK9+xmzwR1ZGs+b8fyLsfkNn44sjefNuOHd8KlghQ5L
43kzjk3q1P1QvQ5L43kzXh90ku950Iml8bwZb+Z+utc0szNL43kzbokrpk2u
6czSeN4MG7v1lza+7cLSeN6MLoN3nL1mqcvSeN6MHsuytxf068rSeN6M+e4+
knNlXVkaz5vByb/c446nHkvjeTOa1pn9MLrZjaXxvBmbgnWtVu3sztJ43oyW
qqEbJ7B6sDSeM+Px58yMvQY9WRrPmzFH93vP7o49WRrPmfHZ4ehl0KkXq0fb
Bt2MTyxLl2N2vViVbZ43I/fZnJpenXqzNJ43Q5jYeWCtQ2+WxvNmeJ3yyyrU
12dpPG9GtNlit4j3+iyN583Qnet678R4A5bG82ZMeOcUEhpmwNJ43gxnm9/d
d67pw9J43ozThzy6da/sw9J43ozDtj3H2F7oy9J43oxHecadJvU21EyvdgsU
iY3V6e6GLI3nLdja/t3YrEX9WBrPWzBkrkUv95J+LI3nLTDOfeURdbo/S+N5
C2arS/radB3A0njeArer57rwPwxgaTxvAf/qkdDnk41YGs9b0MvXd6pdpBFL
43kLejgaaNUvHcjSeN7CxA3pu6vSBrI0nreg8fzVoqfLB7E0njPH4zVN7Bk9
iKXxvAUrA9npZyYOZmk8b8G048EH6p4NZmk8b4HN6ld/n3AGszSet8BrWski
j4VDWBrPW/DmwIiUi3eGsDSet6Dq4Mgve6KHsDSetyBnXW/7guYhLI3nTP/s
HjT4dTJmaTxn2h8+7bu1ez+WxvMWBH/v/EVyoy9L4znT/pf/Gzi2bx+WxvMW
dPrU7USFlgFL43kLsk4Hnthios/SeN6C9oO26Rju783SeN6CP8P66U2O7cXS
eN6CnvYHfpyc2oul8bwFgUVOL/18erI0zWtBrpOyRHdBT5bG8xbYH1//wsW1
B0vjOQd/Czg/ytjd6XrnYM9Bg2HLx3VnaXznQCYYZt1wrRtd/xzY7rVImcTW
Y2m854D3x8Ake7ke7QccnFgn2B8W1pWl8Z+DRb1WTOkxoyvtDxzs3rzPtkuA
LksTD3CwOoF3udM8XdovOKiVeH24lNiFpYkPOOAWLe7VYtmF9g8OspsF3wWN
nVmaeIGDKUmR2yfd7kz7CQeLnQy6rB3WmaWJHzhYYbCmUTfu3/7CwXSdxGnG
BzuxNPEE0/7UuMqNPTrRfsNBssit4mywDksTXzDjce7+DMv9OrT/cJATGLw5
uY8OSxNvcHDIaojn18SOtB9x8KSqe9fMix1ZmviDg+LrV1cNmdKR9ifm/Ltq
Olys78DSxCMcDLKcNzLxSwdW23a1n4OG0aNT6nd1YGniEw4M+QX8jMEdWG3b
zVEOlFt6WO38056liVc4cDx9ZYPdh/YszeeHzPnfrr05eU97liZ+4eDlpU1/
141sz9J8nsiBS6nBzYIGbZYmnuHg8tyZz718tFmaeiQH/uN5k3IuaLM08Q0H
wXqCtaaLtVma+iQH21IehQV112Zp4h0O1iaxRdbFWixNvZKD0l9vJ477qsXS
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
eS5B3hm+B9spnjyXIKuvs9E6h3jyXIJZ+0vHZl+MJ8+Z810eELP7SDx5zrwu
lidr74gnzyXQfbVynN+qePKcGS+JOsN2QTx5LoF0/JT3SybGk+fM66dH3Rhj
HE+eS1D7Z8U+o17x5LkE7qoppoO048lzKQyfvEw25ceR51IYT91mvLYyjjyX
IqPj7YHX8+PIcykCD1h8i06II8+lOPCR86NXUBx5LsXGJyrDE25x5LkUmUd6
ZP91iiPPpTi1syZ2h2MceS7F3aXHftdfjiPPpWg66ad951gceS5FC6t2+JTd
ceS5FO+rrSY0ro8jz6XQHfKsk//iOPJcinYVxh8cZ8SR58z/G8f/PTk6jjyX
4sapPf4HBsSR51J4lCq62ujFkedSSK6FZF5SxZLnUhzaUtH4lhNLnktRKS5b
k1oeS55LkTB/QVWn/FjyXIqGfl9fr0+MJc+luMeq3eIRHEueS3GO19y79/dY
8lyK2d5J3rffx5LnUrzSdh7W5XEseS5FgWnqxtc3Y8lzKU6385w+80wseS6F
561Cr/KDseS5FGvTeH5vtsWS51Ic+5E8cc/qWPJcin12i3vMWBhLnkvxRn5o
oeG0WPJciqi4nX4dR8WS51J82m+9SWtALHnOtF9R2ke3Wyx5LkWN3Jw9pF0s
eS7FStnMr2b8f9/3kuL3SZtNJ6tjyHNmvu77lXoW/fv+lxROFe3HS9JiyHMp
Bq3cP2l11L/vg0mh96FDsZdvDHkuxfJrw/oZf40hz6WYN3pY8RunGPJcCrMJ
V3sMfxBDnktRvCrja9D1GPJcCp25MU+22MaQ51LY7h0VpXMohjxn1ntE5ZCo
7THkuRRxr+Wf7NbGkOdSHN9zZ4bl4hjyXIrptuHp02bFkOdSdK1vtBw8PoY8
l+J/e67E6xvHkOdSaBfydfoYxJDnUlgeqNUz6RxDnktRNapn0hxFNHnOHJ83
c4wVJ5o8Z8ZrmvnQh5XR5LkUYTHTP6X8iibPpVjoOsSpV3o0eS7DMM4k5d7o
aPJchpn2P0Oj/aPJcxm2dJEmjHWPJs9lCLl6o+eH99HkuQz5a37dG/w0mjyX
4Z363XC3O9HkuQzGeg9yFlyKJs9lcAg/b/f3eDR5LsNr+dKJDtbR5LkM/zOR
RS/cGk2eyzC18NPE9muiyXPm/H8OH85cFE2ey7Ca93yf66xo8lyGUy/O97w7
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
cCB5rsCjvA8FZ3oHkudKPLzlWT1JJ5A8V+IDR/VFIA0gz5XQ1TrdKaYpgDxX
4m68sv1rdgB5rkTDrtePzucHkOdKfBOsdd6bHECeKxHhOHeKZXgAea7E666X
p27wDiDPlZjf1+LdVpcA8lyJA+3yrA+/DiDPldAPPn7z5v0A8lyJ7ICTjS7X
A8hzJd5WznuZbRtAnitx+sGCCzqHA8hzJY6v5jss3vnv+UVK+ErLYxzWB5Dn
zN/3P/Upsfj3PCPm/IMyL0yfG0CeK1EdYVj3cuK/5xspmX1wqmX74QHkuRIz
JlWHnu3373lHSox+oe4m1Asgz5VQ99m2+KLWv+cfKTE89u9GXZE/ea7E7SXX
Zn+u9yfPlUjJnlNt9tefPFcirX3//zXm+pPnSpiyJ559n+RPnithGPFh2ZZw
f/JcCcmEZ9EDffzJcyWu8RYV1Lr6k+dKeNRzroS/8SfPlRBq1fo4PfInz5V4
MOT6oWt2/uS5En/6DHE6esGfPGeO/3jiPOtj/uS5Egu6jluyb58/ea6Eke8z
H5st/uS5Eo37ZLYXV/uT50pUPhfcfbrInzxXYrr5yArfWf7kuRIjG+ddKpng
T54z83eUs6LbMH/ynFmfuu2XW/TzJ8+VeLl84dE73fzJcyUGCK57ZWn7k+dK
uEtdOptI/MhzJcbYvDp6scmPPFdCsH91cUm5H3muRIxu4iKLX37kuRLF+7o6
B6b7kedKmFubcibF+pHnSkzMXDnMJ8iPPFdi9tj70+Z6+pHnTHv8hgxMc/Yj
z5UYv35Bzr7XfuQ50/+b49d0fOhHnisxeN1Mhx+3/MhzJZRm/ld2XPAjz5n5
Wq1j0ue4H3muhHXa0//yrP3IcyV67M/a8mabH3mugo3erL+H1vmR5yqIa9aI
sMSPPFchfIXry0Hz/chzFYq/5oRqT/Ujz1UYdcl2W8toP/JcBc7yWccqBvuR
5ypkOaS3/DHwI89VePyek8/W9SPPVZgaYT2gsZ0fea6Cgi/1V4p8yXMV3HVv
furb5EueM39f/5s/o8KXPFfhyjXRip1FvuS5Cn1SAhWOmb7kuQrHvIzYMfG+
5LkKWp2H8dShvuS5Cq+NCkcv9vElz1Vo/rDsysNvvuS5Cm++Pmtgv/clz1Wo
e1F8aO5zX/Kc+X9DC94bB1/yXIVL3XWvtL/hS56rcMhxt87Jc77kuQrf4x/e
qjnqS56rENehjLvX2pc8V0H7g8uSmm2+5LkK/ermXj2x3pc8V+HmOJ0n2st8
yXMVzF4eO+8EX/JcBds5DaazZ/x7Hp4Kw4V8jz/jfclzFbof1au3H/bv+Xgq
PO8UWT5/gC95rsLPvHcPxT3/PS9PhfYPzOoDO/mS58z83l7deEXlQ56rkPz5
8MOVQh/yXIW+y5ekGzf6kOfM+Fi9/SAv9yHPVcDMMe1Ki3zIcxWO3vWrjcvy
Ic9ViNmv9z/fRB/yXIUOM3Rmf4vwgeb7vsx6+3jlmbO/D3muQg+HLVYu333I
cxXWdL/x9IezD3muQudD9WPDnHzIcxWqxA5Dsh/7kOcqqMcesGm860Oeq9Dp
0s3O3a/5kOcqrNzXwpl+1oc8Z+bnf1GD9x31Ic9V+M+5t+Mrax/yXIVpT7tM
zd3uQ56rkDIrs5vBBh/yXIXM88/6blvhQ56r8FLr8ZJvZj7kuQoBM9u/kc/2
Ic9VeDhjUteNk33IcxUGx+x94jfahzxX4cECztgBxj7kuQqjv5pm2hn6kOdM
e+2unBd39yHP1ehdbT78mI4Pea5Glw3c5EalN3muxp5U/r7jQm/yXI3DPgkt
0kZv8lyNC1l1++5VepPnanQ2r4gYXOJNnquhdRWS4Fxv8lwNnWmPu25L9SbP
1UiyPMHXivUmz9U4qX/V3TPEmzxXY2S41bjdPt7kuRrHMiOO93f3Js/VaCxb
ZVv4yZs8VyPtTdzUN6+9yXM1PvqXue577E2eq6Gqtk6ees+bPFdjScWgF52v
e5PnatxY+6tTxTlv8lyN+ZGH+8ce9ybP1Tj72Sv+20Fv8lyNt0scOj3b5U2e
q2GfwS66tdmbPFfDfeinmRfXepPnzPg2hxqdXepNnqtx/83Y6+dY3uS5msl3
GvZcneVNnqsx0FsrzGGSN3muxtZlZ++8G+1NnquRob8tys/YmzxXI9c9end2
P2/yXI3v0+P383t6k+dqiHbZpQzo4k2eq7HactTdJVre5LkamcH5Tuel/56H
qkb6qyilF9eLPFfD9sig7011/56PqoZTt1GfJpZ7kedq7Pcc9OtM8b/npaph
kWuxMjbHizxXw3NFk8Qg9d/zU9XoO253kU2sF3muRmW0uDYx9N/zVNWwedF1
2Bg/L/JcDeEOxY2H3/89X1WNcqFpB/kXL/JcDd/t3T7bvPv3vFU1lnvobGY/
9yLP1dDt/nDo9gf/nr+qxoiIIbLft73IczUqZDNKd1399zxWNZq0NyfUn/Ui
z9UI69bV+/zxf89nZV5fXPqq2yEv8pxZz+G7zrvu9iLP1XA7OX714q1e5Lka
r+eV9K5Z70Weq1GQ1jP2wQov8lyNQ67Hts5d7EWeq1Fk6JzXOM+LPFcjedrW
Cc7TvchzNUIzl+7aaepFnjPr/9SoQ4NHeeH/eHuRUg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVYVNv7NnBFRcRARSxMQLH1mMe8x8RAsbsVE7sLsTtRFFu6pbslpERC
VFQEpHO647dhP+c71/vOP173BbNn1V6fWQ8zDtx+aLm1TosWLX63adGi6d/V
nUYGvm78gxb/z6P4f/nr6erB/+hpsxcvd/H2ztp8cV/0cfue2rzyr+vLpAHa
PHTjg0TREG1W5zddUJvzmKutnazNHimLJt2aqc0XMGFz5AJtXh7e71rtMm02
/0fPp896bVZ6NjVQm3NMfsps92mzG9M6/6PafK6bn0XJWW1eeu/Zwa5XtHmQ
7qWns+9os9y2qcPanC1ZwfRYm10OT9f/5qzNZ5qGz0eblzR1N1ibTZuaF63N
0qbLJWlzVmbTQ5ud5oYKVPnafCr2be/Rv7XZkhm9reXaPND/6J5H9dosHtI0
Idqc8b7pgtr8jrmamW7J//IJ+56tV3fS5oUddIbf6K7N/ZnZCO+nzUJV0wRr
c9rJpgZq85tGd2aGtfkY07rz0Ob5JWebZuR/ue/6nVP/WGkzv2n5rdXm1Kbl
slWbXzVN7x5tPtI0HYe1eV7T8J3WZuOm7l7SZm5T825pc3LT5R5p8wvHpoc2
H+p6JT79vTbPuWNTqfDU5l6tm+4wbW4437SgtfmjqGlCtPn5waYLavMB5mq8
XG2etbX8i8lPbe7x4zOzArW5blnTDaLNCelNE6zNDrObGqjN+5tu39al/8uc
ptutgzYbNd0e3bS5pmk599HmuKblZ6bNT5qWy0ht3ts0vRO0eUbTdEzXZsOm
4ZurzVVN3V2szTFNzVutzY+bLrdZm3fvanpo87Q/VswdrM1Nd9unk9rcNHoy
W21mOsssaG1u2q02PtDmptV375k2N10t9q02N2+f7trcvP35a3PzdhWuzc3b
S7w2N28Hn7S5+fb9os3Nt9sPbWZvD21uXs7V2ty8/Hja3LxcZNrcPL06f/+X
m6dDX5ubh6+rNjd3t7c2NzfPRJubLzdcm8c1P7S5aXfeOVWbm+62p7O1uWn0
UhZpM9PZpgX9v9zMx0Ztbt7ud2pz8/Zso83N2+lxbW7e/s5rc/N2dU2bm7eX
e9rcvB081ebm2/e1Nje3zlWbm28PP21uXs6h2ty8/GK1uXm5pGhz8/R+1ubm
6fimzc3D90ebm7tbqc2s39rcfDmJNrOPsv/Pc21mPddm1nNtZj3XZtZzbWY9
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
MXWu0/R5Zn+pXsmF17W79Z0FpVTP4MKu3oQfklhK9Usufk+40nmMfSnVN7h4
yus28ezOUjr/cGFi0ePUg4mlVO/g4kbLGR33tyul8xAX3JmbVuv9LqH6Bxd/
TEzztgeU0H7KRXvPokEnr5dQPYQLm50ruszYWEL7KxefRzqeCh1bQvURLqRH
26772a6E9lsu1t0dnudRUkz1Ei6GvkrrbxxZTPsvF70vVtqPsi+m+gkXt9eX
vPljU0z7MRdnN95IG2ZRTPUUZj5mzwnpYFJM+zOzPt8/n9ha8YfqK1ycP+Hx
zCDoD+3XXMgD366fYPOH6i3M+lx4+NShwX9o/+Yi8JK/QXhJEdVfmPZfmXWg
3Zsi2s+5iM3Ra7l5QxHVY5jx7OS+zb9XEe3vPDi+XbJQ8f031Wd4MHJ1cJzs
+Jv2ex76fNq8dNf631SvYfa1k9EPz/f5Tfs/D2168V+d+vOL6jc8eH89VLDc
+Rd5wMO567+j2+35RfUcHoSnRtY/G/mLfGCe/ypsgEzwk+o7PCQUbBwxNOon
ecHDIsNAjemVn1Tv4SEze6xL+aKf5AcPiV/PTttn9JPqPzz8zb/eyu9PIXnC
w9RXikW+XoVUD+Ih3PfYxZ0nC8kXHmY05Pb9MquQ6kM8fBz3LrrOoJC84aHf
mZ26Yb9/UL2Ih762BpHDfX6QP8z4vdvmZXHuB9WPeNgUsT6m7aIf5BEPlz/7
1u4x/kH1JB4m75vM2VP3nXziYeT+q990Yr9TfYmHKSb4M+Hhd/KKh7VPPz1V
b/9O9SYeXOLCFqyf+J38Yq7vuWfdPP3/6k885Iy7Nza+6Bt5xsP14wnLkoO+
UT2Kh+mXTWetuPWNfOPB4GHDq91bvlF9iofUyb3atZj4jbzjwaZMPKV3x29U
r+LhgtEvQVBZAfnHjK97csuM6AKqX/HwLlYHm54WkIfMeOwvebTnYAHVs3hw
+L6prsaigHzk4bE0b1HpwAKqb/Fg/CQo3FL5lbzkYZnnxHlDvn2lehcPx1v3
7nos8Cv5ycPAFmvnDL//lepfTP/Xlney2veVPOXhm85h31/zvlI9jAdZY3/r
XNOv5CsPY0LWXR3V8ivVx5j1qLm8vbEon7xlxj/l0xbDmHyql/GwfUJl2fOX
+eQvD6dHC7bbns2n+hkPWTaDViSuyyePeajp6z5xx+R8qqfxEKm31WFLr3zy
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
GOC133B+eCB5LkX0vdLDy/wCyXNm/dxOurXDJZA8l+LTtOrlti8CyXMpXo+b
mvD+YSB5LkVpRlha1vVA8pxZn20PbdO5EEieSzFx55ULOBZInjPtjxhqeG1v
IHkuRfcOnj3ytgSS51JIbdbbDV0dSJ7LMP+Lx6ybloHkuQx7qzuvbJwVSJ7L
cKPNQK/NkwPJcxn6VJ6eUjA6kDyX4cT7NPmqwYHkuQzJx78W/+4TSJ7L8NTr
UOkBw0DyXIZDR8+L2ugHkucy1MVyDdxaBJLnMvQ3zTVfIgkgz2VY5z9xnLo+
gDyXwSx/zpDQsgDyXIYPE8epTvwMIM9leOA432N6bgB5LkNo6M/+HdMCyHMZ
PvZfsb4sLoA8lyGm76AlH0MDyHMZVA+/8Tx9A8hzGWxyNFOfuwSQ5zJ0ezDL
9P7LAPJcBv2gFW/uPA4gz2U4zxE7P7wVQJ7LMHmicthruwDyXIbth+cNCzgV
QJ4z17+d9DzzYAB5LsPhhOMHGq3/+z6WDPEFO9722hRAnjPt5fsMWrTyv+9n
ySC8cUZyZVEAeS7DrYktOyTNCiDPZaj4cGt9+ykB5Dnz8xe7Ctf9E0Cey7Dv
pOzyhyEB5LkMgy4FLOowIIA8l4H7ov2Iwz0CyHMZrIc/Nv7ZKYA8lyFB93eX
xboB5LkMy1c80k1R+ZPnTP8PbePNFfmT5zLMK+iQnlnnT57LMFxv6831Zf7k
uQzlB8ebNf70J89l2Dn38NPbef7kuQw7bHXzR2T4k+cy3PMWf/ua6E+ey5Be
Zul4LdKfPJfh24eBnacF+pPnMrSochwv8/Qnz2UY6Vahjn7vT57LYDR07u4b
jv7kuQxuMWrrtY/8yXMZgtz3CEbf8ifPZcjWL2vb6ZI/eS7DmrzfL/mn/clz
GcLefnb/fdifPJeh3nOKWfYef/JchokBAe1St/qT5zL8/Pt5afJaf/Jchq1p
//LTlvqT5zL4jXhfkT/fnzxnsm7y4AqOP3kuQ+oeG2/Vv/7kuRyFu/cdMP7H
nzyXY3jb19YY6k+eyxFqWn9370B/8lyOx1uW/HLs5U+ey3GiY5zlly7+5Lkc
d/vM/9ZB3588l2N9a9VxKx1/8lyOsm2S6WNEH8hzOZYWfX+VVf6BPJdjSmAr
2cmCD+S5HOHXeHNGpH4gz+WYvWTMsfqwD+S5HJlDtp+M9PhAnsshGTd9pr3j
B/JcjrB9d1JO3f5Anssx9+Iw2e5zH8hzObaEts/cYfOBPJfjT+K4sfs3fSDP
mee/j+xnu+QDeS5H+5MZV1/hA3kux2drlzUpYz6Q53IcO+lwWzHwA3kux7x9
bbpMM/xAnssR+Xp30Y3WH8hzOfqVz60oEvmR53KE7JvaZ2alH3kuR7d7omN+
3/3IczkexowrGZzuR57LsWxL6hqvKD/yXI79bvYZ//r6kedybDp1b0zuGz/y
nLn+vKizJx/6kedyQDb+zaDLfuS5HMqPpg/+HPMjz+UY1DFxpou1H3kuxz3L
DV7H1viR58x41y2KWbzAj77vI4fFyJaHxk71I8/lsNKRBQ0c6UefF5ZjjzTB
zri/H3kuR6KRIq1/Fz/yXA6P6BVXR7XyI8/lGHD/jouFyJc8Z+bH8mj//ZW+
5Lkcw+Irq5//8CXPmfX47Kf0S4YveS5H4OLFMw1jfclzOaw7WoZv8fclz5n5
eiJeHurkS57L4dbznG6Pp77kuRyy4T0+XbrhS57Lcf99j3viM77kuRwnj35f
eMLGlzyXo6Vzkli12Zc8l8NsyOrrD5f5kudyKDKNGkfM8SXP5ajt+XJw3kRf
8lyOzRPumlwZ6kueyzE///X3aX18yXPm9bvbz2hh4EueyxF8dPrCrJa+5Lkc
P1+e5zkLfchzOeL2zBh2tdKHPFegb5RtzYFCH/JcgUm7LYZsy/IhzxW4aez/
Y1O8D3mugMf8IuGOIB/yXIET7docPubmQ54rsKy99cy7jj7kuQL+Jy23+N31
Ic8VCPzWPf7HRR/yXAHztiPXdzrmQ54rsN+wjZnlLh/yXIHyoSbd7Nf5kOcK
zLDrNvCv5X/fd1ag84wzM6dxfMhz5vV2yfe/Gfff95+Z/nxc8qyduQ95rsDF
zMmRF3r7kOcKuD+9kyHv6EOeK7AmdECiXUsf8lyBgAmlTwxE3uS5At+PJ09x
r/ImzxUY0TvTy+KXN3muwDplq1/cbG/yXIH4jjeSnT56k+cKFFqc27wpzJs8
V0Do0PXNAG9v8lwBvZTb5+reeJPnCnjvG9kQ/9ibPFdgSI5V/evr3uS5Avyq
5YevnPUmzxX4Msb54JGD3uS5AvnO4X92b/cmzxVIc+0etWu1N3mugAV3kfTA
Qm/yXIG4i/z7F2Z4k+fMfNt9OPl0rDd5rkDqtHHuIYO9yXMF0vUm9yzq7U2e
K1Dzz42ETgbe5LkCL2sbXli08ibPmfU03fLVTYkXea7AB961mJxaL/JcgUuX
74lNir3IcwXGtNuC8/le5LkCm0a0fPj7kxd5rsCxTteK58V4kecKPJumOzQ8
wIs8V2DXa69t/7h5kecKdN/qdDnwhRd5rsD1WvOrUx94kecKXMm6uDnzihd5
rsBCL2k769Ne5LkCecNrbdsc8CLPmfHgRYT4bvMizxVofSnHbdNqL/Kc6f84
j4VGi7zIcwWqhsQ65sOLPGd+PuH13ZfjvchzBVrlfzfeN9SLPFfgaLdOHE4/
L/JcgZx7f3l9Db3IcwVMlrQb1krPizxXYFTGvyWNSk/yXAnnvPGdy3ie5LkS
KRfTPvyp8CTPlXAxyQwv/elJnisxeaqxWf0XT/JcyXj2pkad7EmeK7Fi8bw2
PaM8yXMlyl51OPCvvyd5rsQRnqD3VldP8lyJMxlt9R688CTPlSiy2zgy+YEn
ea5E+SiDqzrXPMlzJUx95raxOOtJniuRf3aU1+NDnuS5EtLIFjblOz3JcyWi
+yhnY70nea5EQ+6e4e+sPMlzJZ5ee2asN9eTPFfizZySjqemeJLnStiddVfU
jfYkz5WY+mdF0d5BnuS5EvP3r/1Q39uTPFfixsLRe0539iTPlXiUvV5HX9eT
PFfi4y7rU04KD/Kcaf+tkviZPA/yXImWQXu/V1Z4kOdKRC59F/bklwd5rsTY
iNFr5+d6kOdK9OiXHqTzyYM8V2K23dCkjzEe5LkSBc4GV+4EeZDnSnBbzatZ
5+lBnivxPeW1YNRbD/JciWGBjc/1n3qQ50p06t8nv+62B3nOzF+D/tuvdh7k
uRJXLngLkk56kOdKDHkhzIi08SDPlXh4qmxg2HYP8lyJdCe7xoi1HuS5Em8l
X0d9XOJB3wdSYvxT6Y/cOR7kuRLGea1qq6Z4kOdKDJ7Ye2ObfzzIcyVuWVub
DzH3IM+Z+e/f3WJZXw/yXMnsdztD7Aw9yHMl9lnftwlt50GeK3HocuEuvsad
PFfCavLTN+PF7uS5EsF9u3a6UOdOnisx6qX3h4xSd/JcidCaxAsDfriT50x/
9OKPnst2J8+VGOHV5davZHfyXIkn40ZGzY52J8+V+ON7v1VAoDt5roQqOnyj
mac7ea5E0tPxCa/fupPnSkD4aHhfB3fyXAm/LrsdnO66k+dKdH65VDnyijt5
rsQid96auDP//f8iKqT6CpxXH3Ynz1VIOq/7U7DLnTxXQTO6WOKwyZ08V2Gj
+XQRVrqT5ypcU/3JaljoTp6rEGT76LzzTHfyXIXrbwcoN/3rTp6rUHpsu0W/
0e7kuQplg8auKxvkTp6r8Kfu8Aj/Pu7kOXP91rrRlwzdyXMVap2LdNbpu5Pn
KhQI6xUTWrqT5yrU6I906il1I89V0Pn5gtui0Y08V+HN2GmlDeVu5LkK8z8Y
Hy395Uaeq9AqdMHLn3lu5DnT/32/1hamu5HnKrTzbHQtSnAjz1XYK3O5UBXu
Rp6rcPCO6U/JBzfyXAWrEc8jOri7kecqyGdM6Gb+xo08V0EdNLZi3lM38lyF
ey0/D7O560aeq7DUeOFvhytu5LkK7/Y1SlPOupHnKjiltD+jPOJGnquw3oa/
dtJeN/JchQqxwv7UVjfynBm/NdcHxaxxI89V8MwW6ulZuZHnKjwp/zB57Tw3
8px5va2Dgnynu5HnKnzCp8N6E9zIcxUcAjsf3DPCjTxXIaTLebcsUzfyXIVH
3+4a/WvsRp6r0NoxPdS9qxt5roKhOuFaH3038lyFwMjWtg4t3chzFd7fGPrS
SOZKnqvAMc787sh1Jc9VuGRyb6xplSt5rkLm5K4uAX9cyXMVRle0GTr3myt5
rsLE+z1ifn92Jc9VmHxMseFciit5rsIur30t+8W6kucqNBiZeiaHuJLnKqze
XLnkqK8rea5CYq1tg6mrK3nOXP9PyJXCV67kuQptO2zSd3jiSp6rMIW3wHb1
XVfyXIVOQat/Gl91Jc9V2NRte9+Kc67kuQqLDltxQo65kucqpAfpcm7tdyXP
VcCa4z2373Alz1UYvPZWMja4kudqlI+dOttkhSt5rob1ryv32i1yJc/V0I3e
9k40y5U8V2Od67dTFVNcyXM12ubWGfwa60qeq5H+02dnwTBX8lyN5aHmR7+a
uJLnasz1PDL+R29X8lyNNQud3Uu6upLnasw79SO1Qd+VPFej/dIJj1q0ciXP
1Wgc80vTXeFCnqvxxUdiMFbgQp6rMftGSMyyWhfyXI0GP4s2J/+6kOdqREwq
K33z04U8V2PWquTlmXku5LkaQ1YNXabOcCHP1bjouLxwfJILea7GWPsbNYei
XchzNRyiu9p+CHYhz9XItp/1SODjQp6rcf7p3gHTXF3IczUmTSoyv/XahTxX
Y1qp3LnwqQt5rkbHhr6Pxtx3Ic/VGP7Ss/b2dRfyXI3ojq39q21dyHM1tsx/
Vmh5yoU8V+Pv4JzdwYdcyHM1pq8zXTlgjwt5rob55lavHm51Ic+Z+bCtmdpm
nQt5rsaPlFVjbJe5kOdqfG+dckKxwIU8V+NbXJzehVku5LkafSZklOtMdSHP
1Xi8/Hi7e+NcyHM1xAELDxuPcCHP1cizL+nuZ+ZCnqvxuTBbNqevC3muRqCu
v1GxkQt5rkbw6AG7L3Zyoe/7qvGwZWKNSVsX8lyNNmFTXqdrnMlzNXK6jTt3
UupMnqthYb3m0mCeM3muxqVja3wKq53Jc+b3r1dIH5f+9/93qdFrc9QOq5/O
5LkaC4c/rDbI/+//82Lm977JjfxMZ/JcDQP7cZNfJzuT52rUuN9Q7o11Js/V
sHxTkTUlzJk8VyPJ2djLwN+ZPFej3QzRvSoPZ/JcjZB5c08mv3cmz5n2VRRv
cXvhTJ6r8fzxO4s79s7kuRp922wddvyuM3nO5Gnq1tuuOZPnarw4til/ma0z
ea5B2sAdT+edcibPNfjCl8zBYWfyXAP3pLbFU/c6k+caFDhd2jFtuzN5rsG9
xDWZnA3O5LkGq2wv9liw0pk818BkOW/mqsXO5LkGFt885lvPcybPNdgY7zLk
DJzJcw02f60oevivM3muwbvGY3t8/nEmzzX4K1qRmDHMmTzX4OT3R9UNps7k
uQYT7k39adTXmTzXIK799iec7s7kuQZuC3p1PWTgTJ5rYDfx9LL3es7kuQbD
wp9bfWvpTJ5rIHN71q6Lwok816Bj+pPzS4RO5LkGZ/MCXR/UO5HnGjht7HE5
v8KJPNfgYmlNp77FTuS5BqKEtQv2/nAizzWYOP7BqIhcJ/Jcg16L4qI6ZDqR
5xrcr+/TsCPZiTzXgJdXlBgb60Sea/D06oxJfcOdyHMNTJeenn8xwIk812Ds
kgxBmZcTea7B+3VnJi5xcSLPNZjTMbVj1Gsn8lyDtfGKk8OfOZHnGvS7su3Q
24dO5LkG1sZzhd1vO5HnGoxvKdZ5fMWJPGfmc0PK884XnMhzZj6U+kGPTzqR
5xr03Wxs1fOwE3muwbZ3y/a93+tEnmsQfkVfZ9QOJ/Kc6c9uV8PYjU7kObMe
5lx9tWy1E3muQaVv+xdVVk7kuQaT0pzaXVngRJ5rMGRJUNWA2U7kuYZ5v+45
PnGaE3muQfxEYc2uiU7kOTN/H1u3MxjjRJ5rsFLX6m7kUCfyXIPQTQuO7jV1
Is81MHa3CTfu60Sea7B06viNOd2dyHMNbtT23XC7sxN5rgFH7Rk4T9+JPNdg
3YgNW3VbO5HnGqheh25LU70nzzUIqpwd/EDynjzXYEfbe6vW8d6T5xqs3tZv
9uDa9+S5Bptirp8Vl73H/wHStE3a
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zHMVXhxf//lIyUHmuQr+Gyzd7uUdYp6r0DXcuHTDycPMcxWm/I1J/HT6CPNc
BTOHeTP0/j3KPFdBERLm6f4hi3muQvvdQya863icea5Gkf/WnGWTTzDP1Vga
LXoqvpHNPFfjXvHL8pIBp5jnavzWvxnQMuM081yNGJO6ksEeZ5jnajz9UROQ
Y3OWea6GwZCkTRWm55jnaphzyvoFWZ9nnqvhUHU6meuRwzxXw3P9+KPnFlxg
nqsx8nyfi5+uX2Seq/HCJtvZ3uYS81yNVVcVWxdk5zHP1XDrpN9q4p/PPFfj
JN8qVdypgHmuRuiHc1aD9a8yz9U4MSWy38Ou15jnajxRfd5/hFxnnmvyHz1j
mHX6v8xzNaQjs2y8v99gnqvR7dafw2Trbea5GpcPO42KRRHzXI05OYY32xg9
YJ6rkWrzzu1XyyPmuRorTLeuHJpVyjxXY97a8A4/1c+Z55p6vvwSX9XlNfNc
jcyKpldWA94yz9Wo8hP5CWs/MM/VGOp8S9EntIZ5rkbcPwtf3g/jMM/rcLhX
9wHH0/hs3utwI/P46G7xYuZ7HTrn+o9566Rg81+Hlsh5MWd+1zHv61BzVCaT
HGlg+6AOxkEfvQ7bNjP/62Ab2sQJ/tLK9kMdmo2G3//HwcCXfh6ow58Z7e76
/WrnS/dFHaotswPcVnb2pZ8P6hDsfnxrRq65L90fdVhU7xr9VGjjSz8v1CEn
b+KO6BQHX7pP6vDlmM+LDvP7+tLPD3WYEn7f+uwNN9+mLcc37fapY+f29v0/
oca+7A==
         "]], 
        LineBox[CompressedData["
1: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
bWfUwrLTcw7OxxTc3tj+CP88Z/qz73D0qpuPYNS5UDnote6CudnxR/jnOQej
19quspr5CP885yBHbVTrNe5D/POcg3FLzn+Iuv0Q/zznYNUDF/2sSw/xz3MO
CgWrJbkmD/HPcya/kV+uJPR+iH+eM+cdKV9yoaEG/zznYP7lhk/6ETX45zkH
m2dz9GsP1OCf58y8pC+fPn9GDf55zkFBRFH7OXE1/nnOgU+7d7Hrg2r885yD
3DKZaG9ANf55zoHj3/dz5Xur8c9zDrp4H9HeNaMa/zxn8p0mczgtf0Cec1Cc
LjJe9eQBec7BQP+E48+iH5DnHLzxHjRD1fYBec5BoNncil/GD8hzJv6V99cc
H/SAPGfmK6PVMr7tPnnO1Lu09vGZkvvkOQdDz84fIPS5T54z9YxbqKd68D55
zkFwmE7vAsP75DkHrUtKVTn975PnHCyoLOt6t62KPGd+3xRTrXW3ijznoMj6
9hS1kCrynJlH9VsHrhyvIs856NaW9+DyyirynIO3ZvFZyjFV5DlzP//L9+0u
rSTPOQjLbvjp0lRJnnOxc8IgU9ecSvKcCwOdBZbdvCrJcy7cjee95VtWkudc
5PfPObZ3WSV5zsXcLp6/jcZWkudc+I101PdSVJDnXMT0StNd+66CPOdCX6BV
d7akgjznYv0a/8Ea4RXkORPP7x+aA89VkOdcmPf8+fvi9grynIvv/RvvrJ1X
QZ5zMVJzcJHj0ArynIsd0l8jNEX3yHMu3uSNm9a3+R55zgV3aaHRgZJ75DkX
DY5+qZpR98hzLq6tW9ww0eEeec5F8tH0yb4W98hz5vsJjWM3L71HnnPhNSMC
1pPukedc9Dxi07u59z3ynAuTAbPGzH9bTp5z8eGnZvOBxHLynAupYqbjbJty
8pzJr/f1A/EG5eQ5FxeqVNtuKu+S50y+C3B6a+1d8pyLeLdG7+Dgu+Q5F0fu
zys5uu8uec6FmeqSgKbpd8lzLgzPNJXUS8rIcy7WTvX9+t/DMvKci+VvLOtP
hpSR51y44PDyQYfKyHNmPiTrRyyaU0aeM/F2MZ3Z3r2MPOei7vgju7GNd8hz
Lo4ltL19lXSHPOdiY8gJ635n7pDnXKhYOOhWrbxDnnMxrWKOAW/4HfKciwPF
zqmxv0vJcy4SenIyq8pLyXPm+5fXnTYPLCXPubi6wBHHLUvJc+bZyXQje2Ep
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
nOm345PDP1Rc8D8VPrjL
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVYFN//NnBYWwxM7FbsFjHvtTuxW7G7G1BU/JiI2AWoCGKChCKidHeH
9NKx3fEbmLffvZ6Hf7zuC5idOXPmvM7Ngn13HFm5i2NgYPC3iYFB/b9r2ozw
elmXD4P/56PgfzntbMWgMc312UOQvGSHsT7b7A846dhFn1cVuz4P7aPPQzbZ
B0sG67M2tf6A+pzCHG3dJH12D1808cYMfbbChC3+C/R55fde16pW6LPpmOYf
e2zQZ/X7+hPU56R+OQrr/fr8jjm7r8f1+ULHz/MKz+vz8juPD7e/os8Dm15+
OOuWPiut6y9YnxNkFswV6/Pbo9NaZrzR53P1w/dRn5fWX663PvevP70AfZbX
Hy5Un+Ni6z/0+fUcX5EmVZ/PBDp1G/VXnxczo7eNp899vx7f61Cjz9LB9TdE
n2Nc6g+oz87M0QY0LfxfPuXYpfGaNvq8sBVn2PXO+tybuRvfe+mzWFN/g/U5
6nT9Cerzqzo35g7r8wnm7C5Cn+cXnq+/I//LPTfsnJK/TJ+F9dNvnT5H1E+X
bfr8ov727tXnY/W346g+z60fvrP63L3+ci/rM7/+9G7oc1j94Rz0+dnT+g99
PtL+yp9oF32efetgmeq9PndtXP+E6XPtxfoJrc8hkvobos9PDtcfUJ8PMUcT
JOvzzG28xH45+mySFc/MQH2uXlH/gOhzUHT9DdbnR7PqT1CfD9Q/vo2L/pe5
9Y9bK33uVP94dNTnyvrp3EOff9dPvwH6/KB+uozQ5331t3eCPk+vvx3T9LlD
/fDN0efy+stdos+/6k9vjT7frz/cFn3es7v+Q5+n5i9jnmB9rn/aIk/rc/3o
Kaz1mblYZkLrc/1qtclen+tn353H+lx/tEAnfW5YPt30uWH5+6rPDcvVd31u
WF7+6HPDchCpzw2Pb6I+NzxuWfrMPh763DCdK/S5YfoJ9Llhuij0ueH2cor/
lxtuR0t9bhi+9vrccLnd9Lnh9Prpc8PhhunzuIYPfa5fnXdO0ef6p+3hLH2u
H73wRfrMXGz9hP5fbuBjkz43LPc79blheT6ozw3L6Ul9blj+Lupzw3J1TZ8b
lpc7+tywHDzU54bH96U+N5ydqz43PB6f9blhOvvqc8P0C9TnhukSrs8Ntzde
nxtuR4Y+Nwxfvj43XG6ZPrN+63PD4WT6zH6U/H+e6zPruT6znusz67k+s57r
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
H1t9I88rkNfmMX+n6TfyvAIdI8a9GD3zG3leAavv66RtN38jzyuwIHyLWaOz
38hz5nzTPBxbOn4jzysQFPhlzqDP38jzCvQax7+yJuobeV6BL84Gds9LvpHn
FZC3vHFFovtGnlfgV95c753dvcnzCrT93WZ5hZk3eV6BFYvj715Z6U2eV2Ae
7477uMPe5HkFPHYcT1Pc8CbPK7A1LnBJuqs3eV4B67bpC6KCvMnzCjxznspJ
+etNnldi/YhnX0QKb/K8Ehcn/7w5rLMPeV4Jacj92PNjfcjzSvhmTPlcuNSH
PK9E3HDV3m0HfMjzSuT6cs1k133I80r0NHu/7N1bH/K8EiNCdbWHgnzI80rY
b8bSpXk+5Hkl3u594DZP5UOeV2LnpC0TNnTxJc8rIb4/eqzdBF/yvBLHB6Vl
xqz0Jc8r8b7tkp3DjvqS55WwWZbc1vWOL3nO5NlZnSd98MXPBs8rcaJve5+y
SF/ca/C8EuN37B/kWeqLXQ2eV6I52rg9bOyHyQ3AVWJHr/0nHvbzI88rsabJ
8MivXD/yvBKFTecUlW3xI88rofCs1E628iPPK/HZ+slGj+d+5Hn9eLczM/P3
I88r8eXEtti8TD/yvBLzS3I2vZX5keeVmJk7YND1zt/J80qs+zBkz/UJ38lz
Zjxbmm51XfWdPK/E3mvvlxSe+E6eV0FSdPf4FMfv5HkVSu82a+Pt9Z08r8J9
zpNti5K/k+dVmDqy2wdD4XfyvAo7igJHZrT7QZ5X4eGktiNix/wgz5nMqS0r
WPGDPK/C36FPXTod/0GeV0E15MOL/fd/kOdVmHSoR48Crx/keRU2hs62PJ3y
gzyvgig+12eE+Ad5XoWP+3Vrm3byJ8+r8KLfsLsGZv7keRUuOM162WOtP3le
hZldHaM3nPUnz6vwLSpm48+n/uR5FdZua/F4+k9/8rwKsWeSg0ty/cnzKti2
6jbos9afPK9CmZjb/Hmfn+R5FRZsNPH8MPMneV6FiZPy9hbs/EmeV8E/df7Z
Sdd/kudVmAbrwX7vf5LnVdic3i1kfexP8rwKn8LH3O9b95M8r8LWe0sL2rQP
IM+rYHL3tLzvhADyvAppVkMHbVwXQJ5XoW2rvT7+FwLI82pot30Qcp0CyPNq
2HzlD60NDiDPq8GP8fkQXBpAnldD6qsKDmz5izyvxpHp838XjfxFnldjzH23
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
Luu5DBm9NoVaLTDksp7LsHLDwXuSiYZc1nMZrGendqpf31nPZXjSbsassR0N
uaznMgRmfGyqYnxgPZeh+pd08Z06Ay7ruQwHR1sbVuUacFnPZXAaHdS6c7QB
l/VchoBUzTpjPwMu67kMPs0yInLeGHBZz2VQP1FPOX/PgMt6LsM+t3THmosG
XNZz5uuPjfeYuM+Ay3ouwzxH7eoNqw24rOcy9PxWvW/tDAMu6zkzf9yme48e
YcBlPZfhb6tz2rIuBlzWcxmarh3Y2qaxAZf1XIbLj4aiLv+f5zKMz7LIf+er
o34uw/VHUywH39FRP5dh8A5X0zOWOurnMohmzrF6NElH/Zy5XzP2ut9oq6N+
LsOPQ28KLHha6ucyLJh2Y7ncX0v9XIbzprs6nb+npX4uw7mNmum5u7TUz+Vo
cmxDQt8pWurncvyseeC/xFhL/VyOWRfcS3fwNNTP5chwXTxsp7+G+rkc1urk
FavsNdTP5fi1t2Uns50a6udyBD8w7dtqkob6uRybxnt1yGqtoX4ux39Nz1xw
KlJTP2eOv8M6c7ufmvq5HG6mzV70Y/aTrOdy9Mm9Nrhkm5r6uRyB2W5J7hPU
1M/lzPhvyD3eUk39XA51hzTr2fkq6udyNHrlXtDbW0X9XA6LvIRuzW6oqJ/L
UZwTOlG9WUX9XA6PS0/GGY5TUT+XY7h5a7VJcxX1czlewvvozL9K6udydLVu
bWnrpaR+Lmd62vtHWdeV1M/lkPVbFrRgs5L6uRzjP/e+lTpWSf1cjtE/g+5e
aK6kfi5H9oyb67l5CurncqSHuB8Y4K2gfi5HzZ9V5kNuKqify8G/px64fJuC
+rkcVldP3X1mpqDfD5LDafiI3y1aK6ify5H4caPiVbGcfl9Ijj0Ks+Mb/eXU
z+WYWz7Igusgp98fkiNapvixdK+c+rkcim/dflyHnPq5HEudw9ZWd5ZTP5fj
hz3uW9XKqJ/L0X5Vqw1TmeeK9ZzpbV8GPhrySkb9XI47J8f2n3taRv2cOb/f
v1LuL5VRP5djxpTDR41NZdTP5bi6dtr33zop9XM5zh/8vM0lU0r9XI7jX5t0
9vWUUj+XY5rc+oL2ppT6uRyHx1wddmGnlPq5HIKbxX7Dp0upn8vxYXoTjw7M
vpT1XI7Gwj5XRgv/9XM5XrkcD7gS+6+fM+PU9khEa7d//VyO8vey1gmX//Vz
OfoX3RFGbPrXz5lxr76WKJ/4r5/LUVhkrt7eQUL9XI43081CGtWJqZ/LEfDx
5MG8aDH1czncR9iaC9+JqZ/LMcb223ZcEVM/Z+Zj3soe4VvF1M8VGJAX98hu
qpj6uQJdfxUpLnUVUz9XoC4sdq+PVET9XIHbuiOGA1JF1M8VGNbuam6sp4j6
OfP5TYGtv9qLqJ8rkL1E9SbukIj6uQJN83e/H7hYRP1cgdHL3vb/PlRE/VyB
u60kHa61EFE/V6A2acuZ2+VC6ucKlEsT58ZHCKmfK7BUPP/MQjch9XMFDvSQ
KgyuC6mfKzDyxqYAwW4h9XMFxnLPuPeYJ6R+rkAj+6y3l02F1M8VmOWc8KBP
cyH1c6bnL7ZepygXUD9X4P0ATpxRtID6uYJ5Du7Erv0goH7OvP7y6yP/3hZQ
P1cgZoNrxPPDAurnCtiXtNzvuFxA/VwBq5AdvJCxAurnCjjMVTYd0UlA/VwB
2yE5T+NlfOrnCszNKNntns2nfq5AN13JeP9ffOrnCmisvkQ2cuFTP1dghfME
3tWrfOrnCtz59WLRtL186ucKpI9Z9XP4Yj71cwX2+Q0VrhzNp36uQHx/y49f
OvKpnzPf38lhwTVhHfVzBbweXhliElBH/Zw5H6OovR3t6qifK3CyTdtTF5fX
UT9n5hP3/Y+l3euonysgqfjmdLO0lvq5Aj2uTrg7yquW+rkCgVxUTrWupX6u
wGq7ViZeC2upnyuw4Fjf03dNaqmfK9Bk4949SSU11M8V4B1euuC8Vw31cyYv
zz/736Ua6ucKWPzNX6FaWkP9XIEjTcpHJvesoX6ugDbhwr5WNdXUzxUIudx/
w/uAaurnCjwW265zv11NnjPzpe/Rn803V5PnCggKmmdFjagmzxVQ1kY0rdL+
+3m7AkOHPH16ILGKPFdgSbca3sLXVeS5AmsSY/DfySryXIHOjcqU/eZVkefM
/HH4sL9btyryXIFz61YWHaqpJM+VsN7H9+4RVEmeK+H0xm7CoIeV5LkS/X2M
/W7sqyTPlZjzn+PtudMryXMlsvoMa7GpQyV5rsTBGpNLUeUV5LkSKx1iZt8N
rCDPlZg1VOLx/kEFea7E+c53mnY/UEGeK9FiesGHwhkV5LkSI0ue1am7VJDn
SrRtlDLoIL+cPFfCway928jIcvJciRPmW8NnOZeT50psFs7N8ThbTp4rkWzK
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
/f8SOkxsEcGfNjcE/we0AtuU
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVYVcv7NnBEwQ4wMI8tdjfovW1FjxjYregxEBu7u7tb6W6Qkk4JaUQU
UOnY3fEuWI/fdb0//jnXfQlrz5qZNZ+ZZ+99+m7dt2y7vp6eXpGBnl7Df1e2
G+H7uv4n9P6/n+L/5ZxjlYPGtOCyqyDz360duHx2d9jhh125bPXL4WVsHy4P
WX83WjKYy9rshgtyOYu52uopXHaOXzjp+gwun8aEjSELuLws+J/L1Uu5bDqm
hXvPtVxWuzQ0kMtf+xUqzuzmsiPTOu+DXD7ZyXNeyQkuL7n91Nb4IpcHGp5/
POsml5VnGm6Yy+my5cwdc9l+/7RWeR+5fLyh+9y5vLjhdv253L+heWFcljdc
LpbLqV8afrj8YU6gSJPN5aMRb7uPKuLyIqb3Nv/hcl/vgzvv13JZOrhhQLic
8r7hglx+x1xtgGHJ//KRh12brWzHZYs2+sOuduFyb2Y0gv/hsljTMMBcTrJr
aCCX39Q7MSPM5UNM606By/NLTjSMyP9yr7XWZj8tuSxsmH6ruZzQMF02c/lV
w/Du5PKBhuHYz+W5Dd13jMs9Gm73PJf5Dc27zuW4hsvd5/KL5w0/XN5nfDEy
+T2XZ9+0KVe5cLlbs4YnjMt1pxomNJdjJA0DwuVntg0X5PJe5mqCTC7P3Pwn
o18hl00K0pgZyOWapQ0PCJejkhsGmMtPZjU0kMt7Gh7fZqX/y7yGx60Nlzs3
PB6duFzVMJ17cvlzw/QbwOVHDdNlBJd3NQzvBC5PbxiOaVzu2NB9c7hc0XC7
/3I5vKF5K7n8oOFyG7n8346GHy6b/7RknmAuNzxtiXZcbug9xRkuMzfLTGgu
N6xW6+9yuWH23X7K5YarRbzlcuPy6cTlxuXPm8uNy1UwlxuXl0guNy4HiVxu
fHwzuNz4uBVwmX08uNw4nSu53Dj9BFxunC4KLjcOr/6v/+XG4WjF5cbuM+Zy
4+1253Jj8/pxufFyw7g8rvGHyw2rs7UZlxuetsezuNzQe/ELuczcbMOE/l9u
5GM9lxuXe2suNy7PNlxuXE4Pc7lx+TvF5cbl6jKXG5eX21xuXA4ec7nx8X3N
5cbWOXC58fHw5HLjdA7kcuP0i+By43SJ53Lj8KZxuXE48rjc2H0/udx4u+Vc
Zv3mcuPlZFxmf37/H8+5zHrOZdZzLrOec5n1nMus51xmPecy6zmXWc+5zHrO
ZdZzLrOec5n1nMus51xmPecy6zmXWc+5zHrOZdZzLrOec5n1nMus51xmPecy
6zmXWc+5zHrOZdZzLrOec5n1nMus51xmPecy6/mf/+M5l1nPucx6zmXWcy6z
nnOZ9ZzLrOdcZj3nMus5l1nPucx6zmXWcy6znnOZ9ZzLrOdcZj3nMus5l1nP
ucx6zmXWcy6znnOZ9ZzLrOdcZj3nMus5l1nPucx6zmXWcy6znv/B8+RL5rf+
uwTW8z8Y/meAxYiWt8F6XoaiwT8S5/6+D9bzMgy+v7StMOkRWM/LsPzC1rgj
256C9bwM1fmXe01OfA7W8zJcPzjGq53hK7Cel+Gksm6SaOAbsJ6XocW7Cz/b
mrwD63kZnAukPS8bvQfreRl6XnwdYdTsA1jPy3A74MiDZvwPYD0vQ+7tVh12
5X4E63kZ3nZZVWMSbA/W8zJENHkTFfPYAaznzOs9/VfYZL8jjBoX1DJUCFp2
WDrPCWWNnpeh+Fifh716OoP1vAw/2u7bHlfnDNbzMuxNnvn0xWcXsJ6X4WxJ
5LE/d1zBel6Gx+e388rWu4H1vAy37Kesyx3iDtbzMvQfsfxkpcQdrOdlaGvs
eGhxlAdYz8swtHh+zahbnmA9L8PPF9dk/iu9wHpeBo/eHRPOdfAG63kZcuLT
T7484g3W8zI4PB1kFPLNG6znzPXNTGVV8AHreRmUhamBZg4+YD0vQ43p3baf
WvmC9bwcvmdMDfbt9wXreTmuVc5vsSvXF6zn5Wh601HsY+4H1vNyuKyMG2r1
0Q+s5+U4/K785ZpW/mA9L8ebvWtzUw74g/W8HB9ebergX+AP1vNy2K8vG9Nj
ZgBYz5nff2hW1NItAKzn5ajdmGN3rVMgWM/LcfvqquFvzwSC9bwc19dWKVdU
BoL1vBxDnBT+/lZBYD0vR9YD2+YxkUFgPS+H6/rDZ66NCAbreTmK1TnX27wM
But5OTz99c6vbPkJrOfl+M840HHvsU9gPWf646nd8DUVn8B6Xo7+rT0m9FkT
Atbzcoy/9v5bUnIIWM/L8e3s1GEbpoWC9bwcVSPujynxDgXreTm+bNgoXj8w
DKzn5RiWOet43oswsJ6Xw2ywNH6VUThYz8ux38mi/Pe1cLCelyOlw/DKy00i
wN5uOU6POV4642QEWM+Z8QhIF/SWRoD1vBzvj83hmR78TOtABVZvMm66qf4z
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
XL9f5tabTzXkeS3Wrk+6egxa8rwWnvdWDFJVa8lz5v4upl0f/1pHntdiPnhz
Pw7R47Ge1+LH0rdxQ67q8VjPa5FjumoYyvV4rOe12OxtYCRZ0ITHel6LGdq7
kzZ4NeGxntfizM4HJ6+b6PNYz2tx92bPxJsX9Hms57XILrrd3I6vz2M9r0XZ
A2vjtVua8ljPa7H8cerLBTlNeazntVh9MqrHykXNeKzntXj/4mjgvfhmPNbz
WqzJlfRpNduAx3peC+mN8xcyYw14rOe1aD/Of5liviGP9bwWrsMk425nGPJY
z+vQ/2q35JfrmvNYz+sQa1V9a0xVcx7reR1CNq17suZUCx7reR2W7O5v08u4
JY/1vA7Bzz7GXnJryWM9r8OxnV/mPp7fisd6XodFt+tnL6tsxWM9r0N84IaD
Ybdb81jP6/BEG/fw64Q2PNbzOuSLNwy9VdKGx3pehzMr6rv9uteWx3peB5M0
fYukWe14rOd18DM/M3OEsh2P9bwOLomjY+V+7Xms53UIHCMfeW1yBx7reR3u
bb191uVZBx7reR1SyhG7SNmBx3rOtK/HiZHrNhjxWM/rIDt26XhIlBGP9bwO
iwMy/ReZGvPaNy7QdTh9MKYD/7Yx73ej53VM/0s9z0iMeazndfhx59zRtA0d
eazndTjUfpvYO74jj/W8Dm9t08eLRnXisZ7XQW9T1qcNzzvxWM/rcNy0r62/
fmce63kdYvS9XQP3dOaxntfBeD1/Qe/szjzW8zo8VMxIsTfrwmM9r8PKUdOu
Kd53YYdXvx4PW47VpBia8FjP61G2WzcwYZcJj/W8Hjus2/MfJJvwWM/r0WZ5
UVT24K481vN66PHqTEZf6spjPa8Hb8eTifO+d+Wxntfj6EOL+tDR3Xis5/WQ
P3t8dPT5bjzWcyY7/GM5P7Ubj/W8Hi3iLo5x6dSdx3pej18WwzqoV3bnsZ7X
40nu2/Z1D7vzWM/rmf5/dHFMSnce63k93uSu+31G3Z3Hel6PvLxdwY9Ne/BY
z+sh3HrZZtqiHjzW83rMeLy/89zdPXis5/VI3jy9y/XzPXis5/V4PLubU+X9
HjzWc8YVjW7yipc9eKzn9bBdFvp+2YtuPNbzelj3Xa3zye3KYz2vR4d6E4vq
mV15rOf1GP/jaOrQeBMe63k99r9+E9B1lQmP9bwenhsmehsLuvBYz+sxaJbc
9+D9LjzW83pUXClr+WBiFx7reT1OPRqyd83Pzjy2eUz/LAtybHGzM4/1vB5T
rg21M5nSmUdVR6yt2zqkf2Unet75uDap9p9fLzrxWN/52F5iPr/v4k70/PPR
p/O27gH6nXis93wEW4xseS64I60HfJS7NDfYs68jj/Wfj6a7PJysTTvS+sBH
3ciR3zYVG/PY/QAfkh/FGcteGNN6wUfqnFtzJq4w5rH7Az7ynZb+bGZkTOsH
H6czEsNCUo147H6BD6OaJl1X3DSi9YSPcZLN2q8LjHjs/oGPxD4FJqNbGtH6
wkcrwxEnbJM68Nj9BB/jmztdvnWjA603fFz8aZV0fVEHHru/4OPlrRm129t3
oPWHj3vDlDNnOLbnsfsNPhYfbtrv0Kj2tB7x8WWxrdfmkHY8dv/Bx8wcsaTF
vHa0PvHRtt3GxN05bXnsfoSPQUOrPl3a3pbXuFzt4MMgd3u3FbI2PHZ/wkfF
0U11BTfa8BqXG1s+1k02knfo04bH7lf4yBzu6CELbM1j3z/kM/vOe7hp2ZrH
7l/4+LE68Hkis76y7yfycSvebIf75VY8dj/D3M+Q1A7j+rfisfVIPrramiWv
jm7JY/c3fFR/X3Gr27aWPLY+yVx/REWvAwYteex+hxnft8ld1rm04LH1Sj5+
d5H8ylzcgsfuf/gw7nM9JUvSnMfWL/lImpLEX/2mOY/dD/FRWiRZtWF+cx57
/mHaa9uqqlBkyGP3R8z9Oaw4lv7OkMeeh/iYsbTq81hLQx67X2Lm28gyGz2d
Aa2nfNy5cLvXOG8DHrt/4qOb/9TtcVsNaH3lo01m33SfLgY8dj/Fx4DZFcXC
lGa03jL/vs6o18ULzXjs/oqP/V48gw1Tm9H6y0fkueU9T4qa8tj9Fh/f9iyr
yPNoSusxHyVSc/HeXU157P6LmT8XvL9OGtSU1mc+5syx6T76tz6P3Y/x8Vjm
d2DpR31ar5n++/Xg8pNt+jx2f8bHFf0mHZQD9Gn95uNCanWeXXkTHrtf48Nm
9wDf5m5NaD3nozh6/AWnfU147P6Nj4ROvcyWTmhC67sAmuOqnzqVHo/dzwkw
L+fNJc8YPVrvBRh61XDx6lt6PHZ/J8CNqRkH5Sv0aP0XIKHNY7MbffR47H5P
gBmXbA2N83V0vhOg38pZtsX7dbT/E2D6c5GnXWsdnfcEKP94sy7FSUv7QQHO
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
r+S5BD1Pd3nbcfVX8lwCX5ORmUdmfiXPJega3DNbb8RX8py53vqoaf4mX8lz
CRSWPJe7+l/JcwmGbNL6PKjNIM8l+G36ShyWn0GeS/DgmKBdu9gM8lyCR3Et
3l32yiDPmev7dJ/f/2UGeS7BO9frzmVXMshzCZ49KdqWfjCDPJeg8snnXkUb
M8hzCYK/SU60X5hBnkvgemlT3x2TMshzCR6+5wcV988gzyV4P9qz7EyHDPKc
6d9jVh7nlOnkuQR5BnrWC7LTyXMJzK3fzVvlmU6eSzBuwwlvl2t/Pz8igcX3
NDm2pZPnEgyPzDrVbfrfz5NIcDTJ/cWEbunkuQRhTta+D8Vp5LkEJf3KBo7L
SCPPJXixRbK6o3saeS7B0IVDfMZdSyPPJRhr8OfxQ+s08lyC6ptL94+dkUae
S2C2fZVb+3/SyHMJeHuf+Q1VpZLnzHwJ2yW7kJ9Knksw0CW1zCQwlTyX4M23
vaKKh6nkuQRlpx/fkxxIJc8lGHxz2LhpS1LJcwnyB3gs/TwylTyXIKHtYOuT
bVPJcwmE4yf83l/zhTyXMOcm0aK3KV/Icwn6hTbpYej2hTyXIEhy4ov9jS/k
uQQO2fXFJ3Z/Ic8lSFqyteCqxRfyXIKpz3mTU4Z+Ic8lqBuz+fzs1l/Icwnm
DVRMEVWnkOfM/F7wviL3Swp5zuQn8zrXe6SQ51I0ezBqgdndFPJcitcpNe1C
96eQ51IE7two3LsshTyXYnOc67nl41PIcyneDTCbv6dLCnkuhduBoHx/eTJ5
LoXOSD9mVGEyeS7FnYRxzwvDk8lzKYw/Pq0LepdMnkuhMXBaFXsxmTyXopW/
wW69/5LJcyl8RKfD9lgkk+dS6EeoywxGJpPnUjipb19IM0omz6VIzF09JE6S
RJ5Lkdr6lV1lQRJ5LsWc9a6GZhFJ5LkUG/XK7T59SCLPpRANi95ufTWJPJci
6m3AQTObJPJcirB5M6ZPX5pEnkthWFa+y2ZiEnkuRXzysGdxPZLIcynUT2/a
LGiSRJ5LITc6e1NWlkieM+1RHXqR/iWRPJeiWJ2Mr76J5LkUZ59n91M/SyTP
pQganlZteTaRPJciS/xj1pftieS5FOaDO+fsX5RInw+Sol3nbRbTxiWS51K0
XPTKckz3RPJcilU5B+8vapJInjPjt+9w+J2KBPJcilOFzS/I0hPIc6b9Q3ff
uRKUQJ4z/dvP/YHZ2wTyXIqRb73Q5WoCeS5FeLOB87rsSyDPpRgScm2d2aoE
8lyKXm59Rl9GAnkuxYhsxTGRaQJ5LsWnvD9VlzskkOdSWL88ZmauiCfPpdhV
Z9C3S+nfzx8y82vy22UdU+LJcymqRhpdG+f/9/OIUoQ8LTlu9zqePJeivs2/
JYVX/n4+kZlPqbOPbdsfT54z4/HIRtFmbTx5LoXsaNc++bPiyXMpuqZaOMeO
iCfPpUjp6rs40ySePJdifFOnDD39ePJcit5WQ2ssa+LIcyluSks3fc6NI8+l
+KXfs3pxVBx5LsWGjOh/tW5x5LkUBW22z099EkeeSxFZOPJV6Pk48pwZX1VF
qySbOPJchin10pWSVXHkuQwjJqyYxZsVR57L4Hvi6UOXkXHkuQyl38taj+ke
R57LkD1c70CuQRx5LoPx1LHXngtiyXMZJvRfb3KiKJY8l0Hfvfr30aRY8lyG
K88Lgx4ExJLnMpzv6Lsq+X0seS5DZOuzt/65E0uey3DG9ds/d0/EkucynIj8
ldfjv1jyXIY+06efj10eS57L0Nnb6M81Xix5LoNTZPO0nSNiyXMZ3kZYNLfu
Hkuey+A5+NL6E81jyXMZukwvfO4mjiHPZfj1UHRTVhJDnstg6lWt25AeQ57L
8ObjupgfYTHkuQxjg5bbH3eNIc9lKG657sDIZzHkOdPembYK9eUY8lyGxGna
1n8OxZDnMpgn1B0r2xJDnsuQv/hxhyZLYshzGYKdgz6Onx5DnstwIO1G0/PD
Y8hz5vUdfJqUdY8hz2W4mWC2f1vLGPJchrvL7fsqZNHkuQyvwjIqHMuiyXMZ
hr1v/9wmJ5o8l2G2vYmhRWw0eS5DnYVhM/hFk+cytCja+N/CD9HkuQw9LVoa
7LsfTZ7LsN1oqa/LuWjyXIboEb9nq/ZFk+cyfGuW+WDbpmjyXIY/a24cLF0c
TZ7L4Dbre8jR6dHkuQzNB0lm9h8ZTZ7LcMFzU+nvXtHkuQx7s/UPhLWNJs9l
qCnsk+CiiSLPZVi2fmW4e20UeS7DxQXPh8cVRZHnMlzVm1wnTI0iz2WoWJlf
OCEiijyXYbmHXfptzyjyXIaSZts/Kt9EkefMfDWxGHvqbhR5zvTPoT6rjM9F
kecyrHo6oTZsfxR5LkNVlyEZJ7dEkecy2IVUFy5eFkWey9DSKaJmwqwo8lwG
6ZWxP0ePjyLPZRgdMOgeBkaR53Ic2ZP4fUuXKPJcjnzh/Q9Pm0eR53KU5S74
XCyPJM/lQA99o2lVfz//LofTIRM798JI8lwOmzOjU0em/v08vBxWTaZJYiIi
yXM5ggcfSd3j/ffz8XJ0SVo9YdCHSPJcjsgPnm1ED/9+Xl6O1s4Xx2VejiTP
5bCeM/RGzNFI8lyOKrcpgvhdkeS5HOW9bi/4vi6SPJfDe9qsw00XR5LncqzY
GL7MnBdJnsvhlfsm/srYSPJcDt7KLz6lAyLJczkmmu+RWppEkudyrOIX26W1
jCTP5eh9yn5YmPwzeS6H5dY5Npqiz+S5HBsry49sjvlMnssx7D+L9n+cP5Pn
clyR2utu3PlMnsvhB+d2yw5/Js/l6DPnVLOpaz+T53Loxn52mcn7TJ7LIRt7
KWHPoM/kuRyamctMA9p8Js/lSG/f/+E/ogjyXI77mVtynAoiyHM5Ro6tCl4S
GUGf/5XjmGnzlt2cIshzOQb9OXBf704EfR5YjlPRS/5pfiSCPJfj1pCJp4av
jyDP5fj3Wu9j+2dFkOdy1Mw+/DNzaAR5LodFQLNzy40jyHM5/unWcrBQEU6e
y3HtaR9Hz5Jw8lyOXliSdC0pnDxn/r6l/pZzPuHkuRymxU2nPX4eTp7LccHp
yoiE8+HkuRxz5/dq2mV3OHkux5DPoXfOLwsnz+U4MCLwfUuzcPJcDnXN57ae
/cPJc6a/HKvsbduEk+dyVO52mLJQEkaeM+1JC30z60cYeS5HnOEKp1UJYeS5
HAFtRIOueoeR53KYRBwQfH0eRp7Lod/MsHDSxTDynJn/SvPgYJsw8lyOvj1V
G6xWhpHncqy0Ofm+FS+MPJdD4Lx4deGQMPJcjp0n1q6O7xhGnjPtd8o/mqIJ
Jc8ViF648nZVeSh5roBfO799/TNDyXMFmm7qIz0SFkqeK3DOs4+8xDGUPFfg
m/eVf/+7H0qeK/Dvq8NpBqdCyXMFttmsWx6+I5Q8VyBnkNL/9tJQ8lyB9f02
fLEzDyXPmetbFh08ZhpKnivw5GLvCw+MQ8lzBdbEdcyO1YSQ5wqkvhTPbF8Z
Qp4r8HnjXJcD2SHkuQKbrueWVH8OIc8VuNouNOG0Wwh5rkBLr6UTTZ+GkOcK
PFyKlhUXQshzBVzW7+sZaRtCnitgYNxxkdfaEPJcgX9q3h0OmBtCnivQSpN1
MHNsCHmugI2lW3/D3iHkuQKh83dZL2kdQp4rcKbtQ2Mf2SfyXAH98vrWg39/
Is8ViHC9NjIg4xN5rsDC/k6rV4d/Is8VaHYyZ6eR6yfyXIHOzkXTip98Is8V
WPotMTD24ifyXIHxVT98I/Z/Is8V+J7kYJS24RN5rkA7WbGv0OLv97kUMK6/
Zzd88ifyXIHIj0LzkwP/fr9LgVHCM2U/jD+R5wp4da9avkrv7/e9FJg6tf+O
37XB5LkCq+KWay8XBpPnCoxp9lNjlhRMnitgfm/LXMOgYPJcga5Z3p9+2weT
50x/XPk2Je9BMHmuQL9JA1yKzgWT5wqUxraqktkGk+cKPKqc8XPghmDyXAFx
mN+e/xYGk+cK+JqdOxg2JZg8V2BIujp3wOBg8lyBx7l+p951CSbPFZg5xnre
KINg8lyBAcl6Pb6KgshzZr4N8C68XBpEniswtzJl779fg8hzBcYdLQ4wjQwi
z5n+POD+rJNXEHmuQOWyPqqOb4LIc6b9mg3RA28HkecKpC8JzlpwKog8V+Bt
mG+nc3uCyHMFrPP09iSuDSLPlfAVXw7rZxFEnitRF2ZVf2dKEHmuxPR4z8o2
Q4LIcyUGjmz24FXXIPJciavjRWnTWgSR50pY5c27ypcFkudK7N+neu9fHkie
K3F48XjDG3mB5LkSFzbMebk/IZA8V+J3mMf8nUGB5LkS2dZdpfudAslzJZon
rLt542kgea7E/APH+f5XA8lzJXK9X7flHw0kz5X4PrF3itnOQPJciXvhZ4ye
rQ4kz5W44rkjqdmCQPJciRtJroXnpwSS50rYf5k3pv3QQPJcidCe2/zcuweS
50pY7LNYuLZ1IHmuRODhQ6Um6gDyXImXF09u/VMTQJ4r8Wu2aUB0UQB5rsT7
zVtjvdICyHMlEobhhPvnAPJcCbeV0shg7wDyXImxr8ouZL8PIM+VUB145Kp7
EECeK9Hxk0u/qZcCyHMl3u6T5Fw8EkCeK2G0bY/X9x0B5LkSm3/1fzF7dQB5
rsQzu3XnQxcEkOdKONw+uGSGWQB5rsSKKbXCnOEB5LkSR4sPWh3/J4C+76PE
Kmnq5mEdAshzJeb6VjetaRJA3/9hfj+hcEioyJ88Z8a3V0bEsz/+5LkSS272
9LqU50+eKyG8PbH8TJI/ea6Eq2HA8quh/uQ5M5/EliWvPfzJc6b9o4tPRb/1
J8+V6DZsU0fJfX/ynJm/zmX3J1zyJ8+VyDrt/eeinT95rkTmsi7qnzv9yXMl
lm24H71gnT95roSiX8igqH/9yXMl9KbM7zKX50+eK2FpYHw2f6w/ea5E6tk2
lscG+pPnTPvEFocHdvUnz5V4Eq/9/rOVP3muRPTYo0edNH7kuRI5HfuOPcX3
I8+V8He8otrwy488Z+a/pWX0olw/8lwJ/gYcmZ/kR54rsTNnUtOlYX7kuQqr
x0xct8PLjzxXwXKElc21D37kuQorbiUMDHrsR56rUFlcYie85keeq+C6ooPl
1FN+5LkKi+wKX9/Z9/f7yyrwFGXL6rf6kecqBFwXbFi/8u/3mVUY9yDbM2eB
H3muwq3mlyasm+ZHnqtwbny70prRfuS5Ci8vv7S/McCPPFchYoXt3vFd/chz
FZQhpcOrWvuR5yroWdlmuel8yXMV+J3fLT0u8iXPVXjVvc+zZeW+5LkK8/d5
PZ1U6Eueq/Djl+mMwem+5LkK+7+dvDwgxpc8V2GzSeCK4UG+5LkK4fcVH+Dm
S56rYDb7/MaNb33JcxX2ad8ev/bQlzxX4dnEyD/hV33JcxXcC7c90p70Jc+Z
9g8ecNRivy95rkKnwz5n31v7kucqtG2V9bbpGl/ynBk/xY6k/f/6kucqhFZt
qauY4UueM38vSdOzmehLnquY9SJdqBjqS56r0D3rReCD3r7kuQpVR89Mn9jJ
lzxX4eHFolO/W/iS5yr85zfa+rXGhzxX4fYEw/LNQh/yXIWR55rIR5b7kOcq
5A0uvN78uw95rsL6sM13qzJ8yHMVhE8Oq/LifMhzFYLD2kalh/iQ5yrc8J2U
9dXLhzxXwXyV8cAf9j7kuQodw7+6iJ/7kOcqODaNsOp814c8V8F47LhuvEs+
5Dkznkbvqw4f9yHPVfBufjPMz9aHPFchVXj1gnqbD3muQp9mM0dbrvEhz1VY
+cruk9tiH/JcBWtTqZHxbB/ynOlf+ccRF6b4kOcqTBlip6ce6UOeq+Bx4MiZ
swN8yHMVnrYKf9mmuw95rsK9aycWfWzvQ56rsD2k9tIsAx/yXIXZV3dOqVV6
k+dMf6cu3viO702eq5GILhXry7zJczXmz5ub0u+7N3muxs+fR9WCr97kuRpj
jq/Yn5zgTZ6rMS/3RQ/3cG/yXI33tZ1ET/y8yXM1XJLeV99w8SbPmd/fNVp5
9a03ea7Gj3eRHe889ibP1Tig2jri9U1v8lyNHq8mmwec9ybP1fDvfWhC7lFv
8lyNtDNW7fRsvclzNcrrR4aNtfYmz9XITbIeb7vWmzxX49iOnTa+S7zJczVc
DcLW6OZ6k+dq2HgLBFbTvMlzNZb3dBvqN86bPFej/93nim5DvclzNWKiT1td
7+NNnqsxM8l0TBMTb/JcDQuB3eXzbb3JczVeu66Z16qZN3muRmHOi4KJEi/y
XI3YgeF5u0q9yHM1PjguOeKR7kWeq7FhoMubJuFe5LkaTg6TeDtcvchzNS6O
uDG38KkXea7G5/sL32y+7EWeq/HvzFnjpQe9yHM1XpiskLzc7EWeq/G19/m0
pYu9yHM1vtv8cjcx9yLP1XhY6ne6dogXea7GbYO5I7NMvMhzNQyTW7gnGniR
52o82Xbld6rIkzxXI6+TdVxpiSd5rkaBbot58wxPsN8HYuaLdO0kswhP8lwN
60Wz7c+4e5LnzOs7jjjw9YUnea5Gs3TerXHXPclzNWovR/2yP+pJnjP9ZdV2
x8AdnuS5GrM2vWwSYOVJnqthN1Vtv3zW3//fhxr3wwqmNxnrSZ6r4ZApDQ/v
40meqxFpNcroentP8lyNdd+Omm7TepDnary5W1S/sNaDPGfa3+rKmlnfPchz
Nab08Vq+IMWDPFejd5hn6oYQD/JcjfYBwsBzLh7kuRpn7fV0Ps88yHM1boUf
eSy46kGeqzHA3nA3jnqQ52okzD5r83KHB3muxg736FsGKz3Icw3iipNDTs/x
IM81qAl2Lms6wYM812B84EW9ZwM8yHMNFhU9l0/p5EGea1B1F58rm3qQ5xrY
7vg520nkTp5r0LuV8vjBX+7kuQYH2g+yXJjlTp5rUJjRPmBMjDt5rsHbBcdf
DfRzJ881mCeYIh300Z0810D5ZLrfhIfu5LkGN6Zdj1160Z0812C9bHSPk4fc
yXMNaqO3OPtscyfPNTj83/oNkuXu5LkG+Uvths2d7U6ea5B3oFsz+/Hu5LkG
N01i89sNdCfPNRjwtcXLK53dyXPm+vPvmLc2dCfPNbjVv73XK6kbec7kH2t+
Ty13I8816OK1JO1Pnht5rkG3LZUbXye6kecaHJw44tqWT27kuQZX4yebj3V1
I881MPhhtrf9SzfyXAP9TcfbKm66kecaGPed177+lBt5roH4a9vtgr1u5LkG
s3LnN9Hb5Eaea3B86JXc7kvcyHMNWs7ekTdjhht5rkFH0Uvp4bFu5LkGabNq
Bvn3dyPPNXizeeQ6XSc38lyDQYcXXllp6Eaea+B/c/rLTzJX8lyD8OOdbg+u
dCXPmesFVy/++M2VPGfas1icNeSLK3muwSvPfe3Dwl3Jcw2+v/EWr/FyJc81
WNe9x9Gm713Jcw2sJwy4EfzAlTxnfr/Jsr7HL7mS5xpMOWQ2eo6dK3muwbJZ
11x77nQlzzVIz+Vf1K1xJc81MO833bt2oSt5rsHAuwv6l09zJc812Fqizqge
5UqeM/Ol5zIPVV9X8py53q7l7l06uZLnGnzSdI82N3QlzzXYqc0s3St3Ic81
CNwVoO9a5UKea/BD1bqL4LsLea6BqvNoo1npLuQ5k+1vVLyNciHPmfFo8ehe
c38X8lyLcGWW5rijC3muxSu7kgGyZy7kuRZ3321VnrnpQp5r4ebR5pDRGRfy
XIvslI8XPfe7kOdaeLZU9Vm5zYU818IYYrRY6UKea7FdcjYndr4Lea6FxZLX
uTfNXMhzLaylayZvGOlCnmuxVvm1fnJfF/Jci+KYUcJ/OrmQ51oMUbiNb9/c
hTzXAjtvu7dUOpPnWkTyB1u2q3Umz7U4urfEqFexM3muxb03plUTspzJcy1O
dzyRujremTzXYl3n7T6XPzmT51osvH/hZpi7M3muRbemJ5Zq3jqT51rkbtJT
zHvoTJ5r8Vsv/+irK87kuRZFdzJilMedyXMtsmriM7fudSbPtXjb3+FF9mZn
8lyLLf9uNVpi5UyeM/15Xn9Ezjxn8lyLHRFPfm0zcybPtbhTYD5MPdKZPNfi
wH+9la/7OZPnWnx2OTJ3QRdn8lyLNScvGmpbOpPnWkSZPx8dpnEiz7X4Etkx
9KLAiTzXYsaU9a+s/jiR58z99K9IHlngRJ4z4zlpyjTjVCfyXIvFS4oqtZFO
5LkWLTbZJoj9nchzLfZZPfgicnYiz7UoaK+qV71yIs+1+LBox+C2953Aft9X
C+3d1zaml53Icy2UXez8LI47kedaHIrNENntdSLPtVjd/sUA9y1O5LkWMn6S
edUKJ/Kc6b+sbePGWDiR51oMOGenOzfdiTxn5nu7ns8KxjqR58z8zDounmrq
RJ4z7V8c2dqhhxN5rkVI92E5Jh2cyHMtxhTpzX/YzIk816LJ+IfrTBSO5LkW
Eofpze1rHclzLdT3d8+cUupInmuR/M/1Znm5juQ58zwONZlzOsWRPNcifeor
1bBIR/Jci202rr1/+TuS51rs3fbD+YOLI3mug5PZzzu73ziS5zo8PbYxaepD
R/JcB4XEZEnHa47kuQ5T8792F59yJM91+Of0+r5FBxzJcx3zeg/Wpe1wJM91
8Jy/OiphnSN5roNV5CuLpCWO5LkOZ8+srs+c40ie6zCm5x2n31MdyXMdXhpZ
7NGOciTPdfjX6cPYPgMdyXMd0sqDJAu6O5LnOtTd83M/2d6RPGfuxyDJMqCZ
I3muw05MyJMqHMhzHa5FTjfj1TuQ5zq8ujzh8P3fDuS5DoGygyeqChzIc6a9
P9bMXZjuQJ4z97tsZYZfrAN5rsN3z6IOA0IcyHMdEi/Z6r3yciDPdRDduve0
h4MDec7c34vstA8vHMhzHUzuZL8Zc8+BPNfh3bxxeomXHchzHTq/eFW9/aQD
ea6DcFrcmtYHHMhzHebH7p4VvMOBPNeh5Pry9zbrHchzHda7LrYZvMyBPNfh
tmjc6+p5DuS5Dm75v4YHTnMgz3Wo3j6v07VxDuS5DqXjlizaMsSBPNdh/Dp5
6ozeDuS5DpN3znwwpLMDea5D1OIpD7q2diDPdSjfwI9v18SBPNeh+fiLQ9rI
7MlzHUJ9O/t1qLUnz3WoEmat7/nLnjzXQT5Z2HtUgT15roN+pbtkfro9ea7D
qJPz83bF2ZPnOrTbbxRxP9SePGf6d876j5E+9uS5DiN3XT4ndbInz3VYMkaw
eNwbe/Jch6GprVscfWRPnuugNlvgEHXDnjzXYeOMgX06nrcnz3UYvrb/wT1H
7clzHS77pD1K3mtPnuuQ2znk/Ghre/Jch5Z1Z8e+XmtPnuvwYWT0uw5L7clz
HbpZDo2/Mc+ePNehF3a9aj3dnjzXoe36Sb0ejrcnz3WMG1Yz+w6zx/8DKhp+
ng==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw13GVYVF0XBmBApezA7m4xsZ+xO7BeC8X6TAQMbLCxFQNQQRAFkRAElJDu
ECSlBOmO6Y7vwCz54zUXzJ5dZ91rbc+cEQfNtxzR0tDQKOmkodH2745uUwKc
W/9izrTs50axp6HR/lMG05mTNVcWn0bexfqx03XL0Ds78qQp/zS8ONkbDvYo
g3C7s/huV3PYnAg/96J/GXwXJ6eHjjXHtkr3t/HDy/B8w9SeEphjwt6nsYLx
Zbj5xLdu+S5zKHPbGizDdJM+l53PmCOHaW3nvDLoHh3ZqPXIHJ6J64zuLynD
6c/3D5x3N8c1zN4XtqYMo81atQSR5tgSMvROo3EZBi1u5t8oMMe46bo+g3eX
YXVZT5PBXHPIP7d1sAyxwy0NKzpZIGtkscT6RBkwq7lXRC8LeDC98z9Thi2G
wXXvhlngSp8vq8ovlyHO7k687WQLbH7scLrXrTIERnUOvTDPAmO0b7xa9rAM
L65JC06vtIDUum3AZWjeo2FkttUCv0RbmREz7x+XWn3G1AIfLRbp538og3xn
B7GNmQUutU2fTxnO2ey4/vKyBTa2DTeoDJIvZnb+thYY1da98DKsaeAuyn1p
AXFbc/Fl+P3omaPqvQXSf7b9MPMbyAmc4WcBtxXfeYrcMix1j3UzC7fAhUiX
gdNKyrB17tcL/ikWWM/Mnml1GTLmma2Q/bbACP8zx+yay1CW5Tl0Y5UFhOPb
FqQMg+v69/3MsUDa+7YGyxB+9/ziLioLuDKtjdYux4RFl70udLHE+Rf9O+7o
Vo53N2pONQ6wxNouWpNs+5ajXy9rx6PjLDGMWY2QoeW4uk2P1TTLEnxF2wKX
o/v37VaXlloixaqtg+WYqT9nY/fNlnjX+olZ4XJY190s8jWxxFmmd1dRjkn6
g6ZuP2mJ1eWX21YETR6VezpdssSQ3YcX/N1UjiFZyVaRdy3Bbdt+O8txNivC
7vpLSyS1bRfTcohvREStc7OEU9vyHitHrGdq7+H+lrBsWw6LcqQZs10VEZZY
2TZ9F8vhPH7p5ao0SwxqG+6NchzM+hOQW2gJdlv37pfj9JIak4xaSyS0NWdX
jscV+1av3X4Fb163/ZSjpmrDl5urbWDe61Z06vty1J0qNe886QaWPzxVK/tc
joFTlCJnq5sY0LHtCivHxlG+vKtOt9BytW1DM/09Hv76y6fbiBO0LUg5tlcb
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
FljynI9dPBJLnreg79er9drWseR5C75XFhyKsY8lz1twdNuLpZ5+seR5Kx7a
JnF+JMeS561w6Z5ZKi+PJc9bYcRZe/GkLJY8b0V5/6FTdQ3iyPNWBFVcscyZ
Gkeet+JWUG1Q+uo48rwVK7zmnxIdjCPPW5Gz3bOL8bU48rwVH+3iuhQ7xJHn
rdhy9FbVq4A48rwVUr3VXW+mx5HnrRhQ/VfTtS6OPG9Fa9SjxewO8eR5KwyE
ukvODosnz1txOeHRvQkL4snzVowJyHnV+7948rwVezVGNk4/G0+et4K1Ym2X
O0/jyfNW3OkWaN3VJ548b0XA+70pacnx5HkrHmSz3E4vSiDPW/Gaf2HAOpsE
8rwVwpAy86GhCeR5KzaviF3GbUkgz1txuvP6uO0jE8nzVtxW6hkZbEskz1tx
aVGXX59vJ5LnrdAMu2d1MCiRPGd+H9i5o1VlInneCsPfTWe69Eoiz5nx1CZ0
XM5KIs/ZmJRlt3nW6SS63tkoO+g7jf02iXxn48CF/lq2KUl0/bORf+npw06i
JPKejXpl6xOr0ckUD9h4rr1mcaVxMvnPRpHz1cdbbZIpPrDhErDPIsMnmfIB
NtKzZ+vvLkqmeMGGZsPbbJlOCuUHbCZE3AwImZ1C8YMNAw/jQa8OpVC+wIaH
0fUBr+xSKJ6wsWnHj0PhUSmUP7DRp2nz0W4tKRRf2Pjw8eKWJ4NTKZ9gY5ln
7WCsS6V4w0btkE5PR11OpfyCjegmzdWLP6dS/GHDt1Qnzq4glfINNo6afN4z
XDeN4hEbr3wDjJuM0ij/YGN6rws/RUfTKD6xUbzAr2S5YxrlI2zsPS29lZec
hvZw9T82rN17+HpL0ig/YSPR+qtRysSfaA83p9mI8NklmLb3J+UrbEzul+Rd
/vgn/f8hG4svbelbFvWT8hc2LiwYXTuZ+5P+P5FZ3wNrklNGp1M+w8bwLz57
Q/5Lp/NINvZbiVjSB+mU37CxfaZJF7vIdDqfZKPTzm3G1tx0ynfYCPVd/C5u
bAadV7JxfWgH64N7Mij/YWPLmzcX9z7LoPNLNpzv2fUOTMigfIiN4M422Udl
GVT/sKFleNbo6vRflB+xMUfTJI5z9BfVQ2zo7z8uTHn3i/IlNgq37tms/fsX
xVM2hqwzH5+rnUn5Exsnjjb8KBiZSfGVjQ29f7n1RCblU2x8TfvibLMnk+It
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
J6k958HVzCnCZzObPOfhL8tukPUlNnnOw3yvog8/3djkOQ979NblvmbyXLXn
PPDf/m9yrZBNnjPz18loyvcRHPKcB+2/g3bpbuCQ5zyUTXec+ZfJQ9Se8xDi
P3jJQsZ5tec8xLzI0B7BOKr2nIclzWv1n6o45Dmz3zb/L8uWcUDtObO/PtaV
d9nLJc95mCZaHjOMiVtqz3nwGbeBHxPGJc+Zv19UruQ3cMlzHtYufnMobBCP
POdBZGzxofcGHnnOg2HXvYu0bHjkOQ89vLi+tl955DkPpzooTrtX8chzHmyG
6In29ueT58z86gtD/NbzyXMeJgkvjXK5wSfPeVg10s11cjCfPOeh2/v1r3Y1
88lzHla8fGs6brSAPGf2c9iBPQ57BOQ58/u+9/K9XgjIcz5CzU4NO/RTQJ7z
cfXS3PMxnYTkOR+7r0xnqnshec7H1m4aY89fFpLnfDjxWvN+fhOS53wYfBq3
8BdHSJ7zEX0z/3/XporIc2YcC03/KzgpIs/5CHlgoVn+WUSe87H624C1jnUi
8pyPWy1F2qpxYvKcj3ijD3KDY2LynA9375TSEk8xec5HkZZ8w38NYvKcj+2T
RuXfnCwhz/l4kLmIa2ouIc/50Aoy1OQGSMhzPnpEPto4RyQhz/k45be2y9SF
UvKcjz//u7ql8IaUPOcjzo83ZG6ylDzn4+/r0o1ru8vIcz7Tyq5P3f+TkefM
63JBiq2LjDznw6Z27tyAOhl5zofz8K7GT2bIyXM+zKZP3jTompw8Z+ZTdG3V
zmQ5ec5H0urT45b3UdB5Ix9W1+YFlpgqyHM+sicY3h71RUGe87HFnKvdR64g
z/noc/TDJd+1SvKcD+uZBg3Nr5XkOR+H9rTMzKlXkud8/Bqeotw9X0We81Hq
vCH85kMVec6H+MYqj1UlKvKcj6Mz9u7L6afBUnvOh7yId2DjEg2W2nOmv9/n
juh9UoOl9pwP451eUcNeabDUnvMxvkaTdSZKg6X2nFmv0wtu6TZosNSe8xFp
8n5VWR9NltpzPhSNReNE0GSpPedj11bl67UnNVlqz/mY9fNTS769JkvtOR/r
lvbd7BSryVJ7zodvxsaYly2aLLXnfHh3Xz0kcqAWS+05H263hvY1WKXFUnvO
h+bgrbPsz2qx1J7zYbfa4PciVy2W2nM+clJfT9VN12KpPecj1ctmBUeixVJ7
zkd90HIhf2wHltpzPjLYqa3dtnVgqT1n1u8RO3D+jQ4sted8rIxe4HD2SweW
2nM+aqY5RQcVd2CpPecj4eCyCRLdjiy153wE/nnltGBOR/XlqyVAueWcEKtD
HVlqzwWYe2JK08dnHVlqzwV422nKleiIjiy15wI4tvIvxzV0ZKk9F2DEuN+5
n/p1Yqk9F+Dl750rjy7vxFJ7LoDxvU4HZRadWGrPBdDuu/WZiXMnltpzAXq+
Cethm9KJpfZcgOOvuFILQSeW2nPm7/dvYfUZoc1Se87Erbx9vsfXa7PUngvQ
d9yNxuMXtFlqzwXg76u72dVNm6X2XIANi+3/rP+pzVJ7LsDrYIflw4XaLLXn
AghnHG+yGabDUnsugMuTu82HVuuw1J4LYPJy7Pp4Cx2W2nMBEg+PkDo66rDU
nguwvr9mUWGUDkvtuQAvHBfEWtfosNSeC7Df/OV1my66LLXnAthpu5fkTNdl
qT0XYM+j+65nd+iy1J4LEHPC//mOy7ostecCrBOn3DrnrMtSey5Ax7i8DQlR
uiy15wImb1hbyCrXZak9F8ChfPuIv5p6LLXnAiR/nDbXcYQeS+05sx7Lrdcd
Zumx1J4LYLopyXPBPj2W2nMBMmzrYvpe0WOpPRfgr+6r6S32eiy158z+0MmO
Cvuqx1J7LkDNjdP/O5+mx1J7LoDeUMvt/ar0WGrPmflYd0H0WqbHUnsuwNZY
DaGwpz5L7bkAQXvcFo0fp89Sey6AYOMgrfEL9FlqzwUwKlkVy96gz1J7LsCJ
x03rru3XZ6k9F+DXjO1Ryeb6LLXnAgwcGvc8w1qfpfacea3t8erBI32W2nMB
Sk+95Ykd9VlqzwVovm1o1PejPkvtuQD7Kg+u/+urz1J7LsDDN39uGn/XZ6k9
F6Dwa93TExH6LLXnAtxdN+TZ+Dh9ltpzZj9OC9V9kKTPUnvO7JffAXWPU/VZ
as8FmPDowv2ZP/VZas8F+PZsl99l5rXac2Y/xPjcP5Smz1J7zsyPo11AS7I+
S+25AFk1p6cOSdBnqT1n+qM36CQ7Sp+l9lyAUZXfFp8I1WepPWccnjW75tFX
fZbacyE+XHDvsMdTn6X2XIhDQSOc8p31WeqAIETqyDsG2s/1WWrPhbhSUjiz
4bY+S+25ELdH3+t7z0qfpfZcCB+dtbOr/qfPUnsuxM8ntXs77NBnqT0Xom9A
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
kpCGTPJchty+61445GaS5zK8imF7ukZmkucyxE+ekZnjmUmey6B4f9/V8EUm
eS7Ds3veAd+vZZLnMjiMvul65FgmeS6D7/8mdFq0NZM8l+FKWsPVhYszyXMZ
9q6b535oQiZ5LsOWXb6DA/pkkucyfOZo3BqnkUmey/DudD/u3fxf5LkMUSzr
JZ39fpHnMqgOrJhffPcXec70/77raOG+X+S5DOvSy9buMfpFnsvQdMJMotfj
F3kug9gv3FqzPoM8l2GPdP2kJbEZ5LkMfXKdjZPfZpDnTHsTJqy0P59BnssQ
4bB3v9emDPJchrD854IOEzPIc2a9FnU95NYxgzyXYeu25g53/qaT5zJsejp1
jndYOnkuQ2Yf11197NPJc6a/70p/RVmmk+dyDDy3Ue6zIZ08lyP7vMHy4gnp
5LkcRSsMuq3VTifP5eh6ozpWXPGTPJdjeI+MnzVRP8lzObQexzj0dv5JnsuR
FvGfnfXln+S5HDajkseP2/mTPJfD0bkqo8ucn+S5HJ1G9BFO7fOTPJdj9K0N
vR5z08hzOc791+v12Kw08lyO+rLjmjK/NPJcjpUGf+L0nqaR53JsCTy1e8vp
NPJcjqgT9qzcDWnkuRzz+q7kPZmSRp7L4ab9m32jaxp5LkfBfr1Qn+Z/97fL
MeGuTnq3jH/3t8tR7fSf36cvqeS5HNF9/lRaPU0lz+WYvi6j9YpFKnkuh3Ju
2K7vxqnkuRz9pl/+PGZmKnkux+4vM46l9Eklz5n5mL5x+HthCnnO9H/iJROf
ghTyXI4gibNPQ1gKeS5HMqfs7R7nFPJcDtdzTmFKmxTyXI5B/Uxe5xxMIc/l
QF5JSuGKFPJcjvlbO/7tMSGFPJdj++SSUxe7pJDnzPxsdNTtwU4mz+XofvjO
6vycZPKc2R+re8SnByeT53II7kf05r1NJs/liJSNzVp5PZk8l2PABrF98uFk
+j6QHDsCGjUurkkmz+W45pDovW1qMnnOjHffjtn7eieT53Kcn2i28KU4iTyX
o2NgqamwJIk8lyNz7LVlt+OSyHM5Nvfte3fR5yTyXA79E+ZpI54mkedyyA8t
DzY8n0SeyxHrtbTl+J4k8lyOX/t1+qYvSSLP5ZiIwXm7xieR58z8p/Czu3dP
Is/lMLrUGNwiSCTP5bivWDxF+CeRPJfjxO3uJWPiE8lzOer09p655p1InrfN
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
9mWz7Sxbv5PnKmQNfL3+a8l3/B8B93Es
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd23VYVN33NnBEUbADUcHA7u6ae2zsDuzGxE7sbsVAsQu7UEFAukFEGqVr
6Jju+B3Y6/nO9b7881z3hc+ZffbeZ3/Wmhk6rt0xb4OpiYlJppmJSfV/FzXu
+/VRVTZM/p+fnP/l5IMl3QaaG/M7UcLMtU2N+fgW3723Whvzgny3B6G2xtxz
+fVgWQ9j1idVX9CYE7mrLRlpzG/Cpw+/OM6Yj2LoSp+pxjzPq/3ZsrnG3H2g
+Ye2S41Z+7Z6gMYc3ylddWyLMb/iRvdltzE7WX6aknvYmOdcvevY/LQxd617
8s6Ey8asPlZ9w8b8RzGfu2NjfrlzbP3UF8Z8qHr6PhjzrOrb/W7MnauH52vM
yurLhRrz75jqH2N+PslToksy5gP+T6z7ZxrzDG72VguMueOX3ZucK4xZ3qN6
QYz517PqCxrzU+5qXerm/i/vu9W6zqLGxjytoWnv81bG3IFbDa/2xizVVS+w
MUftrx6gMT+ues2tsDHv4UZ3BMZsl3u4ekX+l9stXT86e7Yxi6u33xJjjqje
LquN+WH18m4y5l3Vy7HTmCdXT99BY7apvt2TxiysHt5FYw6rvpyzMd93rf4x
5h3NTwdGPzPmiZe3FWneGnObOtVPmDFXHqne0MYcIqteEGO+51h9QWPezl1N
lGDM41cL4jqlG3Orf7HcDjTm8rnVD4gxB0VXL7Axu0yoHqAxb61+fOvk/S/z
qx+3hsbcsvrxsDTm0urt3NaYA6q3Xxdjvl29Xfoa8+bq5R1qzLzq5RhrzC2q
p2+SMRdX3+5MY/arHt4iY75ZfbmVxuywsfrHmMdkz+aeYGOuftoi9xtz9eyp
jhkzd7Pchjbm6tNq+XVjrt59V+8ac/XV/J8Yc83x+dqYa46/L8Zcc1x5GXPN
8RJozDXHQaQx1zy+ccZc87j9M2b2eBhzzXYuMeaa7Scy5prtojLmmuU1zf9f
rlmO+sZcM33Njbnmdq2NuWZ4nYy55nK9jXlwzY8xV5/O60cbc/XTdmeCMVfP
Xvh0Y+ZutnpD/y/X8LHcmGuO+/XGXHM8bzPmmuN0rzHXHH9HjLnmuDprzDXH
y1VjrjkO7hhzzeP7yJhrRudmzDWPxydjrtnOnsZcs/38jblmu4Qbc83yxhpz
zXKkGnPN9GUbc83tFhkz89uYay6nMGb2U/D/eW7MzHNjZp4bM/PcmJnnxsw8
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
nyNTOoB5XoIG+7SXlkfYgnleAn63S7cOv+sI5nkJ2j5drzhwuxOY5yVo/9Fv
8uKzncE8L0Hl4GfH2h7tAuZ5CUaECfcGO3UF87yEm78+aetOdgPzvARtHjpd
01/tDuZ5Cdbv8OM9eNYDzPMSbDqmuTXBtyeY5yVoumtyV9OsXmCel+CMw66t
eXX7gHlegvt9NngKh/UF87wE4leJnUc59gPzvATuMW3vxnzoD+Z5CdbJ2tsv
OzQAzPMS2LVNLqptOxDM8xLY/utXMCd6IJjnJfg26UbwgYODwDwvQWz3O4O2
9hoM5nkJGiqzRw3JGQzmeQlSlrUZkuE6BMzzUowO+hKxbfFQMM9LMX9ufGVV
62Fgnpfi6Ypzoh1Zw8A8L0W+RYONitfDwTwvRZ9T4wY47xsB5nkpAk7OOmk3
ZSSY56W4tHBRao92o8AAKUVx1hLdWMUoMM9LkbGpV4PbyaPBPC/F+PXnNwz3
GgPmeSlOLBvnP+TJWDDPS/H52WlL10s8MM9L0W5HP49dhwHmeSn8n79ot3E4
H8zzUmTH8OzSv/HBPC/FzZ25+58MGoefNZ6XYt9jdYX3t3G4UeN5KR42mGU9
aPh4bKjxvBRZjZc5N/Ebj1E1wJWitEFMs6WTJoB5XorYlpWn28RNAPO8FCn3
B6gXrpgI5nkp6og/uLeqmAjmeSkE7z2aOxyfBOZ5KayubnefYTkZzPNSPOmw
cVb8+8lgnpci6vekVN2kKWCel2LLsX0O6XlTwLZzKXI+JdvtOWUH5nkpzjV0
ksZ2mQrmeSn63drdQhk1FczzMjweefW4ctc0MM/LEDpq8MS0ttPBPC9DrYZ4
8jp6OpjnZWhmlVNrq9MMMM/L8NLubLP+/WeCeV4GW7c/b/SCmWCel0GfdeVv
wZNZYJ6XwX+IT3H58tlgnpfBITGij3PjOWCelyEvbepuu51zwDwvw4+SdN7z
xDlgnpehZTrv3csRc8E8L8O3nJulC5/MBfO8DIZlkgW+9eaBeV6GAYdarcza
NQ/M8zIMeae4H5w5D8xz7vq2B4N2TJ8P5nkZcje3flvuMx/M8zLsmPlmOr/P
AjDPy1BkZRq+68kCMM/LYO0YveSC5UIwz8sgKR66+fLlhWCel6HTiaSTp+os
AvO8DNss183fd3wRmOfc/Ax84bFVuwjM8zJkTBj5ZrvTYjDPyxC42Xn+ae1i
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
nksgnXqow+cyDXkuwSTJsW9PfbXkuQQNXn4+HHFbR55LkHf0itvavXryXIIr
3rd2fl1mIM8l+HaurcypqwmfeS6B/t5mh1HPTPjMcwkO8fmPh3asxWeeSzBE
stjjmlstPvNcgudThr3d2M+UzzyXcP3PoS5ZP035zHNufl/azLxoV5vPPJcg
32N6SsPC2nzmuQRm02LSx56sw2eeSzBojcp8ayczPvNcgskTL1r/jjTjM88l
cM+ZF3lkb10+81yCh/aTWt7oWo/PPJdgnKsuqk1GPT7znFvPc0s2fvAy5zPP
JegftbY4wt6CzzyX4N3pvvEC2/p85jk3fhuXisiK+nzmuYTr35t4tw1swGee
SxB6tEkdyd2GfOa5BGW9fBwG7mvEZ55LEHs2cMuPxY35zHMJWnav338pmvCZ
5xKMGX7RQ9SyKZ95LkH75Af9L1xrymeeS5Cod9lgZ9GMzzyXIKpoodT0XDM+
81yCodffep2o05zPPJdAuGv9slNnmvOZ5xIkyXeWBpi14DPPJWhjMvZ08fkW
fOY5N/+WI1s8r2/JZ55zz1PZ9MEXr1rymecShPfjdx7YtCWfeS7Bph+WpZ1v
tuQzzyWYeirkSV5zKz7zXIKS44cKBM5WfOa5FO0mZ69+2rgVn3kuxfK5l+4e
vNCKzzyXIruxv1mSvhWfeS7FKPf54ma7WvOZ51L07K1dey2rNZ95LsX4vI4f
X0xuw2eeS2EYqO784U0bPvNcCoeHzQ7XrmPNZ55LEXHKSmuxxJrPPJfC/eKm
uJEvrfnMcyl2zDVs/lNkzWeeSxEy+dqcSZ1s+MxzKfwP9To8Yb4Nn3kuxbUT
2WMHH7bhM8+lsHkw9+FrFxs+81wKs7LA1q/f2fCZ51Kk2Np7dPpkw2eeSzG3
0b2bg9/a8JnnUtgtW362/y0bPvNciuSBph7zDtnwmedSvLLKkEpn2fCZ51Lk
3Gzk6djKhs88lwLJD86OT7TmM8+lEDTp1mb+CWs+81wK34oFp691sOYzz6W4
VfHN+Y17Gz7zXIpY/qn+jiPa8JnnUtQ7OyZQ4NmazzyXwiT39HHfga357P1G
KZ6MWLck8F0rPvNciiVeXxaFdmvFZ55LYVleT/TwlRWfeS5Fhwf6VZJeVnzm
uRR66wOhed9a8pnnUpSK192dMq4ln3nOree6j5PzEyz5zHPu/h3aZe7YZMln
nkux37bd0De1LPnMc+7/T/zuP+NxCz7zXIoPhQsDOvNa8Jnn3HrGza1S5TTn
M8+lOGwR0eP5ueZ85rkUCyb8eW7avzmfeS5FaIuqoVH/mvGZ51J4zvwjrX2+
GZ95LkWD05GTzg9rxmeeS5E6P9J2RHFTPvNciks/xhXqHzTlM8+lKN7eqDB0
blM+85ybv7G/Lx+0aMpnnnPzNbFnrYbnmvCZ59zz0X3L/K/axnzmuRQ/3sY6
x+xvzGeeS/Fzx86x38Y15DPPpVjtu8s7eW8jPvNcCvu7mUlXlQ35zHMpLv4+
kjPleEM+81yKdL+VjiXmDfnMcyl68W8uX36nAZ95LoViYuvEi10a8JnnUtzp
L+i7wrM+n3kuxcMEhAVNq89nnkvxMSQBL3Mt2ONrKoPm1ogs0WELPvNchvUz
2z27Z2XBZ57LEJjsOvT8d3M+81yGebbNkz8sMOczz2VYc0ypUsrr8ZnnMpgd
7x6x/EE9PvNchrZPywyR4+rxmecyVMp7nOlXWpfPPJchzM9Cd/x2XT7zXIbn
2y3svfh1+cxzGcZcmnL3S6UZn3kuQ8ejM6fve2zGZ57LsCw9uVg024zPPJfh
X07ULevaZnzmuQxe0XEv83/U4TPPZQhaMrnOeMc6fOa5DI4ZG0J7davDZ55z
4xlw6faD7Np85rkMvcd6PDp4vzafeS5DWVJEV+9FtfnMcxm+3q9vudGyNp95
LoPrsd8/tiaa8pnnMtgHWrkF3TLlM8+5+++6KWH1QlM+81yGjS9TfMa0NuUz
z2UQ6TIWzc6oRZ5z87fq5Icbz2qR5zI027x1ocrhP89l+L26/YiT/f/zXAZ5
5KQD25Um5LkMb/JcMhOCTMhzGVoud79x7YoJeS7Dvu4XW89aYkKeyzD8W+CU
xlw9wTyXoaDDSK+jAgP15zL8cN5wIeKUgfpzbn7yZ58t6mig/lyG3aYVcxOC
9dSfy/Cp0v79kQ166s9leLTopiDdQk/9uQxzpoTsEnzWUX8uQ7tPtftdX6yj
/lyGz+239/5joqP+XIam5ltzH7zXUn8uw1bd1qWZi7XUn8vwUzx8kKeZlvpz
GRS2rUpE3zXUn8vQ/+GB4y4bNNSfy+C5Q/7gQSsN9ecy8MSPu6ui1dSfy3Bf
3W3c6+Nq6s9lGDJ1Cx4PVVN/LsOM5cM/pZSrqD+XwX355PlT3VTUn8twsNfR
DlUrVdSfc6/X/pMuuo2K+nMZtK+FCq9kJfXnMhyflJ7556aS+nMZHrxPOGmY
o6T+XIbHXkdl45oqqT+XQfc5wMY5TkH9uQwf5as7FTkrqD+XIyE8exVvgYL6
czm2tqzndLCVgvpzOfrHdumZnS6n/lyObyXLqiyfyak/l6PDth6TRjvIqT+X
4/SF3Dd2/eTUn8uRkrF0wgi5jPpzOSLOhKwxC5BRfy7H0OWma95fkFF/LsdK
J012V+65YZ7LccnwZO5O7lxgnsvht730xblSKfXncjjuyLi+/oeU+nM5pn9t
uLr2WSn153JcLG0+e/18KfXncoxOdulwspOU+nM5PFr8FNmLJdSfyyHb/v1V
PlfXMc/l+NBCNqP9bQn153Ic8Rnxpt5GCfXncti63H0dwfUNzHM5/i5z7Bvf
QEL9uRy/vLvv+5gtpv6cu16ngha9uL6SeS6H/FRQ0YSLYurP5Ui80NhSyfXx
zHM5Bk3U7p8wVEz9uRzn6gUe6NxQTP25HGcX5ja9ky+izw/l0H187Hznp4j6
czlaLD64tdNtEX2eKIfYOTJtxHYR9edyWJzUXEqZLKL+XI46WbdXaZ+VU38u
h6Wzc7dHGiH159x+6D9nf1CKkPpz7vWObJq27quQ+nM5Mp4f2HrimpD6czkm
3Rh1ymqrkPpzOXo4HbjR2U5I/Tk3nuk59m5dhdSfc/tv36BvrrWF1J/LMXhc
K6EupIr6czlmH9761O1kFfXncsw17fi6G7+K+nM5Opo2nHjUUEn9uRzL3q0+
7xZQSf25HLuqIrIenaik/lyOsXmK8lXjK6k/59Zn+92SojqV1J/LMXz93jND
IyuoP5cjLEKpm3ilgvpzOSTXXe815fpl5rkca2Py692xqqD+XA7Bt8XXEzPK
qT+X43zi2tSQF+XUn8vRYNKmRxu2llN/Lse05+YDPQeXU3/O/fu2V93ctWXU
n3PP3f59zgvDy6g/lyM4XDz8yY0y6s+53ydd9rq8rIz6c24/axJqteleRv25
ArftOosnSEqpP1dgRnPXtvUDS6k/V+Bq5fq+m6+WUn/O/b7tAJeVy0qpP1fg
zkWvusU9S6k/V+C8ZVGP2qoS6s8V8Bkee/RjZAn15wrMfXl1seBeCfXnClir
Y+SvN5dQf67A6bNTS8WjSqg/V2B3w73HwxqWUH+uwGQL0ci22cXUnyswddSd
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
NNxZ+jDLizzn1udc+3+WcV74P/f3UnE=
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
CVqKk1aia7cIzwPjnpDnbNwvNtBtWPOEPGdj465X3SLMn5DnbBwKvVWc6fyE
PGdjECd+3bTQJ+Q5G9O27umRVfiEPGejk8++Pz+0T8hzNtq5DdwpGONJnrMx
YEinjafWepLnbORf5lvOP+VJnrPRxr/AxtDNkzxnoyJw0IR3EZ7kORvbthxc
vK3SkzxnY0lG7NX1nZ+S52xww6MCH+k+Jc/ZWN9uudsEk6fkORtuK75qu954
Sp6zoSfrF77U/yl5zkbRgCLH+Myn5DkbksjRxi8VT8nz5vICKxJHPyPP2bjd
uqrL6vXPyHOmPZq6gMHnn5HnbHRM9Xm5zOsZec6G+a6fcVHJz8hzNvKOxrRx
kzwjz9kYelJnYfTI5+Q5G6ywQTvWrH9OnrNxMKLr8okXnpPnbGjvraw/5Pec
PGdji92YZYrM5+Q5G7/Wj13YqHlOnrPxLb0uY9GUF+R5FVxfGyobTF6Q51UY
/2LvV6XdC/K8Cgtt7LqeCH1Bnlchp9ZWrl/1gjyvgkO2jb1l35fkeRU2hGpj
2q94SZ5X4aDp7MjW516S51VoLf1957DvS/K8Ct3E4tlTc1+S51XYffQgf1qb
V+R5FYwM+HlKnVfkeRVOHeYUqWe/Is+rILJqdJmz4RV5XoVe+a+dfI6+Is+r
8N7644nVN16R51X4kvc2YszTV+R5FepXLh22IOQVeV6FkhkLp95Jf0WeV8H7
5UX7rnWvyPMq3Chsk5nS1os8r0L13O7v4od7kedVSO/W8ataz4s8r8L84ld+
lsZe5HkVfB2zBg0740WeV+GsrO5XJ0cv8rwK7W0er5v1zos8Z/qbwDZ7GudF
njP1/bcnY1mlF3lehYeJ6pmTWnmT50z9n9YZbh7qTZ5XYXHKvpzvet7kOQd5
5jUOR3d4k+fM8bjFM42tvclzDvpwj9+zd/UmzzmQ2+nu1H72Js85GN9vtNn3
TG/ynINeja9u/+B5k+cc7PJuvNi+pw95zsG1VfN13Kf7kOccfGh8q3dqow95
zsGc/eZBLpY+5DkHQUPjjLUPfchzDkY79ekSFuRDnnNgebvyw7dMH/KcgxO1
mlFdhD7o1RJQOcj5fd7Iv68vOC2ec+B4Lmy021xf8pwDlxUP7LJ2+JLnHMyc
tMhi3yVf8pwDU7ZjyqIXvuQ5B+93lnha/PIlzzkYsmZcroDtS55z8GjB4EvJ
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
7Nrvp+Kz8eR5A96b3JhjFhZPnjPlXZu5+YcynjxvwBxRYy5vSQJ53oA3v/Z5
trdLIM+Z841XWbRKSyDPmc8PVfZl9UskzxvQpZS38s3eRPK8AcH3DN9vf5tI
njfgShtLjkCQSJ434PMJz9sXFyeR5w0I87zbjXcviTxvQIruMNHW/CTyvAEr
8nt6vRuXTJ43YPyAAHOBVTJ5zvR/+T3fqXHJ5HkDvpWduLFnQAp53oAB0W10
bY+nkOcNaGVanPEyIoU8b4DjhaWWwT1TyXPm84PndPltmkqeN2Cju6Vr4vdU
8rwBie3N6pN7p5HnDYi5f7Y80SyNPG/A4S2Z82Oi08jzBpj2qPX9PjSdPG/A
8AqrpCCbdPK8EQNM4uGbk06eN+Lg0NsGyQMzyPNGzD6wvn/MqgzyvBFfmz7G
LjyfQZ43Qr3Y9lG7txnkeSN62Ey/czU/gzxvBP+2UcH5TpnkeSO+L/AM4utl
kueNsOaFew47mUmeN+JS0aU/T15kkueNCNKci3ucmUmeN8Jbft2yd7ss8rwR
B35m5fZYkEWeN2LHSa+d98yzyPNG3Pz9vtNd7yzyvBGLJnYw75ifRZ434sOo
ogsdu2eT541YMWztqLsrssnzRiw+Gb7t3qVs8rwR2tsD/+v6JZs8b8TvfXN6
dK/PJs8bobmsPOY0Ooc8b0Sr21Fil9055Hkjtg+++7SfWw553ojiiHUYmJFD
njci7ua8WM/OueR5I2Iv1vZ8vjKXPG/E7Qdf2g2/kUueM/37lnlnxI9c8rwR
Ok7e573kueR5Ixyii757zc0jz5sQlvl93shzeeR5E261Xvh9+Oc88rwJfVj+
Js95eeR5E06KLlc8mf6HPG/CsIMFi/pZ/iHPmxDkMmNbj49/yPMmeBbu7WPP
/UOeN+ETJ/bwtRn55HkTVqoOzROfzifPm9BrYM3F2i/55HkTPBS/R+yW5JPn
Tdg7c86Q9QsKyPMmiOfuPBhxuYA8b0LZ2xl1/lEF5HkTlMkv3/drV0ieN8F5
y0Vf7ZpC8pzpr/vVtKMPC8nzJlgYbp24IbeQPG+CT4ZdyGedIvK8CR8W2lo9
PliEHi0Bugm1U2+bS/yLwG7xvAksu8c+ufwi8rwJ2hk2w2fpFZPnTdCrf17X
3baYPG9C0b4+PY+nFJPnTH/PWzxb2r+EPG/Chv7fnnvsLyHPmf4b7R9tEVBC
njdBPbfP4t+SEvK8Cbn6wVrXZaXkeRO6HdK7xHEsJc+5ODHbPSa0qJQ85+KH
iyev3cQy8pyLRtvcvjnWZeQ5F0sMq1ohtow85+J81KWMtp1Z5DkXrTpOjfHX
ZZHnXMx6aWnmaMIiz7l4qdmR9fkGizznoqduly4D3rHIcy5eV3jGfMpikefM
+Qt8zd2ULPKcC4X/Btm3MeXkORc5dztbDt9QTp5zweY1FUWfLyfPuegl8l/9
1qucPOfC7ul/OW8Ty8lzLnQEn7nTJeXkORftHr96lDOigjznoiTPc+9Xwwry
nIshc55sL7WuIM+5sKoOvLXcu4I85+LtHUldTWoFec5F9L0rjmnyCvKcizDv
6WdEYyvJc2a8qn+579xcSZ5z0aH2ubbVtUrynAvLVylvqwMqyXMubOeVO3Uv
qCTPmfrCKr9YtWeT51x4uul3HTqbTZ5zMW6sp0vbg2zynIeQMvaiKU5s2u88
rPAa3sY1kk2+8yALN87Vb2TT/uehdaW93+ghVeQ9DxvHOB80NKyieMCD+72e
8s8Xq8h/HmrSt2/Z+a6K4gMPxpWbTJYWVlE+wMNU42O8o505FC94ePHRWpmq
x6H8gIeFr/13nj3BofjBg+tS8/rtzziUL/Bwu3Kr/aVUDsUTHmL123Yq1XAo
f+Bh/diBy67NqKb4wsOjUz3a7TtYTfkED0aes0Zcca2meMNDyukbewviqim/
4OFnoLPdWXk1xR8eEi7c2Gc4pYbyDR7iqgtf799XQ/GIB7XZlcFfXGoo/+DB
Qu/O2WVxNRSfeEj8PP9od0UN5SM8iIM4r/tPq0VLuDrCA6c2v2znwVrKT3g4
sGTe90K3WrSEGwseluvwSx4n11K+wrQ30q/GoVUdfX/Iw953989HMNdJf/MX
HvoLYh37nqij7xN5MOT8DAl9VUf5DA/tDn0/4JJXR/cjmfJsho5+07We8hse
3DyeD+nO5Nl/70/yoL9I5OJ6oZ7yHR54HtyNm4Pq6X4lDz2q9RMNmLzyb/7D
w+Z2ATethzXQ/Use8qTX0vO2NVA+xEPYpJyaIw8a6PqHGZ92K27OiG2g/IiH
koHzc6Yyecjf6yEeHt4KnLV3TiPlSzx8MqriRpk3UjzlYWDOis3bXjdS/sRD
5ea1LwaXNVJ85WG24kyvngObKJ/iYe3Q8ZWzjZoo3jLrNcVvhf29JsqvePBP
5O3vFNNE8ZeHbXnhu8PUTZRvMfN1eq2x8zwuxWMe2OqLpm6nuZR/8VC+w+1p
bACX4jMPbQTr2gzjcCkf46F0mtGmjcw++huvedg132K+D7PO/+ZnzPo6t2BO
Z0MexW8eFvy5Fml7jEf5Gg+Z2e6re9zhUTxnyh+2c8V7Zlz/5m/MeRGDh+/8
xaP4zkexlfeygWU8yuf4ePZkQj+Oikfxno95k9bLfw/mU37Hx9QTfTYEzudT
/Odj2p9iizfGfMr3+Mi+efjLh3N88oCP7txvllEufMr/+Fi4aZmoNIhPPvBR
ty7gQcd0PuWDfOxdILi1sJFPXvAhy9o9/GIXAeWHfJy9bvMiaqKA/OBjxuBB
S3qsFlC+yIcLdiw2PSIgT/i4sfBx+q9bAsof+Rh9y2rcGB8B+cL0P7rqtMMv
AeWTfFx7pFMiKROQN3zExbo/NNUIKL/kg7Nn4oe8IULyh49xU/nb1ugLKd/k
Q2/okdcRJkLyiGnfpJ1h022ElH/y4dCz1QsvNyH5xEfXz/wTvUKElI/ykTBn
3vSr2ULyio/Aqg0CDl9I+SlTf+qciLU9ReQXH71HnHZ6O01E+Sofh/YOtNSu
E5FnfOzaxNq64YSI8lc+amLG6bveFZFvfOwYrR2Q8UZE+Swfs73sfM3SReQd
HxE7na6MZYsov+XD9KlNxcLWYvKPD5/bpyQrR4gp3+WjYxPvJRaLyUOm/o86
Vsa7xZT/8nFmifiw7kUx+chH9IG3G+XuYsqH+TgRGf/VKkRMXvIxpdfYk72y
xZQf89HjfAeWG09MfvIRedvGStFNQvkyUx4r//LGyRLylI+nevPUj1dLKH/m
Y7z7PN9QUwn5yse6MXoDv9+UUD7Nh19a31HeLyXkLR9fDeLszSIklF/zcTrS
pVefAgn5y0ebiyOve4ollG/z8XDmUzdtLyl5zEeqQWK/pdOklH/z4RE258ee
tVLymQ9evaHh1iNSysf5cF1w8crom1Lymo9ZU7f2THoupfycj/OOIT8NvkrJ
bz42DeYYeORIKV/nI7/px/4fXCl5LsBr76T44M4y8lyAhP+s5l4ZKyPPBfA6
Pv5ovyUy8lyAkT/O9b28U0aeC2BaC/nHczLyXIBAYWXGR0cZeS5Akd3u7Rff
yshzAZZqLdZ0/y0jzwXwz8s+bFYkI88FmHBv/7EHIhl5LsB/qbp9rbvJyXMB
fPvkTRw9Tk6eC7DE1Obko8Vy8lyAI2ZdvGKN5eS5AI8+nHMMt5CT5wLwW4er
ze7IyXMB7LuM/lb0XE6eC5CWYOPcKUROngtQM3voVmGynDwXYF7Oklz3Cjl5
LsCk2V3rxTI5eS6A3bpki649FOS5AGGhAxcVjlGQ5wLcCOo4d6+egjxnxqN0
yyL3jQq6/hCg7NcNvVuHFeS5AOmFvQeNuaCg6xEBRpi+S7B6oCDPBSgImLfI
xktBngvwlT3MclKIgjwX4MO9A7scEhTkuQDXpsS18SxSkOcCNPppLbY1Kchz
AXzCs99GtFKS5wK8US75ndZbSZ4L4NjfN/PeGCV5LsB1FAu4c5TkuQBr+Rar
1AZK8pzpb8Y7yaftSvJcgDEhiVO7HVOS5wJYpPca0d1GSZ4L4FIibh9spyTP
BYg9NnuUxk1JnguwTysOq/dTkucCHD1Y1/dysJI8Z+bn2eH7gb+V5LkAHImV
zc0MJXkuQH58Bz1piZI8F8C9g2h+13olec6MV8AQdpRUSZ4LcPHrjU9926rI
cybOdzIe1qGnijwXYMbH3h/ddVTkuQDP293lxo5TkecCbDYUnnHWVZHnAjzI
bpMj11eR5wJYRQqCNStV5LkAxpf+WKs3qchzAQ47hCZhp4o8Z/abcMp3nUMq
8lyA/WaOjRPMVOS5AHoXzAvmnVGR50z9lnM7vr6gIs+FeDJif3DddRV5LkT5
rGzXdvYq8pxxaf3zw9ccVeS5ENJWMR8fuarIc8YdQV/zZZ4q8lyI8N89nzq8
VJHnzOeL2bD0VZHnQrz5deh441sVec4cs5VT2n9QkedC9Bz64c3XIBV5LkTX
Typ1h2AVeS7EpvY1u/ihKvJciABtrsjqq4o8F2J0L7s2bt9V5LkQw/q2TTL6
oSLPhXhe5eDsH6kiz4XolX/t3fOfKvJciKFtNp6cFqUiz4WYcGn/nN3M8V/P
hbC6qDIbzxz/9VwIye3ZF5yY8/96LkSqW1KWO1P+X8+FeLh5AH8RU/9fz4X4
tZO7xZZp31/PhRBF2N04xrT/r+dCODuYtG9i+vfXcyHGvW1r1Zfp/1/PhaiM
0z1SzIzPX8+FmPnlrI0BM35/PReiX8n4TVv8VeS5EDZzjd3b+KnIcyEGHHNS
b3+lIs+FKDucMc/oqYo8F6LxoHEr3mMVeS7EuaV3+s9xUpHnQgQdjFk88p6K
PBdi1n+bl4XYqshzITI7TOTyL6vIcyFGnPszIN9KRZ4Lsd9w56NjFirynClv
omyh7xEVec7Ud05H5LBXRZ4LcWz+lGcjjFXkuRChEceHHFqvIs+FOJsTvW/r
ChV5LsRq2ZetYj0VeS5Ewsz+jQbMfvvruRCrav8btna8ijwXIuq+d5l2iIo8
Z+Z/Uc+px3uryHMhbplNaGvXQUWeC/Ht2hHTnSolec6Mr1fEFjZPSZ4Lkfjg
ZM7YKiV5zoz3G1bT8AIleS5E9Nzb77NTlOQ503++18BlUUrynMnrkmYtOflF
SZ4LETgkXnfLayV5LkR+ePttMg8leS7E/BTt8N0OSvJcCDXPtPraFSV5LoLL
ioXvDlsqyXMR9EJCvbocUJLnIsTEvs202qwkz0WwHHN8o+9yJXkuQlZ17AyP
2UryXIQNcZUOm8cqyXMRXpQNPZ/TT0mei2A1hNNxeHsleS7Cgwmvt8+SKMhz
EaZ09rrQm6Mgz5n27Mq99SNXQZ4zeec4luOcWAV5LoL8OOv9pWAFeS7CytW7
hE4+CvJchHmlI6ytXRTkuQiCZN3VU28oyHMmzz3hdynUUkGei7AlzGlkn70K
8lyEM5zGNSvWKchzEWaF3WpjyHj813MRHE9n75owQUGeizD3mWxvSb9/njP1
HXk+4ESbf56L8CGR5ZjFk5PnIqyOdn5dVConz0X40jqpUsrkD389F+G+s3j1
KSc5ec7kzcGzR1f7yslzETZvbxz90llO9xtFyLTd0nfeVTl5LoLnpztNH83k
5LkIaaetH4/fLifPRTDq8Gzp4eVy8lyEpLs3vW5Nl5PnIvSZ8OntXR05ec7U
N9p09bkOcvJcBPuY25YrhTLyXASnao/OmlIZeS5CzcDwNi+TZOS5CEsM7iyb
GCojz5n1oh37/rmXjDxn6jeYMVp9X0aeM/3nB9ittpGR5yJ0edQu7PohGXku
Qpi4w/3XG2TkuQiThuWWflsgI89FOP6n7FbkGBl5zhzHV2363ENGnotwuFNd
b3eFlDwXwWL9DA/zKil5LoLtxfkBczOk5LkIbbK+9RF+k5LnIjQ4+7r5+EnJ
cxHG9O0nWe0kJc9FWHBsF7/yopQ8F+GAqWiFlamUPGfKj/fwVm+UkuciFD5f
U3JFT0qeM/1JXewqGSMlz0Xo2XDQ+lgPKXnO7J8w69k5cgl5LkKy9/sLemwJ
eS7CJ1O/pqdpEvJcjPkjZi6Qh0vIczHidYxVm30k5LkY70pX5/s/kJDnYvRw
tDHTnJeQ52JMfXZ/vdFBCXkuxrSfxwb5rJOQ52JYTJtxSDRXQp6LkTtqzY+V
IyXkuRjtPPaHuXeRkOdisNdalNaJxeS5GAnC8AiwxOS5GHbhhQVuSWLynLnO
y4n9xgsWk+divLdKLF//Ukyei3Eq1i0t8K6YPBfj+jgDTZ9zYvJcjJ9Pdtdf
2Ssmz8WYuSa+a+NqMXkuxs11k8sOMPX89VyMYPND6cVDxeS5GAt0Mtfv7Sgm
z8UwHbA/gSMQkedMvRn331kz8/7XczH4GWZ7ujPr6q/nYhxbFbAq8LOIPBfj
krdPqvFzEXnO1LNkq1FHexF5LsbCGZYzo8/8uz4XY+N/+9Ls9vy7PhdD5r3+
uvHqf9fnYjhunOw1fda/63MxOtiG2PUZ9u/6XIwc5RX71p3+XZ+LMSGGL1Yx
bvz1XIwuy/ePaMO49NdzMc5taW3cj3Hvr+diKPb/VzkrREieM/23v9pr3ysh
eS7G1+9PJro7CMlzMQbU2JwuthaS52LMG7px6vSDQvJcjOTgQy8frheS52J8
vDCoo2a+kDwXY3mq2O/iGCF5zqyPpDch7XoKyXMx1h7tcealUkCei1H3YEXf
1dUC8pypf96LbG2WgDwX4/HFr1VxkQLyXIzWT69fff5OQJ6L4d55Zoatm4A8
F6PtsaNdLt4UkOdijDg7ZN915rrqr+fMOpKFyNyY67a/noux5XPHtpEGAvKc
WXcj9weIZwrIczFqTG4PWDxcQJ6L4R0Va+neRUCeM/sgRl7wn4xPnjPzaetw
8QqbT56LkXX0yrnOmXzyXIwhX07Vvv3BJ88lKNYEyHe845PnErTWG/lppDuf
PJdgsUnpYrEtnzyXYGngmm+Fp/jkuQRaHenozD188lyCSz1fZhau5ZPnElxp
a/tDMo9PnkuwvM5bO2YsnzyXID0mLdC0N588l+DAhfescC2PPGfiyPMf/sMa
eeQ5075lpkPdC3nkuQQTbC4sHZrAI88lOObe+9L3EB55LkGs8blHJ3145LkE
hnFHnsxw5pHnEnzaFbSj4zUeeS6Bpzpvh+AkjzyXoNeyiebcnTzyXILwZ59e
aVfzyHMJose4qkfN45HnEsS96fPAZCyPPJeg4zu37T59eOS5BEO3vj/cqjWP
PJegy7NR1uUsLnkugX6P479qfnDJcwmelZwP6f+US55LMHlc710nbLjkuQQa
80tfOdu45LkE619cz7OfxSXPJfAuvR5q1ItL3ydK4LHWevdSbhN5zsTlW5rE
7alN5LkEn0cd0roGNJHnEjy6vEekvdtEnkvglTq48N6xJvJcgk3BXlcXrmoi
z5n1cLlLSd9xTeS5BD5fVnL7tGsizyVQfh1+fD67kTyXwJG1KP5WdCN5LsGY
/T+jpN6N5DkzHt7zDZ1vNpLnElhsmL/L6OC/++0SnLfbwJ637N/9dglSO/ct
WDHq3/12Zn50dSfbtP53v12CfbmHkzMrGshzCWY5/xe1JrqBPGfOX/ggj+vT
QJ5LwDsa1TXiVgN5LsGChs6bAk0byHMJHuaGVsQbNJDnEpiG3fqv/YQG8lyC
hlBd3vFODeQ58374oCfCunryXIJu2ooq75R68pxx7o3tz/OB9eS5BFs6rep+
xqmePJfgqTTrq/OZevJcgl/cKf55W+vJcwl6TPj5e8m8evKcef/Onob0QfXk
uRQ119Z2uaWqI8+lyC/Qb7unrI48l+KIyb7vO3/XkedSnNy2r+8VvzryXIrk
mUcF0fZ15LkURgnj508/WUeeSxERUBQfubGOPGfylqOGtmdm1ZHnUvz3JNNw
7YA68lyKwcq9rQ2UteS5FAnGV+1My2rJcyni9u/4/ja6ljyXIvx62JUeb2vJ
cynEN7sEPrlfS55LUTLHfPKq07XkuRRSvlfOAONa8lyKBd2H23fRryXPpUhH
tzGjRtSS51JYcgzv7GpXS55Lkbvi3P2wuhryXIpdr4v7zM2oIc+lMDz9VJ4X
UkOeM3nbuHuDPZ/WkOdS3Nu0esu1GzXkuRRXdy2+fudoDXkuxfSDr658XF9D
nkvhyj41XjGrhjyXosnC1uTI4BryXIpeM65xha1qyHMpQq6Wx3hXV5PnUnSW
7/5yJq2aPJeCv3uE56GQavKcyTsbS42snlWT58z8vxoR8sa2mjyXwvOM8IXC
rJo8Z+ZjVYc6883V5LkUxhsEp/7TqybPpdjbb1b3kJHV5LkUiR4zn9l3qibP
mf7DQHyJzyHPmfNTPwkdCzjkuRSXV/mf/vWLQ55L4Z+6eU2fdxzyXIrdRxK2
3nLhkOdSuBTHXeh7iUOeS7EsY+Dl6EMc8lwK20T9Jc7rOOS5FJGHJr+6ModD
nkuhY1FmZT+MQ55L8ezs+qefOnDIcyl6LDCrk/GqyHMpbGZMXrS3sIo8l6K0
ws68PLqKPGfGb+OlbTc/VJHnzP5a3i59iXsVeS5FH7/JwUNuVJHnUtwMVZb2
O1FFnkvxZ7PDxCnbqshzKeqGKsz3oYo8l8Ljw5k7HydWkedSLH83ef2QvlXk
OXM+59gzP82/789lyDt1eYNh7b/vz2WY6BG/qFvOv+/PZTjF/b6iPvLf9+cy
GK0oXlTlzybPZQhw+tFG6comz2Xoz+5wesp1Nnkug73B+f0XTrDJcxnCHhW/
Lzdmk+dM/RuH6ZouY5PnMuy0WpDQZhqbPJfh8sJl638MYpPnMgiKDj91bscm
z2VIWc55cJ1fSZ7LEJI5ptW9kkryXIbXWo/UD4mV5LkMu7vmZdaHVJLnMmx7
ca9muXcleS6Dav+NxhDHSvJcBudnXhFLL1WS5zKcTeDqVh+tJM9luDLQceLr
rZXkuQy8tj+uXV1aSZ7LEJpa1PPUtEryXAYL2bGvF3UqyXMZOiW1Nn7RsZI8
l+Hk96PRheIK8lyGnFrr0umVFeS5DHduzrj1PKOCPJfh0KRQ59GRFeQ5c517
wJD9K6CCPJdhAmubic2TCvJchsWSPWkGdhXkuQz9SruPnGpVQb8XkiGr17zp
kw9VkOcyfPFMyFtiVEG/H5IheneB2BwV5LkM2/f5mH2eWkGey5DU63af7kMq
yHMZGu7/l369cwV5LsP6/NjcjvJy8lyGM/YrZ/tXl5PnMrTfV/9wf145eS7D
spq7utNiy8lzGYLaD1zaO7icPJehvvfIF119yslzGUw3b58w1KWcPJehkfvo
5/Ib5eS5DGu4ecuvnyonz2UI1ln1OGtfOXnOXLfzdV31NpaT5zIMv9NlZPji
cvKcmR9TiyGG08rJcxk+H+mzRjK0nDyXYbbzyfQv3crJcxnGR+RX3FazyHMZ
Ok5/amreyCLPZXAyvvv1eAmLPJchX6H9eTGVRZ7LsGKr7c5XP1jkuQyW/X+a
FX5gkecyCG3uZE14wSLPZXiyOOesgyOLPJfh3LekGa2vschzOW5kf6m/b8ki
z+Uw+LbYuutZFnkux2BTw6qSTSzyXI5rbltqfZayyHM55mb9Z31lJos8l+Nh
samF2WgWeS7H1VZhIWZ9WeS5HJoOW6dfbcciz+WIOHLnyprGMvJcjsg9hx9G
pJeR53Ikd2/Yte1zGXkuR3f9/gF9HpeR53KYTZ+0Unq+jDyXo9Tvh0C7s4w8
l+PZub6sufpl5LkcPdq0fWszrIw8Z9rbhr1W0raMPJfjXnyXuQNrS8lzOcJC
t4UXpJSS53Lk6ORWRgaVkudyuNdw2fNdS8lzOVIyRtkftCklz+UQT00y+bi7
lDyXw9jLduzwpaXkuRxZBxeEfRpbSp7LMbzLqKIjnUvJc6b/u6P2LOaWkOdy
7O1S2WV+Tgl5LsftG76ft3wtIc/lmOZnNtz5RQl5Lke3p5zhPNsS8lyOnvZ9
b546XkKey7Fws37f3htLyHM5Pu5r8M2ZXUKey9FrW5s24YNLyHM5dmX5qb+3
KiHP5ZBMW36YxSkmz+U4MNu1/djUYvJcjjX5nsF3vxST53JMEXst7u5ZTJ4z
66/1IqvP14vJczkeJa+aaH20mDyXgz2WM9lkQzF5Lsfa17Ybds0pJs/liNmW
ffDykGLynFkfpul6EW2KyXM5qsvC3w6uLyLP5di2b8A196wi8lwOu+/hTjO/
FZHncmRGBAXVexWR53KYpOz4/PtuEXkux3++G4+HnS4iz5n1prbxTzQpIs/l
GL1cbSBfWkSey/FNb01/g0lF5DnT/7BuDR97F5HnchxegedzlYXkuRyJOf20
BZWF5Lkc+y26Vj9JKSTP5ej0hzXJOqSQPGfW89JHryxeFJLncnAkpsNs7QrJ
cwV6dyi5+OVUIXmugAX3x32tSSF5rsDr1T0mH11eSJ4rMOT0wKl1UwrJcwXk
8w6Y2fcvJM8ViLX79G1pq0LyXIF5vXpJ+tUVkOcKOInjRG1zCshzBcadNnnY
PbKAPFcg8PaDFzPfFpDnCjz2PaI85VJAnisw12TctcTLBeS5AqOEhm0WHi0g
zxUwmOF6IMGogDxnjqtlZy0WFpDnCjh/Cuo7bXwBea5A/uNpwzr0LiDPmfI/
jzwhV+WT5wqEcs7lta3593tcBXyubdCfmJ1PniuwiNXD6kjkv9/nKjBs6rZ9
Ef755LkCc6Si3EmP//1eV4H9HG3wp+v55LkCboej8jedzCfPFUhf/W1oxx35
5LkCZ26+2/9neT55rsDFmDtXI6fnk+cKLNS9svWHTj55roCknehndod88lyB
CIO7L/4T/SHPFbhi1jvNgPWHPGfa0+HZFJ+UP+S5AkeHle4QhP8hzxXIGDkr
45LfH/KcmZ85Ay+NcvlDnisw0T88tODqH/p9sAI71456+ObEH/Kcmb8BJmyH
HX/o98JM+d/qvgSu/EOeK3C402Xuz5l/yHMFuvYyn1o9/A95rsCX+ZsODO32
hzxXYMM18yWnFHnkOdO/zPPx+dV55DkzP7JJf4xz88hzBcR7rTbV/c4jz5nx
+XW+76OgPPJcgTXlt9oavcgjzxXwnD6y9Zj7eeQ5s75sW3O7XMwjzxVoG9/j
Q8djeeS5Asff7x822DiPPFfAZveisUtW5JHnzPmThvlenJlHnivwckXAlcQR
eeS5Am3MIlyn9MgjzxXY4rkjxUedS54r8DMppMP0hlzynNmfT+ZPSivMJc+Z
8fvv3IAbibnkuQKy7hO/rArPJc8VMHM1KB/5Jpc8V6JvWc3tHm655LkSQSdN
bve8nUueK6Hv1T1mzLlc8lwJ8eWAcesO5ZLnSrTbonW+szmXPFdi5PV29dlL
c8lzJRpHVvWfrZtLnitxJo2neD0ilzxXYvy615en9Mwlz5UYuzbwRow2hzxX
QjawmGvBzSHPlbh3aOqHyWU55LkSH2oSXyrScshzJTJntwksiswhz5Uw3L01
Mi0whzxXIjLkQFj2ixzyXIm5j2XX6hxzyHMlFnbooe19LYc8VyL6frTOessc
8lwJdd7uHx77cshzJYS2a5LFG3PIcyXmFw2fenhJDnmuxAyH50mVM3LIcyVu
HHnjcG5kDnmuxLhRa3b0751Dnivxqk/IwMTWOeQ5Uz93ech9YTZ5rsS7u+f6
H2Bnk+dMe13qxxjkZpPnSgi2n03Uj8smz5XobadsWBqWTZ4rManOw2bH22zy
XAmdybe3XXuSTZ4rYeA6zDz0XjZ5rsSerOq36kv/nvdQYn2onWCreTZ5rsQv
acKsiL3/nv9Qolj6xHjWpmzyXInjt7qu/Lb03/MgSmx+uq1206xs8lyJF9NS
p0rH/Hs+RImHNY2q9/2zyXMldvC2Lj3T8d/zIkq0/virykCRRZ4rUebaL3dS
QxZ5rsTwsi2KoaVZ5LkS3D1eS0ZkZJHnSrD0VjzS/Z1Fnivx6adPiVFwFnmu
xMGhq7vceJ1FniuRMquww0+PLPJcia0mo392ccgiz5nxH91t6NErWeQ5M57T
vLplWmaR50okcDpeWXMwizxXwnPLg+0ZW7PIcyWUJW53TVdlkedM+UM+aDvq
ZZHnSpx8Zv3625Qs8lwJzodws4vDs8hzZjynbl+wuncWec7sr41btaPbZZHn
KjSezPDvJsskz1WYm9ZpXLv6TPJcBen53Qc6l2aS5yp8kC5dMzQzkzxX4f0M
o+RFMZnkuQrWExfnngjLJM9VOFhQsPXNu0zyXIXnkl7zec8zyXMVrsfwTho4
Z5LnKkyveFbufyuTPFfBe5DJrcE2meS5ClXTbi33OJFJnquQ8tGj2+h9meS5
CpnRUzK/bc4kz1W4oOJf3meQSZ6rkDw2RNtTL5M8V+HAgL2r06dmkudMe25z
V3qOzCTPVUjIulN9ul8mea6CvHzXEONOmeS5CvNqorIN1BnkOdN/jFIv52eQ
5yrsW9Defn1VBnmuwn5B18OHCjLIcxVGj+Vdv52aQZ6rsFxzM+3LrwzyXIXj
vE8Lm0IyyHMVHOxvfp/9LoM8V+Hrsj76di8yyHMV6vY+DahyySDPVTgaaqbe
aJdBnjPj61w7Iu5SBnmuQvvLHu1Xn8ogz1U4Nqzny9zDGeS5ClN6/VdkYZJB
nqswJGRWQJ8NGeS5CoM627eKWZZBnquw9444+dq8DPJchUlN9zQGUzLIcxU8
JlvcHTQygzxXoXJc8R5pvwx6HkiFmBcTzFmdM8hzFbxaXzby16aT58z7d/Xa
vq1NJ89VyN8csrrni3TyXIXAvjv9q3+kk+dM/9wTi4+/SSfPmf6dmzSH65lO
nqug4zthleHldPKcGf8MbVTKkXTyXIXonX9Uh4zSyXMV+vVcfiZzYTp53vw7
oJ2zH41PJ8+Z9vl57FnTO508VyEkac/2Oeo08lyFu7whi+fW/HveUIUtQztI
DbPTyHMVQndbH7WO/Pf8IbNfLjSeC/FPI8+Z9oQPaNfp8b/nEVVY9ShBfep6
GnmuwuwzyhWNJ9LIcxW6mGVHXdmeRp6rMV/quX3U8jTyXA2bb9Hcwmlp5Lka
s+ZyLN8MTiPP1Sh0+BVp1z6NPFdjsJ5+9CVBKnmuRp+ivYdtS1PJczVMK/fc
fZGUSp6rYXLg4aDU0FTyXI23EZaq7j6p5LkajtavBh1+mEqeq3GirnpHyqVU
8lyN+911vVcdSyXP1QiZ41CSuzWVPFfjS8ZEofXSVPJcjTczDidPmpZKnqtx
dU3IBv7gVPJcDcm576ZJHVLJczUy5syXh4hSyHOmPGUPwZfyFPJcjQnVaxbE
pKWQ52rMc+wRzvmeQp6rMfLX++06/inkOTNeGx/+d9AthTxX40K6wctvtink
uRrW+28NHns6hTxXo/rc4D1ee1PIczUuu6s2TV+XQp6rYTcTrLQFKeS5GpHb
B4ivjU8hz9VQ2xVeWNYvhTxXI++SZkf/NinkuRrjGwZeUfKSyXM1ju4qy+CX
JpPnaihKx0Gekkyeq7G5tvJzr+/J5Lkaw/pOGqDvn0yeqzG8fvJ2K/dk8lzN
XH/q7Y26nUyeq5G/Jm7AkHPJ5LkacxN3W9ofTCbPmfovv9vUziiZPGfa53Hh
jQuSyXOmvq6f982Ylkyeq2G0ycS0dEgyec6UN8vF91mXZPJcjS5vn3U6oUgi
z9UIe5x7fU1tEnmuRp1fqGRefhJ5zhz3zds+Nz6JPGfW/w2O04rQJPJcjbM/
Qh0P+iWR52q4vtBd7OSaRJ6rwUvfcz/VNok8V+OMz54jg88mkedqrGRbfLU+
mESeq6HjX3emwiiJPFdj9/iV1/csTSLP1TC40y29ekYSec6073Pjuhsjkshz
NQbMflc9sWcSea5Gb+3IB+XaRPJcjUPrNkx+y00kzzVYaL4s6EpZInmuQXev
yZ0PpieS5xp41W8av+1nInmuwaX63hLjj4nkuQY+QfWHj75MJM81CHxkcfDO
w0TyXIPV3VaXfLmWSJ5rUPBgUQzXMpE81yBu29T2evsTyXMNAtZ3d3HZlEie
azC5jGssX5JInmvATpUvt9BNJM81iO15cjV/ZCJ5rsGNgBdbbvZOJM+ZY/v/
to1sk0iea5CzecjCNGECea6B7yZHmT07gTzXwHtR94tGuf+eh9egfKxZ0Pi4
BPJcg4Qldg5dwv49H6/BlpQDStWbBPJcg101XXlKj3/Py2uw/sxnk473Eshz
DdJYLhNGXUogz5n2D2+3fs3JBPKc+fxJ67ArexLIcw3G6Zrt+LkhgTzX4E/F
hRHdlySQ5xrYFW9tZaabQJ5rsHdhVE3WqATyXINbUW5Jq/smkOcaCH0S3JLb
JZDnGrhe2rV4lzSePNdgRx+zz9KaePJcg8eGY9ivCuPJcw02SNJijFPiyXMN
MoOjVw6KjCfPNZide2pHzcd48lyDGTNMmqK94slzDZLa95UHPIonzzU4z1pn
9up2PHmugepY9Cyv8/HkuQafNxiuCjweT8/7ahAzIsUtflc8ea7Bm6lL+zau
jyfPNbA/8PXTsCXx5LkGvcZuP7B7Zjx5zrRn4aZ+r8fEk+cayHwbfyr7x5Pn
zPq0dtiyp1M8ea7Bz18ev5OUceQ5sx/M3bXLm+LIcw24g4aoE1hx5Dkz3urU
DybZceS5BufijrSVxMaR5xpsvvhZ+Dw8jjzXwNr4oYVRQBx5rsHHoMajPV/E
kecaNPxJzyp0iiPPNTgmXuMdZBtHnmuQ0Xgj0dk6jjzXQL7so/7V43HkOVO+
eHCD1e448lyL3CPD02w2xpHnWmTpT8i9syyOPNdiDD6LXs6JI8+1mLzCcETM
hDjyXAvzzi6GQp048lyL0hFzzab2iCPPtWAnSi3PtI4jz7U4UfZm029xLHmu
xemw8a2G1saS51r87nj8zM3iWPJciwUZ5k8F6bHkuRZD5662NI+OJc+1GHFu
cIUgNJY812Lv9/41N9/FkudatNW5ZjX0RSx5rsXAo35XfzvHkudahA2vl56+
HUuea/F8x6/cyRdiyXMtOnm97co7GUuea/G1sWoie18sea7Fzl9/1vzYEkue
azHql7xT3KpY8lyLIZyV7YP1Y8lzLXaXDdj/fnosea6FMCY95daYWPJci5E8
P9HDgbHkuRaT+ixQXO8aS55rERwxYvurVrHkuRb2SXufJ4piyHMt1i0Z+FtV
E0OeM+11vf5tQUkMea7FmucFl65nxpDnWphePKvMiI0hz7W4Zvt+2uRvMeS5
Ft9n8Ts/DIwhz7U43z/itso7hjzXYmXwY9ez7jHkuRZN1/pOFTnEkOdafIou
XnH1egx5roWr46vMXlYx5LkWfK/hiYHHY8hzZrz3jR+5bW8Mea7Fn2CX9LZb
YshzLbK7rU36sSqGPNeCtWh5h+sLY8hzLYxO3bhsqPvv/7looezXb8SIcTHk
uRbzs3Vq1IP//X8XLaZbRCWxe8SQ50x9EXqROW3//b8XLZY+Sg9PlUeT51p8
+5QRlN4UTZ5rIfv87FlhZTR5rsVaxYszTfnR5LkWX7w2TuySFk2ea9Hu2Kyw
GdHR5LkW/70s6r0vPJo812L1IM5Mtw/R5LkWhwaqu+V5R5PnWgTq/fEc5hFN
nmsx4fi8DMsH0eS5FitiG3wTb0bjf2LVNR8=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
PH2C6qsSVz+MelhnmEN5SonI9Z3GNCGH6q0Sl7sOeVkWk0P5SolimWhj6OUc
qr9K+LMaAupFOZS3lEgrfVM5wOok1WMlPudbZPsvOUn5Swm7pjMvtx45SfVZ
ib62wQXpH05SHlNifhvJ7709TlG9VmLQn/mGiT6nKJ8p4fonqjo06xTVbyWO
jkz77fH+FOU1JWY6N1uM7pVL9VwJX8czJgMW5lJ+U6Ko/a9rPU7kUn1Xwdm9
sKM5N5fynApzLhU7jh36H9V7FU5e+btmZfR/lO9U2GESbf3g5n9U/1W487fh
hXPr05T3VLh3y6hTncdp8kCF8AVb84oOnab8pwIvo3z3Xf5p8kEFC/t5ZQaO
ZygPqjB7YsWOtG1nyAttezsEdkFVZygfqvDCTzQxefBZ8kOFpMfrQv9sOEt5
UQVNbZekt6/Okicq9N9lmtHR+hzlRxWM3ThPL206R76o4Cq6kVr+/hzlSRVC
KgaHzBuZR96o4Gi8d0D4njzKlyp4jT500UCSR/5on9dQO8Fx+nnKmyrM424e
/vf8efJIhcVnK/uEd8qn/Kn9vsnYmi3R+eSTCittX8bOqs6nPKrCw8nh7jWs
AvJKBSQkvrU9V0D5VIWm4UNFniYXyC8VFpq4HPdMvEB5VYWKAeunOyoukGcq
ROQW7+0YcJHyqwqepYG+X95eJN9U6GBWXHPN/RLlWRWeVgXl5JReIu9UmDK1
/YPKvpcp36owXLN/fuT8y+SfCj59788fePAy5V0VDrS7PepX9WXyUIUZo5Yl
/ex1hfKvCvvXifrYLLxCPqrQTxP4a/fxK5SHVdgelepr13CFvFRhMy/hUI8h
Vykfq7C2XXbw9Kir5Kd2PP9N2v+2+CrlZe18TM0adUO/kDxVYcJ9Q0nrWYWU
n1WwbCxKLzlcSL6qUBL5IUwgLKQ8rcJva+89GWOLyFvtfH7s5Fexs4jytQop
4rPn9n0uIn9VcNo2Y6fS/hrlbRUMQ7dv/7X9GnmsHV+sV+a12muUv1Woutf3
4LCx18ln7fkbsPVleMZ1yuMqmP8YuyFeeZ281o7vwsq7NbNuUD5Xget9KffM
pRvktwphR05f6GVSTHldhQ05+e7KmGLyXA3Td69CP9YWk+dq7Hm3wYTnfpM8
V6Oj9Ym7/QpvkudqlMV5L8keUEKeqyEsOxq0MK2EPFdjZ9fE+5v0b5HnauCr
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
         "]], 
        LineBox[CompressedData["
1:eJwt1ndczfsfB/DIJrvk3ltWiKsIUdbrIDszm6SuTYlf1jVDMkN7713aSaWd
KEklGSUjo6thdM75nu+Zv+85533+yMNDPr33s1F2h9ft7qqhoVHJfVH+efnw
7PvGt/jQUH3MebeLBYbbb/PxxGBBwfhrZjzxuQMPnTz4GG8VJoh3mMnbNfv9
6ls+fARkjq/jT5zBe85YNUcF8HGFH+Wl/Xw6zzzjyfH8ED5Key2t+bJ/Gi/S
cW6fVxF8vHiX5zun51Ref6O0oB8xfAgijHKfJU/hnfpvnEmvRD52pIe+/lxr
zOMeKx2ZwkeoSWHPtYcn8VbZDdxsnsFHQfGDKXPNJvIe6Lu0rn3AR0fpAs8D
xoa8MQ0sFyEfFgZZT16uGce75eMw+FIhH/6V/nnWQQY8kTK8Uj505d9c5w0a
w1M994SP7SMaw/bGjeI9q1R++OgV3vAp024kb+a1+Tu/VPPx9EXPKSZO+rzw
Rfc7ZXV8DDOXX1+95S9ev65/u+q84aM48LHtzsN/8E7kh/wx+R0fySYbzY6k
6vI+/js0aclHPnaNrJnb/c9hPEvVg3ykZrcGDIrV5ilfO/kfH0WT5icJ1w/l
jUo5uu9uOx+3ik1jTugP4d049E0S94uP9sm/g1K7DOYJuW4UC/iI9b8QPlg6
kMcFN7qB5WOydIvp2r4DeU/DlAHy8eFx94QnW/vzTHfkLOvXVQA9J9EpUWE/
XigXnUEPAUxODohkFvXlcc3gOiJA3NAL7l++9uYd89DttrG/AC5n5Y1Twnrx
lN11GCyA98Lv/d2O9uQtVyUswGbtkZd+bO7BU7X3DwGq+A8cd63rzhuhbIe+
AKe/9nT917obT1W+0QKcsVoRkn5Sk8dXpjtOgJ8PhnpdDe/KU4X3twCbhtrI
P77pwitXPjdZgLuX7FrD9Lrwpqk+AnyrKZ3+7JAGL/hHTNmKmdy/z7Mf1/+W
Ar0S/9q6a7YAw8I/nxVbyfE/rnpnIEDp0nnyb5Nk4JJ19loowJsou7HOOlIs
VTVEgJvlXYrdBkignL6yFQL4r3fTFOiIobdVOdECxK9Z5pfyNwuuuVWMlQC+
WXYr6ixF+F27khsZAfb+o1Fx5RSD7aoFESBf/KBII1WIxyuUDRbg657ro278
5uqsClCAYJ0Zd8/OFSCQm+aj+wT4xZ4aNPcuH8robhwSIOzJsuxZ7Z04olwP
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
ngaWFZDnDHJ9myf2ci0gzxkU5KZGLl5aQJ4zGF3VdGJ9nwLynAE7lscaPcsn
zxnc2R3o/vxOPnkuwqaqP4tNN+ST5yKkDsgbbv1HPnkuwvX9VfMWfMgjz0XI
ER/472N0HnkuQoqOtNnMIY88F2Hfmfw+FjPyyHMRRq1asUJD8ZA8F2FqtEHk
gScPyXMR3sUvMrjg/pA8F+Gaxv3vc60fkuci3D03clyY4UPyXIT2nvZDY/i5
5LkIa9umJS0vyiXPRUg/5SC65ZZLnovwt+2k3oe255LnIgRVXM37NDGXPBfB
aFVMZQebQ56L8I9ZiLFbeQ55LoLhlSjnfL8c8lwEBzdbx7MHcshzEXxal18t
mZ1DnotgmxNY4auVQ56L4Dd+znPh+2zyXIQWw5jcN2nZ5Dn3/mJv/QVXsslz
EXZM6GYycWs2eS5Cxr7COT7G2eS5CJKEQ/pnNLPJcxFsXm1tbXz9gDzn6ju3
1fV+0gPyXIStCy6/6+XygDwXIe5y2NSabQ/IcxG0OltytKY9QK7KcxG2mDWl
PezzgDwX4Y5ukk3jpyzcUXkuwuhZkv4Hc7PIcxHmrE3U2euZRZ6L0BGaW1dl
n0Wei/DySc/k0CVZ5LkImXVjhzSMyiLPRQi4NP34Gel98pz7efkp6y+9uk+e
i/Bt2oqpHWn3yXMRhg8s8Mt1u0+eizCkIu6v7wfuk+ciHK7+6Ht8yX3yXIQj
WhaD/zG4T56LMCWm5lJil/vkuQghg+b7rX2fSZ6LME18pNvavEzyXAQvP7f6
uIBM8lyEeU1Zelv/zSTPRWib/bZz55ZM8lwEPSvD0XlmmeS5CHkXtp6w180k
z7n6BN957CjKIM9F0L4yve3R6wzynJvHZe9KDmZnkOciRIyfNtXWP4M8F6Fp
ct2IqNMZ5LkIx4bWdzW3ziDPRdzvi9tKdZBBnovQ1eXuW4zKIM9ZJJq4ladp
ZpDnLLa5Hzx3+Gs6ec6iLfiqq1N5OnnOYvov6/bCxHTynMWV9V4Pre6kk+cs
RjV0dp/klE6es3h1yqJp6eZ08pyF3diFO+LmpJPnLHIcroZbjkonz1mY+B97
atIjnTxn0WE8SrapNY08Z7FXvNAmvzqNPGfxy2Wc3q77aeQ5i3Vit91LA9PI
cxaah5MPHLiYRp6zGBo+1K58Xxp5zqKrjtflXavTyHMWJ9x5/WfPSCPPWWj1
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
yGJnjqs5FUCeyzBze7/e0/YGkOcyTP21Mz9+fQB5zsWT8GiU2YIA8lyG6SW6
AxomB5DnMgxud7Hz0Asgz2XIveki2tk3gDyXYdKPhnsLWX/ynOuPi6/N7G/+
5LkMFiO1W5e89CfPuXinCoz2l/iT5zIsHjS2R0iqP3kuw8oZb9b+F+JPnnPx
XLv1Y4mbP3nOzVt0t/ycM/7kuQwGE5YEzj/oT57L8JkN39+4xZ88l+F6QHz3
G0v9yXNuXs5MX7Nypj95LoOG5dYJY8b5k+dcv5adPNJP2588l+Fr+KTevbv5
k+dcv8s21uh2+pHnMmgX6yTM/uRHnnP1D648caTGjzyX4WD+sOE5hX7kuQxb
59Y7aqf4kecyFFgZ2F4K8SPPZTDJ2VapeduPPJfBasAQL+9zfuS5jHNJL3i2
gx95LkO3jqsVv639yHM5XD6EyHJX+pHnciw5+PUPn7l+5Lkc8vd/9Lhs5Eee
y5Epmx5xUc+PPJfjst3uenctP/JcDqF86OUMmS95Lkft9c93vrX7kudypEsS
Pv7d5Euey9FLdmqbc5UveS7Hzf0ezd/yfclzOU6UHbWxSfYlz+X4WfA441uI
L3kux8yY4+UX7viS53J0++1zaaKzL3kuh3vuifLPR3zJczmqFns5J9v5kudy
WF8Md79u5Uuey3H81qXmYxa+5LkcgfNWbTti6kuey2GTsOzjmXG+5Lkccant
232H+ZLncuhd/JRZ0suXPJdj2CSNOjnrQ57LkTJxVciyVh/yXI4pnV01Iht9
yHM5Ai5fatKq8iHP5SgW2Y1xLfAhz+Uw0LHLGpDqQ57L4d3scCkm3Ic8l8Nh
TqTjKk8f8lyOW3uW7et2xYc8l0Mjrsaq/IQPeS6H+eeGv4L2+5Dncuj/PfXe
+W0+5Dn3nnV5h+NKH/Kcy6+k8KkjfMhzOd7F2hqfN/Ehz+Uok+l3CRzjQ57L
0fbL0/ixtg95Lsco76thGr18yHM5Pp35ZrFU7E2ey/Fj22PN4DZv8lyOjcm7
y7u898Znledy6FiPd/5fjTd5LofpVl+dzhJv8pzrz5qDxy7c9ybP5SiyOHXt
zzhv8lyORhTNKw3wJs+5fIR7nf918ybPufofyZo7z9mbPJfjzEP9nQOcvMlz
bh5umrxs3+NNnsvx/EfMtTdbvMlzLj/W+kCtpTd5LgfjYLXrNbzJcznMBvwc
lGDsTZ7LcWdD4ua+47zJc24fXXJ6TBjuTZ7LwZYo9ozW8ibP5RjZ+71XgsKL
PJfDSqc2WP7bizyX46xlzaIdX73Iczm6LhiR9OaNF3mugOGlu0vXPfMizxX4
OC0krK7QizxXwCi+9dfuDC/yXIFC9y/OmrFe5LkCulPm8+4FeJHnCqRZ1f75
z20v8lyBsbo3Ncde8iLPFSgNuPD193Ev8lyB7g8/pFce8CLPFYiokWxN2+FF
niuwcaTe44h1XuS5Ai0DK3+ELvYizxUwPt5QGDfLizxXQBb+bmK+sRd5rsC+
WUVXpvI9yXMF3CwuufQe5kWeK9BvZ/dNvL5e5LkCe8XfL1xUeJLnCpRsv975
vNOTPFfg5aMNIYYtnuS5AopJDU43Gz3JcwXE3Ut3Sao9yXMFTLq/tDn2yJM8
VyDsc/tGcbYnea7AgQm9Z19P8iTPFYgTHdmsleBJniuQ55HpVuHjSZ4rsCej
4MO/Nz3JcwU8CvI+mzp7kucKTHk96abkmCd5rsBsv4gnTw94kucK/GyquRFt
40meK6B598LjG+s9yXMF/jt01/70Mk/yXIEf1fLDx+Z5kucKZLo2FJ6a5kme
c/l5rlt31dCTPFdgrTxaJ0zPkzxX4FfINI3SwZ7kuQI7fh/o8qunJ3muwOHG
+n6GMg/yXAHhBV3t/b89yHMF6rVa+mV88yDPFdhyY+i3Xu88yHMF5ide8t5b
60GeKzAs2KR/9WMP8lyBIW+nzF+Q50Gec/UWxo3OT/MgzxXQOtkQtTDWgzxX
gB85PL82yIM8VyBhY9WOgx4e5LkCLs9Onta65kGec/N7+V7P7HMe5DkXf1cd
xt7Jgzzn/n+m49xJBzzIcwWa8u9Uddp4kOfcPD+zDi7d4EGeK+Cqu7Z/9kIP
8lyBztOaFc7zPchzBSzzBvZ3mOlBniuQtXCW7T9GHuS5At4n/8qyHeOB/wNU
BMPJ
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVYVOn7x3EYXdu1u7tz1TX5HANbsXUVuzuxu7u7W7HF7lxbFHWlRLpB
YLrnd+C+93tfv51/9npf6MyZc848r+cG3EqjpvcZq3Fzcwv7zc0t878Dfq/n
dyQtHG7/7xHxv/5nfmL1RrmkL2R86TGqoPSySQ/n7Cop3S/6zKGXFaVreW97
bqgp7fyW+YTSX9VnG9RC+vyrbn9uaCu9BE2H3e8i3edu+TXJvaVrNMp1qexg
abtv5gFKB1QOtSydJH1WPbprs6QXFb3SKXKhdK8t+6YVXiVdLceKPe03SVuX
Zr5h6U+mvuo7lj49o02ewFPSCzJP3yXpnplv96Z0lczDeyhtzny6l9IfP2Q+
pE963tY5vknPe3ysdIMw6e7q2RsRK13p2qwJO1KljTUzL4j0+xOZTyh9XH22
qjki/9c+u0pmH/C7dNd8mjrriktXUK/G3fLSekfmBZZ+OzfzAKWPpp1Tr7D0
bPXoFkO6c+TCzCvyvy43eEyrcC9pbebtN0j6debtMkL6cOblnSA9M/NyzJDu
mHn65kuXyXy7K6TTMw9vg/TfmU+3Q/rggcyH9PTCq56+OyHdYdOUeJuvdKns
mZ8w6V+LM29o6ReGzAsivX9a5hNKT1WfLeOLdLsRsZ8rh0qXCPZX70DplN6Z
HxDpZ+8yL7D03vaZByg9OfPjmz3qf61kftzySRfL/HgUlU7KvJ3LSj/JvP2q
Su/OvF3qSU/MvLxNpT0yL0cb6SKZp89TOiHz7faQfpR5eAOkd2Y+3TDp8eMy
H9Ktw73UT7B05qftzVzpzLNnWSqtvln1hpbOXK28t0ln3n1b9klnPtvjY9JZ
y+c56azl75p01nJ1VzpreXkqnbUcvJHO+vh+ls76uAVL08dDOut2TpTOuv0y
pLNuF4t01uXVRP+vsy5HHums01dYOuvtlpbOOrzK0llPV0f6j6yHdObqPKaV
dOanbU976cyz96qbtPpmM2/o/3UWH97SWcv9GOms5XmKdNZyOkc6a/lbLJ21
XK2RzlpetkhnLQd7pLM+vkeks47ujHTWx+OKdNbtfFs66/Z7LJ11u7ySzrq8
/tJZlyNQOuv0hUtnvd14afJbOuvpTNL0iPmP59LkuTR5Lk2eS5Pn0uS5NHku
TZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5N
nkuT59LkuTR5Lk2eS5Pn0uS5NHkuTZ7H/sdzafJcmjyXJs+lyXNp8lyaPJcm
z6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lyaPJcmz6XJc2nyXJo8lybP
pclzafJcmjyXJs+lyXNp8lyaPI/7j+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn
0uS5NHkuTZ5Lk+fShbIWVOm4LM+lyXNp8lyaPJcmz6XJc2nyXJo8lybPpclz
afJcmjyXJs+lyXNp8lyaPJcmz+P/47k0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5
NHkuTZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0
eS5NnkvT25Umz6XJc2l6JPzHc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lya
PJcmz6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lyaPJcmz6XJc2nyXJo8
lybPpclzafJcmjyXJs8T/+O5NHkuTZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2e
S5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5NHkuTZ5L
k+fS5Lk0eS5Nnif9x3Np8lyaPJcmz6XJc2nyXJo8lybPpclzafJcmjyXJs+l
yXNp8lyaPJd+kOW59PYsz6XHZnku3TILOGnyXJo8lybPpclzafJcmjyXJs+l
yXNpup2lyXNp8lyaPE/+j+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5NHku
TZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5N
nkuT59LkuTQ9Uv7juTR5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5NnkuT59Lk
uTR5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5NnkuT59LkuTR5Lk2eS5Pn0uS5
NHkuTZ5Lk+ep//FcmjyXJs+lyXNp8lyaPJcmz6XJc2nyXJo8lybPpclzafJc
mjyXJs+lyXNp8lyaPJcmz6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lya
PJcmz3/9x3Np8lyaPJcmz6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lya
PJcmz6XJc2nyXJo8ly6QtUBLx2R5Lk2eS5Pn0uS5NHkuTZ5Lk+fS5Lk0eS5N
nkuT52n/8VyaPJcmz6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lyaPJcm
z6XJc2nyXJo8lybPpclzafJcmjyXJs+lyXNp8lyaPJcmz6XJc2k6PGnyXJoe
6f/5vEuT79L0+Zcm76VpPZAm/6VpfZCm/YA0rRfStD+QpvVDmvYL0rSeSNP+
QZrWF2naT0jTeiNN+wtpWn+kab8hTeuRNO0/pGl9kqb9iHTWcjVOmvYn0lnL
zTRp2q9I088PpWn/Ik0/T5Sm/Yw0fT9SmvY30vT9SWna70jT9yulaf8jTd+/
lKb9kDTNP9K0P5KmeUia9kvStJ5K0/5JmtZXadpPSdN6K037K2laf6VpvyVN
67E07b+kaX2Wpv2YNK3X0rQ/k6b1W5r2a9K0nkvT/k2a1veM/zXt56RpvZem
/Z00rf/StN+TJg+kaf8nTT5I035QmryQpv2hNPkhTftFafJEmvaP0uSLNO0n
pckbadpfSpM/0rTflCaPpGn/KU0+SdN+VJq8kqb9qTT5JU37VWnyTJr2r9Lk
mzTtZ6XJO2na30qTf9K035UmD6Vp/ytNPkrTfliavJSm/bE0+SlN+2Vp8lSa
9s/S5Ks07aelyVtp2l9Lk7/StN+WJo+laf8tTT5L035cmryWpv25NPktTft1
aXpo/+O5NHmuhf5gqZVtx33zIM+1mD5v9PSYQqke5LkWdbBrZJcEqwd5rsWq
36PjZoRnB3muxeWRth8jx+YHea7Fub2dT6ydXwTkuRaXVnzdXOh+SZDn6tfL
vczZZFZ5kOdavM83sOK+npVBnmtRedjZfmUPVwN5rsWORjUTTlSsBfJcizNr
Z34fF1oX5LkWKStWuNLHNgR5rkX45vfPQ+c3BnmuRaFVzqWDzjYBea5F47Ev
nw/51QzkuRblug4/Et+rBchzLZaW9Q/O7d8K5LkWcW3m7Q8Z6wHyXItOu2ru
b7NZAXmuvn6/Fafy6NqCPNeixDBd7qnj24M812JUcCvPHokdQPOHFn3ebXtc
b0FHkOda3OszsYZ7ic6geUSLqs9fX0953gXkuRbWhcM9Sy7pBvJci2dN6o28
4tkD5LkWFy821/wo6wXyXIuPL4d2mrCiF8hzLW4aVkX9XNQb5LkWSolv35OX
9AF5rsWdxKqdL6zrC/JcizcNN/s0O9AP5LkWgyaUv33Zrz/Icy0KNzsxt/63
ASDPtRjXvnjzIMdAkOdaFPPKte19g79AnmtRLXBdldqTBoM812LdhtfXi18e
AvJci1INu+W9ZfYGea7FXw+OlKzdYxjIcy36xawOPXRhOMhzLbaX/efu/vUj
QJ5rMXtk8KYNykiQ5+r9fXt48aaOkSDPtZh5seaha49HgTxXr3f2TtpCa0aD
PNdic+4Zm6b3GgPyXP37T+bPiKg4FuS5Fod+ODstNo4Fea7FmKutBw0JGAfy
XIuHSs6Ne6+PB3muxZcuxsmd9k0Aea7FML9bTdevnAjyXIstc5a/nz17Eshz
9X7Sv3xWbdJk0PKnxeAE7Yj746aAPNdics3Zvj0nTgV5rsWQe28Hus2aBvJc
i99ORyWkLp8O8lyHsKKeXmW6zQB5rsOn9bnaOYJmgDzXIUfy1hb1Js0Eea7D
Wv/++R46Z4I81yHeVMZxf+8skOc6LK62/VGrxrNBnuswvW/Jmb0CZoM816FJ
Bb+reefMAXmuw660lPXLS/uAPNeh+UHn2ucvfUCe65C/ne567Ky5IM91mOZh
2emsOg/kuQ7VQt/+WTl0HshzHc4HNWg2bs98kOc6+Oy+dDWi7wKQ5zq0D2rd
/3zxhSDPdTD09Jj8LWwhyHMdnt2d+3Gx7yKQ5zq0MrbR3VuwGOS5DoXKf9Cd
7rkE5LkOaz5f2jiw5lKQ5zqcKfVX2ZQcy0Ce6xDZ0HJ/SdIykOc69Hpxrtju
ictBnuvQsFO8flXEcpDnOkyalFqi3OAVIM91eL3wyOJp31eAPNehxvbQ1ev6
rwR5rkMj/RzLvMCVIM916FK6cv5e3qtAnuvwoOSp4RVjVoE81yHulMnNOm01
yHMdtu+4MeeXfTXIcx2WOGbcKrB1DchzHQ7VGdl8RuW1IM91uD7EkV75/lqQ
5zrcfBHUr1X/dSDPdejtvmf4R906kOc6tOxn3Zu6Zz3Icx3GFmha4HqrDSDP
dch3o8X0erEbQJ7rUMejt2H+zo0gz3XI1ePTogvtN4E81+HVbd2SYPMmkOfq
+RlrKVvebzPIcx0iPPtV2zF9C8hztetVLNq90VaQ5zp8efe87ETTVpDnOqw8
8bx+tufbQJ7rkHolyXGw83aQ5zo0DS3i2uq3HeS5Dtd8ZyCl/A6Q5zq4Ds72
f7ZlB8hzHf45k1argmsHyHMdahketC06eyfIcx0eF1i06HriTpDnOrxMXns7
5+hdIM91WLQuW6+a4btAnqvn62qpGtWG7QZ5rsNvN4ecKBixG+S5ev0i+191
jNkD8lyHFb7dA1wpe9htPQxLapetM38vyHM9flt5zGN3jn0gz/VIa+ezttf+
fSDP9Vj5rWScT739IM/1KPJkqLX0q/0gz/V4M2BxwYGjDrDnetSs27NuO81B
9lyPyTPf/244c5A912NGjw+tN/Q4xJ7rUbBDoRylLIfYcz16OvZsfnL+MHuu
h1diow/7vY+w53o0G73x5LOiR9lzPRo1Ghw4MOAoe67HogmFqy3ceYw91+PD
0pSKVeseZ8/1WPtwzpyZO46z53oM6VRf29RynD3X4+Try3lXjT7BnusRtWjU
y0mfT7Dn6vn5XOWOCyfZcz3mNXeU6e93kj3XY0qPVv5La5xiz/WotuFRnx3H
TrHn6vnO2PbzROnT7Lke3kM/D321/zR7roelWvTCYqXPsOd6LPawnTl79Ax7
rsc+p6XszupnQd9v1MNa4qIu/fpZ9lyP5Nkjy4Yp59hzPXa5LDNmfj3HnutR
5VqXh28nnmfP9Sg+2P5Ck92XPddjjONbDccJX/ZcjwtjdaFeHS6w53oM3VAm
IDzpAnuuR+XCR6r477nInusR2WhUlTael9hzPdbtsY3oZbnEnutxd0XPB3X9
LrPnenwPTZ1qnn6FPdfjL58aFUMbX2XP1a9P/qR3WK+y53rE5p700XPMNfZc
D9zv0yDo4zX2XD1/OTzK92h5nT3XY+/pvxc89L3OnutR0bt4fpT1Y8/1GJ99
w4FfO/zYcz3KN3kVGZvnBnuuR4O5i28p626w53poPa87yuS8yZ7rMX/Lrbd7
Nt5kz9Xzk/LK+2OhW+y5HtW3jm8dffgWe67Hfe1cWOrcZs/16Hyo+NHGT26z
53oUbj5Oc3PAHfZcj4ydVQ6e0t5hz/V4W6dVrVq77rLnegysM7DctOb32HP1
75dadPJI1D323IAdSx7cjdlxnz034MesSt1mdXzAnhswKOldp3luD9lzA3r3
/+te9acP2XMDBtR6FnlrzSP23ICep7cM8O79mD03ICnb5fL9qjxhzw2o1TEk
INj2hD03oGutMO+9U5+y5wYMPTJy4euIp+y5Aavmrvx4cuAz9tyAoKs+s7p/
ecaeG7BnYO7aSb2es+cGVMxVZfqpr8/ZcwP6dR655cTgF+y5AXc6J98tEPeC
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
+sUDNel6d4U8Vz9/A354JMS5K+S5Cb9vP778apC7Qodngmnsu4xO79wV8tyE
PRvrX7nxwF0hz83ovGj3C/0ld4U8N2PeNmuj/EfdFfLcjC+2oGTnVneFFgQz
vDxHf3+/zF0hz81Yk//NW58Z7gp5bkavrkUa5xrprpDnZlyxFuk3q7e7Qp6b
cW3vkL1P2ror5LkZ9a7sWhPRyF0hz814m9q1nrmSu0Kem7HiL6+B+kLuCnlu
RuPUZWWC3d0V8tyMxeXeaM9luCnkuRlfb/ToNkpdf8lzM+Z0vLI+d4CbQp6b
Uatqy+zHnrop5LkZR01181e95qaQ52Yon2ISDhxzU8hzMypOKvnVfZubQp6b
8dfB/E7vpW4KeW7G406fd16a6qaQ52ZMajLpeoa3m0Kem9G2dZmZ9bq7KeS5
+vcX7ogY0cpNIc/NGHusYo4ttd0U8lw9v19N4X6l3BTy3Az7jf5jvuZyU8hz
M2L2zckWnuZiz83o2LW+R0F/F3tuxr4jtj9bX3Kx52bsLNJy5suNLvbcjPYf
dEMXTnCx52ZU6hr720MPF+j3hcw47miwO6iqiz03I6PPy+2abC7Q7w+p5+t8
kTMNI53suRkVjPcaj3niZM/NeDfda9vRI0723IxZg+9nj1zkZM/NGHF/aUDd
wf96bsaggLy1VjX/13MzpizJ2SS2+L+em1H52L6C/QwO9tyMOrd9v3z+6mDP
zTgU03y1t5+DPTfjw/Kd1czbHTyfm5HY58Dl09MdPJ+r99vWnHlG93TwfG5G
mfVXKzSp5+D53IzmVR68K5nPwfO5Gc++J/4slGzn+Vz9PDT5WKPiOzvP52b4
v802sYOvnedzMzo1njVs2Xo7z+fq+e++8GHAeDvP5+r9t7Rhw9ad7Dyfm7Hy
Vpua/WvYeT43A5v+8Q/KYef5XL2fcn4fVzjOxvO5ej4mJ02I/tvG87kZryoO
W/TpjI3nc/X6/FxWJXCNjedzM3IFnIqwjrXxfG5BsUV967bqaOP53ILCL5Ys
3F/dxvO5BZVPnm1RJKeN53MLqp0r9vVivJXncwsu/6W5OOqNledzC/pteFSx
ua+V53ML9n36vrXuRivP5xbsSW7TTZls5fncAtQacW52dyvP5xbk2tsu/VU9
K8/nFlzqenBaywJWns8t2Dk+Zpx/uoXncwt61fuu65Rg4flc/fNv9ox8e83C
87kFCVP/POS118LzuQV1/tkYOH6+hedzC77MTjh/YrCF53MLYm152jhaW3g+
tyD5yuTHCytYeD63YIfvpH6l1fNGnluQcf3k3gY9zTyfWzB+ZskeT1+beT63
oEipL1WbXTTzfG7BjQGXK/7cYub53IJagQcKtp5p5vncgt+/dnl8oZ+Z53ML
Jmvrdmzd3MzzuQVljv26l17GzPO5BS09L9V84zLxfG5BqUHZjj1X3SDPLYi6
Uq1GxGsTz+cW3K+jf1PxkonncwsSD5ffuHq7iedzCz4md5yW18fE87kFa6pU
m3frLxPP5xa8v+x7eqWHiedzC/YOL2OYVcXE87kFxVc0GLs2l4nncwsCA0qn
P1T3oeS5BS/nHdpW/KuR53MLDtywt9ql7rvJcwu2aoulND5q5Pncgnv9Ou0x
qHMGeW5BwQSfOqETjTyfW/DUL/eJaC8jz+cWBDdNi/u9mZHncwsGzTiS4q3O
jeS5Bc0vVzz+UWPk+dyCBddr/RqRaOD53IL+7So+L/7ZwPO5BXcHKDN/3Tbw
fG5Bl5vDyyQeMfB8bkGPWPeCVdYYeD63oGrhNk29pxh4Prfg2u20Cif7Gng+
tyBb/OcjtVoZeD63wK3MHV//ygaezy2Y06vMoj15DDyfW5A0t1T57AY9z+fq
8aRMG1YxRM/zuXp9jMXm3Xiu5/ncgvhCcW3dLup5Prfi3pHNyrRdep7PrcjR
IqGvY5Ge53Mr5u9q6n15jJ7ncyvmVS3eYmkPPc/nVrwvt//t9GZ6ns+tKFcD
KSsq6Hk+tyJ9WP5lN3PpeT63YkuZzcNzanU8n1uRz/h10sJQHc/nVoQ93bUk
/986ns+tuFWn+JynV3Q8n1txUe9Ze9d+Hc/nVpjOXlu0ZqWO53MrCrutb79v
io7nc/XrtU96vxmg4/ncigMFF5wo2VbH87kVm/PUSllXR8fzuRW9e04vXrz4
v/O5Ff1nnbc8d/t3PrfioM+naVuTtTyfW7Hy8ZKe879reT634tyWlBnLn2l5
Prdi1MnTq89e0vJ8bkWpM7meJu/T8nxuxe/tct3tsUrL87kVPWpnn/1hmpbn
cysqnyjwYOJgLc/nVtxwPmpctaOWPbdCuTol1NZIy55bsfHXwa3p5bTsuRW3
B/pU0+TRsudWLOz7c35DYwZ7bkWlnPNHLorKYM+tKJD36p0o/wz23IqPff/u
O+5BBnuuXo+gH/lznM9gz9Xrdcz98bPdGaDfD7aifWrj1gdWZLDnVuwaN3nE
5mkZoN8XtuJEnvOaQ0My2HP1/ktItb7snMGeW1Vve1bK0yyDPbdied3kHpOq
ZLDnVkxYYxwUWzCDPbfi0p1bpRc509lzKy4UWz65Tko6e25F6daPqxiD09lz
1Z3LCWVCX6ez51a8a7u2bsitdPbcimMPatfXnUpnz61whPtYqu1MZ8/V6/lX
kfGzlqez51b8dvmBV9C0dPbcihI7byQPGprOnlvx6/j9Ihnd0tlzK362q7n0
ZMt09tyKiV/DX0yplc6eq/fHo8THXiXT2XP1et3u36VbznT2XD3+plsWPk5J
Y8+tyNPbmlj8fRp7rt4ff2zLm+ybxp5bUbNK4sWD69PYcxtqvbg0SRmfxp7b
0FPvKD+oYxp7bkP7P2vGHq2Wxp7b8LbBBZ+iv6Wx5+rfz7dm7d2YX+y5DStu
Oj5ufPmLPbdh5Ojjmk2nf7HnNpz+1D707upf7LkNSwx5CxQd+4s9t2Hhhin9
D3v+Ys9tmFexzrje1X+x5zbkKzbS0jjnL/bchmt/LHmtJKSy5+rx/+G5YeHb
VPbchuyaQFP4hVT23IZSSb4fZmxOZc9tyLln27O601LZcxvW7n1/q0ivVPbc
htpHx/er1jiVPbchKsxSYmTRVPbchnVd7ke8Mqaw5zYMrLRq4oDgFPbchn6+
C70LPExhz22IjwhpkHE0hT23QXtu+2L7ihT23Iboi77zGo5NYc/V858rd+Lm
zinsuQ3mGpu2Fqqbwp6r5+/olOqPC6Sw5zb07t11+k5dMntuw/cDlWpuDUxm
z21YPLxXwesPktlzGyrX2RNvPZbMnttw6Y8C0yavTmbPbTg8xmOMZmIye27D
+GHZNj3pkcye2zB/5rFTJxsns+c2zNl1c/rFEsnsuQ3PvTyvB9uT2HMbjvnd
rF0vKok9t6FEw1dHz7xOYs9t8F9z5HO7y0nsuQ11DzxelX1XEntuw5Ne+Rcn
zU9iz21oOenjEv2wJPbcBvcCy76ldkhiz21Y9W3rtdl1kthzG3A1LC2hUBJ7
bsPGm8U/LTcnsuc2dKnz2+ZW4YnsuQ1FWoxNLfkqkT23YYjXqfslLyey5+rX
CwU8aLk7kT23oc3pedOWLkpkz9XzWc/ZNWZUInuunr+3A+9O7prIntvwYXuT
ZUUbJ7Ln6vWudmLCz1KJ7LkNN4fk8Hjrnsieq5+n2JpvvyUmsOc2fDHW/Ob2
JYE9t6FHyopaPe7/+++Q7fiaknv3vZMJ7Lkd7zZm/PTclMCe27Fh9It/MmYn
sOd2pDwc3eGR97/fb7cjpFJB0znPBPbcjgaOYfev109gz+1Y9weGhJRIYM/t
OP7AdLaSewJ7bseppjUmr0uKZ8/tiFj+wifvt3j2XH39XqX2XH4Uz57bEfb4
/b6p5+LZczt6hH/t3m1HPHtuR0mv5as6Lopnz9W56MisbsPHxrPnduzPcS51
t1c8e25HsQrTNsS3iGfP7finuy5mQNV49lw9Hy8XBET9Hs+e23E4+nzFTZY4
9tyOvVXXnPaKiWPP7TjXZGKDhp/i2HM7Ji9w7ap7P449t8Otb+szHc7Esed2
FN+tqT1/exx7bsfgH6klXi+KY8/tWO33pFaj8XHsuR3Xvh9uertPHHtux4GP
xwsM8Ihjz+1oNbDp5oK149hzO6YYCy2PLRbHnqvnd16rp9/c49hzO9otyFb5
Z2ose66+37Sci9xDYtlzO2pfbXzC41Use25H3fS7k/b4xbLndrwMLH3lt2Ox
7LkdWkfldts2xbLndjQ2xDoazY9lz9X7JeDZ3dQxsey5Hb+uD+36vHcs6N8D
2ZHQwXfjVY9Y9tyOZ/Wz9b5VJ5Y9t+P939fnfy0Zy57b4WlEUO4csey5ev3n
PO08SBfDntuhtN926nFEDHtuR5BHr+et/WPYczsmXEpd+uVBDHtux5mEvTeW
+caw5+rrN33SssO+GPZcvf7Xy6ZVWBPDntvR1+fcxcKzY9hz9Xz+3N+t7MgY
9tyOT/ZJF1p7xbDndoRWDTo1u00Me25H5wMhRZ7ViWHP7fDpful71dIx7Lkd
C668enM0Vwx7rl6PVVGv6pui2XP1eO6ZLn+LjWbP1euhtBmy/Vs0e27H8281
L418Ec2eO7Dp+bSlnf2i2XMH7h5zv9bhRDR77kB+Y6EKA7ZHs+cODI3Kf2Hx
smj23AHrueMN7k6LZs8dGNPCb2uuYdHsuQPL7o47O7VHNHvuwOO0cgPiW0ez
5+rrvZq1xKduNHvuQLabLe0lykaz5w7E1l/j5583mj13YEvlQ8sP2KLYcweG
j3V2nJ8cxZ47oGs6MW5SaBR77kDRpx8x830Ue+5AlYv9m2x6EMWeO1Dm5sgz
dy9GsecOlO63YY7lUBR77kA3n4OremyOYs8duNLswM2bi6PYcwcuP3mSWH9q
FHvuQI0qS397ODSKPXfgTu+FSUN6RrHnDiwttX3R74hizx3Y3yjg0NcGUey5
+ud7rKl/sWIUe+5A/Wa1S+wpFMWeO5Dwc3aLHZoo9tyBi/O6Lzimi2TPHZg6
7dv9JzGR7LkDJ71HRWX8E8meO9A1cOW3pq8j2XMHPEqbfTbdjWTPHQhce++i
1jeSPXdgZpp28ORDkey5A2bfbBMNmyPZcwdyjFvyYPvSSPbcgZUvKzdvMyOS
PVfPh1/sS+vISPZcfb71sZ3e9o1kzx2YGDz4yXnPSPbcgROTzwbt/zOSPXfg
e8SMowdqRbLnDoQULKG7UCaSPXfgwIb5jz7kj2TPHcjTZffzeW6R7LkDg3a+
92qrjWDP1evbYUjcrpgI9tyB498WL085FMGeO/BbapkmE99GsOcO/N03437y
gwj23IHCH+bkW3olgj13IONCdMGKJyLYc/V+23jmWsCuf39+7kCqodu3nWv/
/fm5A0vK7BwzekEEe+6A11zvru2nRLDnDvyx9O60xsMj2HMHJvX/cb9hnwj2
3AH/udVLenhGsOcO3BtTbsbg5hHsuXp/DZp+aU2df/+/n064tBm3n5SPYM+d
aPnrxIJchSPYcycWfT75c/hvEey5E8vaLjm+KSOcPXfCv8X7mXOCwtlzJ6ZE
Dcmx8Ek4e+7EP1Fn/zh8Npw9d8Lt7LRPIVvC2XMnsgc8udrUJ5w9d6LEg/QL
l7zD2XMnjuXe2L11h3D23AlTaX2d5Drh7Ln6+gcXVrtVJJw9d2JF7uYnD9p+
sudO9KlTYMmh6J/suRO9Zufacef9T/bciTXndufW3fjJnjvR+fDLSp6Hf7Ln
TjzItTDp+uqf7LkT4z/6t24x9Sd77kSptRW1If1/sudOtLMXiNnr8ZM9d2LC
oeUpU2r8ZM+d2B2/L9a74E/23InCpoe+4yxh7LkTHdP2FdkYFcaeOzFmTSHn
q/dh7LkTV1f26VDuVhh7rj5f9xfPNh8NY8+deDc9b59i68PYcyf21y8UcHtm
GHuuXu+CltIzh4Sx506EzK2Wr4NnGHvuhE/tZisaNAhjz9Xn1+Uc+EepMPbc
iY+1bk7yyhbGnjuh6bj9wKrUH+y5E6Nn1Xv2KfAHe+6EpeSgJ388/8GeO9Ft
RolZVy/9YM+d+Jzj8p12+36w50587757WuqKH+y5en3LrfS5OuUH6N/7qq/X
ZczF9QN/sOdOvC89Mm1+ux/suROt475XXF7vB3uunr/tQyocLfmDPVevT7mH
775k+8GeO5HoYdeUTwtlz53oGd///LKQUPbcie0/mh8y/R3Knjuh9Or6cM31
UPbciZwLxqTUOhLKnjtRo8HefDHrQ9lz9f7fWNl5Y04oe+5ExOrlJw+MCGXP
1ftv/+DQ3d1D2XMn7o7buvFM81D23An3wXV3vq8ayp47MSokbGFGwVD23IkN
LZpe7OAIYc+duDDXvtQ3MYQ9d6LQs2Y/Wn4PYc9dCC7dI/HyyxD23IWUpQGb
J14NYc/VrrDibaXDIey5C20Olpj7a30Ie+5C5y7D5n7yCWHP1T9/p8eVl6NC
2HMXinXIr/H3CmHPM39Oo+2f3DqEPXfheZWVW8vWDmHPXYgqOXX7yBIh7LkL
M+7vVO5nD2HPXZjSwLWqujaYPXcho38yzoYHs+cuXJ3y8K8WH4PZcxfePMp2
J/x+MHvuwqmuS9scOB/MnrvgnF/069i9wey5C3FPg4d6rg5mz114OyTfyz9n
BbPn6vvXF01pPSKYPXfh04C1D/v1DGbPXWhVpVzZZa2D2XMXti19kvGgdjB7
7sLuvxdXzVsqmD13IRFbDk3JGcyeu9D3a2+PCEMQe+7C8Tt99WNjgthzFw7V
7nDG8SWIPVe/XtXe/NyzIPbchdL5F+8bdS2IPXfh5vTk8w2OBbHnLqy4vr//
71uD2HMXAl6Z1zgXB7HnLtRJPFvZbUoQe+6Co8eYokWGBLHnLtwJK9Hhz65B
7LkLB5M/HpzSIog9V4//1x33GzWD2HP1erWoOypPySD23IWLd86cmZUziD13
4eTZF7eSjYHsuQtefbss9okLZM9dqBhULrrA90D23IWyP7p9u//3v78P58L+
vu4t59769/fhXMjbbpuz7ZlA9tyFaUsm5iu/J5A9d2HhrOo986wJZM9d6JW0
9EoOn0D23IV8eVoNihkTyJ6r9++yAhty9Q9kz13q+utXtKlnIHvuwrdLuR/t
axrInruQPiNqUXS1QPZcfb1lM354FA9kz13oEj/gnW+OQPZcPX8d/2pU1fSd
PVffz5Yhjsvx39lzF+Y+GVm6U9B39tyFwde3zUl78509d+Hu65rms/e+s+cu
vLq+bcfUC9/xf3v64Ds=
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd22VYVN//PXwsUBEsQLGxW7Fz1igGJnYXYVO2IiaCnYiYHxM7MLBFUKS7
Q5DumO74D+z39zfXffPEa12MZ845e5/92msAKwe3RRsbGxgY5DYzMKj/d5np
kHd36v7B4P/zlf9/OW1/RV/r5vr8nJ88z6GNPh/Z9n23b0d9XlIUcCushz4P
WHPxl7i/PmtS6w+ozym6o60Yr89Pw+eMPT1Fnw9h9Lqvs/R50edu3lUL9bmf
dfOXXVbps+pZ/Qnqc1LPHPnhbfr8WHd2gTv1+aDZ65kFHvq84Ly/azsvfe5j
eMzP5qw+Kw7XX7A+J0gX665Ynx+5T26Z8VCfD9Tfvpf6PL/+cj/oc6/60/uu
z7L6w4Xpc1xs/Zc+P5j+UahO1ed9wXc7DcvV57m6u7ehRJ+tAnduuVyjz5L+
9QOizzH36w+oz/d0R+ttWPB/eY9vx6bLTPV5dqvGg05a6HN33Wh87qbPInX9
AOtz1N76E9Tn/+qe6EZYn3fpzs4T+mxb4FE/Iv+Xu65ymvjPTp8F9dNvhT5H
1E+XDfp8u354t+jzjvrhcNfnGfW3b78+d66/3GP6zKs/vdP6/Kf+cJf1+eaN
+i99dmvnFRJ9X5+nnXUuUz7TZ8um9U+YPtd61k9off4trh8Qfb7uWn9AfXbR
HY2frM9TN5Qk9szR5w5Z8boZqM/VC+sfEH0Oja4fYH2+ZlN/gvq8vf7xbVr4
f5lb/7i10mfz+sfDTJ8r66dzF33+WT/9euvz1frpMkSft9YP72h95tQPx2R9
bl9/+6brc3n95c7T5x/1p7dMn6/UH26dPm/eVP+lz5P+2emeYH2uf9oi9+pz
/d2TH9Zn3cXqJrQ+169Way7qc/3sO++vz/VHC76rzw3L5xN9blj+AvW5Ybn6
rM8Ny0uIPjcsB5H63PD4Jupzw+OWpc/s8dDnhulcoc8N04+vzw3TRa7PDcPb
uOj/csNwtNTnhtvXTp8bLreTPjecXk99bjjcIH0e2fClz/Wrs9NEfa5/2vxs
9Ln+7oXP0WfdxdZP6P/LDXys0eeG5d5JnxuWZ2d9blhOd+tzw/Lnqc8Ny5W3
PjcsL+f1uWE58NPnhsf3jj43nF2APjc8Hq/1uWE6f9TnhukXrM8N0yVcnxuG
N16fG4YjQ58bbt8/fW643DJ9Zn7rc8PhpPrMvor/f57rM/Ncn5nn+sw812fm
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
0uex49tU8lyEb98f2+R1SyPPRdjbcZyk3cU08lyEEUMqzDo2TifPRRheF9Wq
yf508lyEhc3uvEjhpZPnIhxI4Iwqcs4gz0VYPWp9tWF1BnkugmHYz5kurpnk
uQijH3+/MkyUSZ6L4DbZJGPzoSzyXIRl2NrVumU2eS7CjIy4rgE3s8lzEXrH
JbobDMshz3Xja+q3wzAihzwXoUmbk6pJjn/JcxGiVncMvNwklzwXYeaFiYZD
n+aS5yI0Xjh78qiFeeS5GIdWS/5EaPLIczFOO9XOM3n7jzwXw+1G8EbzUfnk
uRimj+tKe1zJJ8/F2Jn9aMQfQT55LobqS+WFNssKyHMxJhvvybP9VkCei1He
4XmwSZ9C8lwMn9XzD4ZfKiTPxfBzW23vry0kz8VI6XfX32dHEXkuRp9Hrpte
lRaR52L8LIlM7Lu+mDwX409x/6umOcXkue74BcM2uK8qIc/FaKt4Mflcbgl5
LkZTr1Pao06l5LkYa9Z12T2nrpQ8150v9yCn2+Ey8lyM8V3vTuvctpw8FyOL
u2nCuqfl5LkYbSasXdlpWgV5LkbkvfGn9xRXkOdimO3pZnbqdCV5Lsba6GC7
YyOryHMxblsa/TlTWEWeixE+/4hX/LVq8lwM21jfhQcX1JDnYjzmODp8b11L
novh6u74LDS1ljwXQ/7KJuzb3TryXIxbGccDXMfxyHMxutwYvGjwIx55LsbL
p/eirdvzyXMx1MVTlt3U9XjmuRhbEhxfZaXxyXMxohwUB5vtEZDnYiyqeXJz
qkBAnuuOX17Anb1PSJ6Lkbx9yrDDMiF5LoZhXcZb72Mi8lyMJd6FNXm6ecY8
F+NCE/fRl+6JyXMxmkTdb/ptjIQ8F0N74u2Q40kS8lyMqQeHjDbaISXPxahd
kBPlYi4jz8V4d/Xf4qxgGXkuxiWR0MvFRU6e6+7fiCfSGVYK8lyMjKqFk65n
K8hzMYKn3E/2uqEkz3Xz+9iLmu7rVOS5GAvmD1pyrb+aPBcj4Zt9jxZyNXmu
G7+ZW+/dSNCQ52JYZGTN3PJSS57r3i/lt0n0TAMu81x3vw1DLK58N+Ayz8Xg
Pa3c+2VUIy7zXIycR9NKBwc24jLPxXCet9TXeFhjLvNcgi1XbKTct425zHMJ
Vq1q00UwpgmXeS5BhzMhnTuFNOEyzyVwuf5W8G1uUy7zXIK/gdd8M/425TLP
Jfj82rLZNvdmXOa5BBtmNtE4GxlymecSjF5hdiL9viGXeS7BFZfFb67DiMs8
lyAwLb70Xr4Rl3kuwXrB366ZJ5pzmecSTPewaN5zcAsu81x3vgKDhDXpLbjM
cwnevWzzbYNXSy7zXAK/1t/jtCOMucxzCf5wPu9oVmLMZZ7rjnc7NHv9jVZc
5rkEJcU7re3sTLjMcwnaBFeLDY1Mucxz3fkOuZPdMsSUyzyXoLJD0GsDj9Zc
5rkEeSOvnZjWqQ2XeS5BuYuD5Pa+NlzmuW5eloduSUptw2WeS3C/24aiAOu2
XOa5BCumulRln2/LZZ5LsLPPguQhFW25zHMJKhSeNSts2nGZ5xLsazzd3Ox2
Oy7zXILnaWM1ZsJ2XOa5BD32uoa2tm3PZT9PlKCYE/Hm0832XOa5BP2CDrb5
WdmeyzyXIO7apu5ZY824zHMJ7MPPxnw5ZsZlnkvQullUmkWkGZd5LsGNDlu9
n7Y05zLPJQju027bwFnmXOa5BD4R5QGTD5pzmee662m+bEzjL+Zc5rlu/nkf
dS+tMOcyzyVI6b6lJtPcgss8141H8oxegZMsuMxzCSZcetBFu86CyzzXzY+6
fs/PeVhwmecS7N+bYOd02YLLPNed364gl/AHFlzmuQQxxn5f37y24DLPJfgx
1zapT5AFl3muuz7Nu7TRHy24zHPdfDpVUCV4a8FlnkvwdvC7zP1PLbjMcwkU
fa26V96w4DLPJZhsr7rdxceCyzyXwKBfTvxEVwsu81yCE5z38vQFFlzmue75
2lH12264BZd5LsHgayFaC2MLLvNcgqeu3cK0BeZc5rkEyZ/7d54VZM5lnkvA
f3FYMNLbnMs8l8DwaO3nRovMucxz3XxdX9db1NmcPb6Npeh55FbB3CIzLvNc
irILI9csfGrGZZ5LcXqHp+u47WZc5rkU8iFdmkwbbMZlnktxzNazY2BVey7z
XIp0l9CJw27pSl6D51K4fOB/8d7Unss8l8JjzKD7jj3bc5nnUuwsHztrjk17
LvNcit0XHf3k/u24zHMpBmxr2dt4UTsu81yK7lNeBmcZt+Myz6WYHR/85uyf
tlzmuRSLLKN2TzvSlss8151vVcXv3uPbcpnnUtwv/LtjtrANl3kuxfdzlRuS
XrXhMs+leKkcxE3a0obLPJeiJGJbc/vebbjMc939WrbJfkBoay7zXIpDfsf6
qSa05jLPpTgyxki78qMpl3kuheb8lo/rRppymedSfG1za23PdyZc5rkUq7M9
FF9GmHCZ51LcbeU6cWxQKy7zXApL95sZgeNbcZnnUvw4YOfYMcSYyzyXYtLx
TsH+tsZc5rkUb17917pfSksu81yKGZ7DE+PWt+Qyz3X/P+Fn20u1LbjMcym6
mUlT3I604DLPpTgeND/cpV0LLvNcN/6lJ3ucftKcyzyXYtNYk+qfnOZc5rkU
TSM+9midacRlnkuR+zw1ZOcuIy7zXIqkd/fFJW2MuMxzKS69Gm7tGGjIZZ5L
cSYvbFTxQkMu81yKCQ5D4SBuxmWeSzG/gtMq/WYzLvNcir5FDoVjpzbjMs+l
GJTTuOhIVVMu81yKiDddngVca8plnktxeEf523s2TbnMcym8M7bM2SJowmWe
S9HMmeMnfNCEyzzXjc/gOS/HL23CZZ5LMdE2xMO6RRMu81wKsd363KTgxlzm
uRRzfj/r0G5vYy7zXDcf4iZFlg9tzGWeS3FiwODR8yoacZnnUhydM3bVmIBG
XOa5FI8HOGy75dCIyzzXzd+EAO9dVo3Icyn6hZzlfSz4n+dS/D284v2qhwbk
uRRDZ/YY47XJgDzXzYeYmBFPBxqQ5zLknn9ypu6flvq5DCMtbmWMctVSP5ch
9F+74lUaDfVzGe7ZhqH4kob6uQxf/Ef/C+2joX4ug3rkDJOS72rq5zI8G9Rj
PZapqZ/L0Ht1bMgvvor6uQx98z67219UUT+XYTdnidpkmIr6uQyz8s7N/Jao
pH4uwxKjmKNrdiupn8uw4MOlwSWWSurnMhyYfbPNrFAF9XMZDg80c/DcpqB+
LkMlxEd2mSuon8vQZNehPr1+yamfy3B+xI+lR93l1M91x/fgrznaQ079XAaE
fcrsmCyjfi5De9OYI/CWUT/XHf/jh+eVuvdlnssw2OrJmTY8KfVzGSTceXFP
nkipn8tw/dA+x4e65555LkP/oaO7NO4spX6uu1/h0158SpdQP5fh2vuHwsuX
JNTPdf//1q01rRZLqJ/LkClYbuPXVkL9XAbrvLb9lur2mcxzGWIl1eVTroqp
n8vw/Gbl2hXLxfT7QjKk3/9y6GJnMfVzGVbbtJhekC+i3x+SwSZ36+Lpuh7N
PJfhRsuosiBXEfVzGVTG+wIGjxVRP5ehXW7/NQ8NRNTPdfdr2VdDsxgh9XMZ
Br4VRO2/JqR+LsOL0mXCGAch9XMZHvsqpEbDhdTPZbjZ8dX2fhoB9XMZLB9a
d+gTJ6B+rpsfVqoS5W0B9XMZNo04n/nYRUD9XDd+Nqe7W0FA/VwG0feXBpva
Cqify9D8oU+5ezGf+rkMC+fV2E/+zKd+rns+pM5dIs7xqZ/LYHRqTGYLBz71
cxlOTB26s9E4PvVzGRK+JBs+N+VTP5fB8KzTRW0Jj/q5DD6Ph8zX/OBRP5fh
stfuyw+u8aif6+bV5wEh5W486ucyJB8ZtjJuFo/6uQxOJ8IT5/bmUT+XofCA
275ITR31c93zt3VGefePddTP5bAe6P/7hmsd9XM55scmrxjev476uRwv4s+O
zi2spX4ux5gTyS323amlfi5H2Ug7ucPqWurncjglr3093LKW+rkcd1buXaDJ
qKF+Lse5r0YP//jXUD+XwyhZ43JiRQ31cznaXl2SMKJTDfVzObjHfcJj/1ZT
P5dj3funR+bdq6Z+Lkeer/nrQKdq6udy/IotOl8xoJr6uRwrK61/NeNVUT+X
o6W7Qf/r76qon8ux7/aNIYOOVlE/lyP2ffH2GTOrqJ/LMSw9d+2tNlXUz+Ww
kjxpGpRdSf1cjj3/Hly4GFBJ/VyOvhu3T+m3o5L6uRy9J6w5sH9yJfVz3f2o
iH16pOX/+rkc6o3Xl4/PrKB+rrv/nhWdHjyuoH4uh6Kuw5ePeyqon8vxqsXL
kl3TK6ify+GpHHog3byC+rkcrp5u63JKy6mf6+5X1t3LRz6XUz+Xo93BjyNC
zpRTP5fD1MN47s215dTP5di4p09Qav9y6udy9FA0S2rdrJz6uRzrTfbGB2SV
UT+XY8E3F9fo12XUz3X3p/ziR48TZdTP5Thwv7lT0Koy6udy9Jva8cde6zLq
53JELfJP+t68jPq5HOMcT03zzi+lfi6H4RhpdNznUurnckTmhPa9ermU+rkc
Hn7r+qZvK6V+Lkft6RuPLk8rpX4uR9aoC6fCupVSP5djem5iqLO8hPq57n7G
jp91KrWE+rkcPx0jJpkHllA/151PpORG23Ml1M/luOmc4nVwSwn1c934xL2J
spteQv1cDq/5A+9d6llC/VwOf/+2y8YZlFA/l2OWs9WJyXnF1M/lWJUpMg38
Xkz9XA6/xmffe98qps/b5djsUGQc6lFMn7fLscUn8Lv9qmL6vF2OxxP2Wi+f
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
4fh/Jbvd5Q==
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw123VYU38bBnBKwEBJfwYGKKJiKyqiuycWKnaLIrZiYic2dqBiNyYmCCYK
SHc3Sneti8V74Dwv/3jtGjv71nk+z72h1Zod89fraGlp/W2jpdXy7+KOgwMf
NhXh0u7jp8OqbnO0Wn+KMXfI6WZDg7ucrAM1/YYbFmNS7dlpL4bd4/jz02et
MS6GfjcVJ3/dfc4xj5A9N7oUY9d3nrjB7wFnYdmL+5G9i2HYftUf28aHnAEr
rv4R9y9Gztlb3NRJjznqzJYLFsOge9bbO/OfcDKYqy11KIZvvLznzLZPOa+j
Z445P7EYVQPSf9tEP+Uchb3bj+nFyNcOOjLn/DPO/G89z9TNK8Y/9QVZ03w/
ju1ww3eWy4tRme1wamif5xzlm5YBFuPTL12rMYrnnDTrArmXRzEuTlJfHJb7
gvOSGd2nXcUw+nFx9NRfLzmHzT9MKzlUjETHf7P83rzizL18e7vpqWI07j4V
svvha46N/gnfSReLoT1JPqj8zhuOwqtlwsUwXjWzg/UDf06KdAEz42I8NPpx
yfXVW87znRPa5fgVY2Bnj9ehP95xDrYs37tiTDDq2dcr+z1ndst0g4ph+Z/c
J0bxgdOnZXghxVA8tfGvNPvEkbVcLpL5/fSRqcUfPnGSElt+irGhx5+wLbMD
OM+mfBGqMovRXZS27akggLP/9+NuQ/8yjydMGfPgfiDHhVk994pipB9dWb9v
+meO1addm3wainHbnpvkovzMkfRv2ZBi6B07fskhKIiT8LTlgsXwMfwwd5ln
MOcJc7W++iVYeqAmOHbkF87eG130FncsQZqLV8rz5i+cGR107M52LkGvOScH
tI/7yunF7Ma3niUY9uZQfNcH3zgiVcsGl8ArSN++ac93Tty+lgGWYK7vtc3+
C35wHjW9Yna4BCO+6lZ7jP3J2c2M7ghKMArnA+b2CeE4lxxq2RFwz8+YccT8
F6fH8nWORXNKYBPt8LNjh98cQcvxW1qCxJTiGwPahXJiWo6LO/N6m+779huE
cR60bO+mEljeHP+ZezmM49myHTtLkL3gfJeTncM5U1uW70AJXDxxepZfOKd7
y3RPlECo88gyeOQfDq9leOdL0N2meG5CzB9OVMvlfEoQscYx/9mqCM69uy0/
zPvdLgmZ3RzB2WF6Kiz+aQn4C/Wnl96L5Ey+uLWq+U0Jkv9VdffkRHG66rXc
YSVYElbQu1NlFKfxSMuBLkGsyarrqT7RnAhxy4aUwHjfwOa4iTGcO9tbLliC
pqLpY4wlMZxtzNX46SXobTd277cPsRwn94pU64ISnLirHp27JY7zX14ycwJL
UIClC84MjufUz2u5QUoweXeeJEsYzwmPb9ngEnya1P1F8e8Ezq1JLQMsgY9Z
nUPIlUTOlpbbV68U4a5etcfWJnG4Lbdbh1Ls9vefOmlCMsei5fYwL4Wo3mpc
T8sUTm3LcbYsRacLed7mWqmc0Jbj17cUOtenjfq9J5Vzs+W4DC5F21Vxr7vU
p3I2t2yvfSnudp9xZ9iGNA6nZTsmlGKgTUGVaVkax6xl+aaUYmzIqg+Ja9I5
1S3TnVWKRjNH+y0V6ZxfLcNbXIqqOC15s0cG53rL5dxKsSXF1v+SMIOzcUPL
TylCE0MH2x3L5IwvmsPcwaV4aDjgUYVRFqflbovdV4qaguSZ8Y+zOC2rJ/cq
xb+Q8l9Vo7I5zGSZA12KmBqbzy5J2ZyWarXiaina/b5tbbg5h9Ny+i7fLsWt
n7PHDzDM5bRc7ffjUuyaP9oj1D+X01o+X5Xi3s6Cuflz8zit5e9TKf5UOKSe
V+RxWsvVt1JU+13S+/cqn9NaXsJK4V3Te1rV0gJOazmILcVRt0FDvxgVclpv
39RSBA17ed01upDTervllcJ+XJ+z1Sf/ctjboxRzJgSv2T7pH6f1ONeUYp1T
UojaoIjTevz4pSixttrxNrWI03pc5KWo7zdjZsTsYk7r9uqUoWeNyYx5X4vZ
7WhXhs7/avXbWpdwWpfPtAxO1VlS4ZUSTut0u5VhZ77Ll+7qEk7r8KzLsMM5
VHN+Rymn9XJ2ZUjsZvLFuayUM7L1pwxJ9d2KVy8r47RU53WOZbByHORflFbG
abnbfCeVIcTj6oZEl3JOy+pFzyxD3IdOV0bEl3OYybYcaDzIPB5mOaOC08rH
ijKkqZyjfBMrOK3lfl0Zhsypv/h6XiWntTxvLcORB/cGuedVclrL6Z4ytO0a
Wh2ztorTWv6OlEFjdt2ujlfFaS1XZ8qgFf/uQtbxak5reblcho7zH0dfN6vh
tJYD3zJc+nQuYcibGk7r7fuwDEadAwKCJ9ZyWkf3ogwGi/r9Hvm3ltN6e3wo
Q+7N5WuDD9dxWo/zlzKoXKImTutRz2k9fr/LsOSqd39JeD2n9bhElyH7XYfO
KZsbOK3bm8zMzzFkbJF5I6d1O3LK0HjhXtPIiEZO6/IVlWHweUV8/p4mTut0
q8og7nwrmmfO47B+lyF41G0LO08ep/Vy0jL4ZgZs6JPCI8/LUX2kb3XxED55
Xo4T1bdLPa7xyfNyCCYf/R4r5JPn5Tifsq1Oe5mAPC/H5eyLpj3DBOR5OQb1
rSjvO0BInpdDKy97VM+bQvK8HME/d/FNtEXkeTkydCv7Ge4UkeflCHpRojYs
EZHn5ThjoxduuVBMnpcjXzo5Y2acmDwvh9fe1T8ecSXkeTlSN8/s1vOHhDwv
x4CJd7+k20vJ83LoFEl3RX2WkuflcLJ6tEAzUkael2NS1z9Hz3+RkefluKfp
NHabo5w8Z96vzrru8x85eV6ONws0VhtdFOR5ObD66oVruQryvBzCblYSh43N
5Hk5OnlWLtsmaybPy/Fr+P6UUZeU5Hk5rBsW+t6zVpHn5WibvrPTm58q8rwc
2y58jvFYoibPmeetzm6vFavJc2Y80jUFI25ryPNyXK975/2qhxZYz8vRyyTL
wsZTC6znFTjXtX/Ef9FaYD2vQOW+WTPPWGqD9bwCo5xLju3eow3W8wpklYdN
q07SBut5BfZfW/q4pr8OWM8r0G6F4M7RMzpgPa+AkYP+Sv8yHbCeVyB80sWB
+ybpgvW8AuYzZiypeq4L1vMKpN4YPlfPUA+s5xWo57+5m7FVD6znFbDr1pDi
mqEH1vMKbFm48pWfYxuwnlfgz7F/9QEv2oD1vAIP9gzzvmyiD9bzCojiZuya
cEwfrOcVKNT9ERfbqA/W8wpsGqb+PdrdAKznFfisqH10JcMArOfM9ce2Tctx
NgTreQWuNstzuoYZgvW8Ak9tC+atcGgL1vMKLH/wXvYyqC1YzytwnB/yTHtE
O7CeV2BomuGkPQHtwHrOXF/8sUZ/ZHuwnldgXfqKyPAv7cF6XoG8hs8934/v
ANbzCvSSRqxJi+wA1vMKdOr1r3HCHCOwnlfgh2P7f0aFRmA9r0T0/OSIRVs6
gvW8EpLjJ+NsVR3Bel6JuivfLX19OoH1vBK1Adkjl5gbg/W8EjdmddN3Wm0M
1vNKbOuktL7x0Ris55VI1zg8ma8xBgtIJapumN84N9cErOeVGP8222KCnwlY
zyuRPcPQ5YDUBKznlRjs/WO90yxTsJ5X4of78Gd+z03Bel6JE4e6zH+uMgXr
eSU25bjnuSw1g0lrQWWeLyv89CLIDJWtnldiTc6bjV9NzcF6XgnOdc/nF3aZ
g/W8Er7DL/frn2kO1vNK3A/oGHNnjAVYzythtPvLwYoHFmA9r4TzntxZ/+l1
But5JRZPHLVjzLbOYD2vRJn+n35zcjuD9bwSgSH7CjZO+Q+s58z66WqbXQz6
D6znlRhteHzXH5suYD2vxAFv+9D/7nYB63klbPJGFt3s2BWs55UYWWSYP8m7
K1jPK+HlviFviFY3sJ5XwuVM7AD3I93Ael6FtL/dHEsV3cB6XgXBphVPQw93
B+t5Fe7JnSx0Nd3Bel4F5ex/e76etgTreRUy7Rwjqzr0AOt5FUZ90B/y+HYP
sJ5X4UzfEXo1fXuC9bwKbr63w1KDeoL1vApb7B63WTOtF1jPq/A3oOLR68Je
YD2vgo6NgLt0XG+wnlfBJ8yl6s/Z3mA9r0JPUddN97J7g/W8Codsi9Tl/azA
el6F2OINqtcHrMB6zjwf2CWxPsEKrOdVSO03v/ZLb2uwnlfB/EtYo9F+a7Ce
V8E6I+SsLNkarOdVeND95eGj/fuA9Zy53hfuG79TfcB6XoXEejPDXcV9wHpe
hbUG8a+bOH3Bel6FIUd8gvs87gvW8yq823dsl4W2DVjPq6AbKZyQuM4GrOdV
cBqqvjYn3gas51WwXByleTm8H9jpVmGjdpND/r1+YD2vQmi7du35bWzBel6F
w3ny5cJdtmA9r8aKE2uH1JTYgvW8Gj0vWb7Kn98frOfV+Hfgvl5qVH+wnlej
ULH5edq4AWA9r4a2zl2d6oABYD2vhvrW6B/d7QaC9bwapreizux9ORCs59UQ
zfsKdR87sJ5Xo8fAqtLffnZgPa9GRc8uF8NsBoH1vBqbt+3Z28F/EFjPq6HD
7aT9bthgsJ4zrz+y6ePr74PBel6NLj8EfTtMGQLW82oc3HV/QHH6ELCeV8N2
y6I3Q9YOBet5NRw9XwRpS4aC9bwah4PvhAVMGQbW82p0q+pv/9FnGFjPqxEc
kX5A/W8YWM+Z9RmSWfR88HCwnlfjI88m/dXR4WA9r8aaA3EJHVKGg/W8GtW8
/1bmWY0A63k1kj6Y2pntGwHW82q0VwU1hSaMAOs58/p50w5VWI8E63k1rBs/
fzx/eCRYz6tRKSu8EJg1Eqzn1XDqKLLcMHwUWM+rYb4s47L/lVHkeTWk9kst
vRtGkec14G8O7amZZU+e10BbrKNr+cmePK/B9nMOc8rMRpPnNah+LX3qenA0
eV6D92cCAy8WjybPa+Bzqe/8Q9PHkOc1GBv52WNI0BjyvAbHxHlaH3uPJc9r
0P79lZG6V8eS5zW40fPz+BGaseR5DVyExzwneTqQ5zV4bSR24lQ4kOc1mD9z
Jmeg6zjyvAb95m0y6pQxjjyvAW/zwv0iF0fyvAbnTgW6l8Y6kuc1eLpwXGLx
1PHkeQ02fBlVII0eT57XwHqCImno9AnkeQ08u+/R80maQJ4zr3d9rO6zkEOe
1+DXIdOV/EIOeV6DtbvOlGhvAnnOrOf4FTvcxCDPmfk1ddU/58Qlz2vwSc+B
d/Uilzyvwcp3dfcTsrjkeQ3WWLULh9VE8rwGT1Z/GsDfNpE8r0G7TRcDy39O
JM+Z9cqwndmrvRN5XgsPbSfJC1cn8rwWd5/8F3/0vRN5XsvkmR+8t1qTyPNa
WD7Z8Np+0STyvBbzT2RN6v12Enlei3EZdwZ66kwmz2tRsGNX3mDXyeR5LYp+
fix1DZ5Mntdiyg7vRi2TKeR5LTZ12f3TevsU8rwWXdfc7RmTOIU8r8UOm356
okFTyfNarJr7ecfHK1PJ81rs939/RMOfSp7XotfxELfaxdPI81rc4Nit2fdr
Gn62el6LoLaL6t/YOONaq+e1+G+R6ZGLV52xvtXzWvy70N/fqtkZ41qBq8Xm
uJ8Ddm+aTp7XYs2fP7HeOdPJ81qIo47sXOs8gzyvhalurY3xzxnkeS0uGk5t
d3PoTPK8Fvd8TrtKXswkz2vx6FXqHk5PF/K8Fno2HVN233Ehz2sx5vlK7Ufm
s8jzWlSUPwuPvD6LPK+FYZBRRZPpbPK8FiGrX7jb+s4mz+sgT8mevrvrHPK8
DnP7tckpeDyHPK/D7PsdP40yn0ue16E+2Xfo9WVzyfM6vM4+9K3dk7nkeR0u
3Iz3f1Y1lzyvw6TdFw+4DZtHnteh2a7jS6dD88jzOuQYcuMXRM0jz+vg5K++
cstkPnleh52LtgV0WjWfPK+DXvpMncj388nzOjz8O3vDN9V88rwO3R0PZfNn
LyDP67Bl3RH3vU8XkOd1GFfR3tZZvIA8r4PDuqlrdsxYSJ7X4dUaE3fek4Xk
eR3Gfz1yOlW2kDyvQ6fEfjMs5i8iz5n5PH/mFPluEXleh9Tgos5lhovJ8zqY
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
z4TLes7ML+nM7f77TLis5yJ0j5tQqhtpwmU9F6G32TG1mbEpl/VcBOsVR950
W27KZT0X4VCo58u8p6Zc1nMRKuv4bc2qTLms5yK4Fd35e36AGZf1XATXvwkv
dTabcVnPmfn1OS+e9MKMy3ouwtGTzsLO/8y4rOfM+Tlu1zTNzJzLei6C1Xa5
76vJ5lzWcxHsi34UGewy57Kei/DhraZ80n1zLuu5CFtlUR0cwsy5rOfM+eo7
cnpcsTmX9VyEGdp6Mf+U5lzWc+b9DX1lG80tuKznIkxqDPZfYWvBZT1n1itL
+uq9vQWX9VyEFbuG+G2GBZf1XISSasWa85MtuKznIiy0Eer3nWLBZT0X4bhX
wWrniRbs7asjRm5b960dHSy4rOdiLNzRPu7aIAsu67kY/IrBWoLuFlzWczGK
7axClhhYcFnPxRCZWj+pbDTnsp6L4aSbaZ+cbs5lPReDO7nrAcfP5lzWczFW
FC5MdbtmzmU9F6P3v4RZHh7mXNZzMYoMZIN8JppzWc/F8I+5PMugszmX9VwM
WZt+I7Wrzbis52L0OPwoMvCrGZf1XIwoc4uiOWfMuKznzPVdFvRvP8+My3ou
RrutisDO3c24rOdiPP09RPiszJTLei6GtxM//Z+/KZf1XAyPCsdl0p2mXNZz
Zjw2rzt0GW3KZT0XI2/ruQceChMu67kYA6/dyDL/bcJlPRejdIq/5YQTJlzW
c6bOc+e1159swmU9F2PJk04TrumbcFnPxUjx9B+jiDXmsp6LIZk+frn7RWMu
67kYC/Y8zvs7y5jLei7Gs2Hv9c4ZG3NZz8WYHnRd3vSyE5f1XIz5XlN6nRrc
ict6LsaEsb6edUEduaznYnSxXzBx1oSOXNZzMfbYrFPERxtxWc/FsP3+IWbH
PCMu67kY9zee+W/t3w5c1nMx8gU/TYM9OnBZz8VIz4/rclTenst6LoZ7m8ir
Iefbc1nPxWg6uuLJ1e7tuaznYgRc6XtL9aEdl/VcjB+THngYT27HZT0X40FW
/tPk/LZc1nMxCl+p1Njdlst6LkZ3V03SJqO2XNZzMdbPFh53eWPIZT0X46aV
Q4+GqYZc1nMxti/a+3lmpQGX9VwMO/tNozadNeCynovxeYTm8bSBBlzWczHu
Rtd3KEzW57Kei1GyfJmw/159Lus5M5+gumEDe+hzWc+Z/bR98/NvdBsu67kY
gxbGOHN2teGynjPr0e/Bz6m92nBZz5nHye/mCJL0uKznYkzuW81x9NLjsp4z
959556fdh+lxWc/FuDA9eOT5Ml0u67kYW9o+MvW+o8tlPRdDWRFubzBHl8t6
LkFIj4me+ga6XNZzCYb6X886EqbDZT2XIP31pT1rDutw2YIgwavOqV0Dxuhw
Wc8lmH/LK361WJvLei5Bj/YB/G1B2lzWcwlMQjIXJO3R5rKeS5Dt8N3+0Ght
8lwCny1LJ2yT/99zCWZve+b9+JcWeS7Bl+w949ud0iLPJXj+acz9l9O1yHMJ
nPsYCLeZaJHnEhyJ4C74HKShfC5BqfzB4mhnDeVzCVZNd1hrWKSmfC7BQm7B
16371ZTPJSho+llYaaKmfC7BQPW+9x4fVJTPmfEsezmo3kVF+VyC0SmbRKsa
lJTPJfgz8Omu71eVlM+Z+Qpnb2wcqaR8LoGMU7VDmNdM+ZxZL0X7b79ONFM+
l2Cm5ck3TnbNlM8lSMrYULM/W0H5XIIl4/SWLjiloHwuAW+6p3HCcAV9fyiB
v26bTVklcsrnEizYENSw6Yacvk+UIGfjus1Hpsopn0vgbdz5in6zjPK5BIe9
V27RCpBRPpcgf1TfcLdNMsrnEhx1/LSom5WM8rkEU9snpQ8skFI+l6A4fdW2
c7eklM8lGGe07brdAinlcwmaE3uf7WAipXzOPL9rSUWfVAnlcwlqniuuelyT
UD5n9iuhnWces86s50xf26ny52bmnLGeM/Nx2RZjniumfC5B+asRHTOZ/pj1
XAKn9pbuT9eIKZ9LUD1v/o59A8SUzyXQD7F3nsU4yXouwYrEOya9f4gon0vw
u+/XLjVM38N6LoHvwoGpz2aLKJ9LsO4JL3laNxHlcwkeOb5ISa8UUj5nxus1
7yMnSEj5nHn/4d+3ep8UUj6XwMjWzPbFPCHlc2Yd3sh73bISUj5n1qE+6fNC
gYDyuQRu1ZPcCyMElM8l2FDwJrT/LQHlcwne9Zlw3n6zgPK5BHtCul1TjxdQ
PpfCwvdZxDETAeVzKa6kzLQNruRTPpeibCJv07MffMrnUlw6NXrI4Bt8yudS
1B05tmqTB5/yuRR6VUOLnJ34lM+lSPZ6MCyhG5/yuRTXt7gX1Al5lM+lsMne
GP4qiUf5XIptkge7ml/xKJ9LYbvoblbZSR7lcym6L4zNW+nGo3wuhfvSK0c3
jONRPpdiu+fCDEVnHuVzKZQPvTRDq5son0txYM/R3fv8miifM+8f2+VGxKom
yudSfBhgY2Lao4nyuRTWmf3CVhQ0Uj6XYq3kw41H9xopn0vxMmXbo/TljZTP
pYgQ3DMRdW+kfC6FZPdPR/XfBsrnUlyIKTpb/6SB8rkUtzoHH/2xroHyuRS3
0weFrh3QQPlcCn29RqPyxnrK51LE7ooeOSa4nvK5FMeH5cmXHqmnfC7FPN9u
qimT6ymfS7GBL/8l71BP+ZzJfcc3vNmZXUf5XIpNSW4HXz2po3wuRa/x6aF3
t9RRPpfC4MvQnpPH1FE+l8I5g1Pip1tH+VyKn4udU4JSaymfM/s137vznke1
lM+l8E3eXVnI5HnWcymSUkdd4TnWUj6XQrej29lX7Wspn0th6LvLRauwhvK5
FCeNBjRK39VQPpciXOF5+aJXDeVzKfqNv+f6bW4N5XMppi3seu9wnxrK51Lk
PUm5my6ppnwuRYno8Y8f8dWUz5m6JFyyZfjjasrnzHpkYMCoPdWUz6X4Vl7h
FTa9mvK5FMsWuUxP71VN+VwKvxfj126VVFE+l+Ju2pmZZ5OqKJ9L0e7wiBPW
L6oonzOPezrvczxaRflcioOfPihSF1VRPmfG531Lq3hIFeVzKUTiibEbDKso
n0vxu2LAzLWllZTPpSjSU13MCKmkfC6F5YmP597drqR8LsPPBbWzDHZXUj6X
4cyhxDcxsyspn8vQMWJwnXBgJeVzGYZoTF9cMKikfC5D+7n9LS6UV1A+l6Fq
u+5pXngF5XMZPlxePyXkcQXlc+b1/bYH1R2toM/bZTiwNcL+6IoK+rxdhh7f
Zoze4VhBn7fLoPPdc2BYtwr6vF0GvzFtrm5XlNPn7TI4LthbfSC/nD5vl2GS
85s/f3+Uk+cynLwX/en+/XLyXIZx7pdnBRwpJ89lCJl7dlwPt3LyXIYruud7
/UM5eS7Dwxv64TyrcvJcBnmj961leuXkuQzDL7+5a1JVRp7LUPb7z4Gu8WXk
uQz7ri1u3vG+jDyXoe2zCTwznzLyXIZ2k1zs9PaWkefMePOqvLGsjDyXoaRp
dGXkhDLyXIY16ZMrfazLyHMZrNM7pr0yKCPPmcc7bQ/pNZSS58z67eBvf5Ve
Sp7LwEnOOnvlWyl5LkOjXRuX749K6e+FZNB+kR3a70wpeS7D+YzCooJjJfT3
QzJM75+TGzW/lDyXwdtn5gOxQyl5LsPGj4umr7MqJc9lKFYMUxi3LSXPZVhv
Hpmo4JWQ5zJMTrhR2juvhDyXIXXKm9Unw0vIcxlcNx7b1dO/hDyXgT/AYYro
egl5zrxfutER/SMl5LkMov2lB2atLyHPZfDVTVsfP7uEPJehdKXhvGNjS8hz
Gcb3OWjhYV1CnjP7HbhUcr5DCXkuwwX3sLH/JMXkuQyD7ubbbigpJs9l2Prt
nIlVYjF5zpyHzetyjL4Wk+fM/LtGtB38rJg8l2HZ65mnd10uJs9l6OlgGak8
UEyey+C54/nWd+uKyXMZ9sY4mV2cW0yey1Av3tn7zvhi8lyG7/kJwvT+xeS5
DOuG+QnHWRST5zK8GfA85pxWMXkux4u/z6efyC8iz+UQTfq62zmoiDyX417n
Uyb9fIrIcznsx2vdT91aRJ7LsXDN9SEfphWR58zvWy7ivbQqIs/lyNy/IrO3
6h95LseCRL1edbn/yHM5DO5oJegF/yPP5aj4WJGz1ecfeS6H5WvDGdbb/5Hn
coQ9dh/Qd+Y/8lyON53DTnn2///n7XJoROfWtdX/R57LIQ6sL6kt+0uey5E+
1NXc4s9f8lyOR28GW5x98pc8l6N0ko8u99hf8lyOrtqhunD7S57L8WDNxrGn
Jvwlz+WIuLk1sX2Pv+S5HBOfoyFHWUiey/HWzTC2srCQPJdjy9LlPmN+FZLn
cvz+LveKe1hInsvR7/7u2PteheS5HAFF89+/X1VInsuhrT3RVc0tJM/l2Ptn
5vTL1oXkOfN+kz6eW6ZXSJ7L0e5fzvY1lQXkObPfnZOmvYotIM/lUIsyZ9i+
LSDP5fAadqJD6eUC8lyOqgVd72fvLCDP5Rjwhe+st7CAPJejcZH8sceYAvJc
Dp0e4dptuxeQ58x+mOjv/KfOJ8/l2Pjl4bPa0nzyXI77+zx0Bsfkk+dy9Lo/
Vf/e23zyXI67/Te0mXctnzyXIzb57q/he/PJcznO1dhaTl2eT57L8cE58fJl
5JPnzPXsPE8Y2OST53K4L7i48XO7fPJcDofHFz9f4+WR53K4OZwteJSdR57L
kXR96sK/IXnkuRzTlw+/PdMvjzxnzp/WC6ua83nkObP+f4K2Bu/MI8/lOCnR
kn1ckkeey/Hv5axpuZw88lyOzTZ7Sgb3yyPP5TDja4//ZJRHnjP7u/JXuZs4
lzyXY8m3MHeHv7nkuRwJ276MRVQueS7HmVu6qh3vc8lzBaQfl4xK8M0lzxUo
1azfPdcrlzxXIPtnh8maDbnkuQKfMq/a58zJJc8VkKQfK8wZm0ueKzBv0Nrf
Wta55LkC+dOu+85rn0ueKzDm3q/COFEOea6A0br6AZv/5ZDnCjy6Fz91QGwO
ea7AhMe9t3cPzCHPFbBoKDg++EEOea5A35Hju633ziHPFSixu/IvfGcOec6M
t2TKxEmuOeS5Am3MfxrXTMkhzxVoN8O5OHBYDnnOjG/TjoVPuueQ5wqYTZhi
GqCfQ54r0N7SIaycn02eKzDSK7mN499s8lwBz9WmFz/HZpPnCqjMTitmBWWT
5wokHnTQavckmzxnfr+/xcfki9nkuQJ/vunKE/Znk+cKHBj464dkbTZ5zozX
Q3XMfm42ea7AlJNl026OzybPFai6OiXWdEA2ec5cvzj80yeLbPJcgbD84ZYX
dLLJcwV65Ax/trEpizxX4EN9h3YLCrPIcwWOGG/4tCUuizxXoDHr14RnX7LI
cwXW7nrrIfHLor8PVmDz7GbFRp8s8lwB3wEiX4lXFv29sALxgTd1nm3NIs+Z
9ezqLd68PIs8VyBhaUali3MWec7sJ0970+zRWeS5AvUb77t79M0izxVo+3N4
zlPTLPJcgVl1m6+ItLLIcwUqoOO0pimTPFfA/6b259q/meS5Aj+eJm32f5hJ
niuw9F2fohk/M8lzBS78tu9u7Z9JnjP7eUqrj9ndTPJcgW9V93/0OJdJnivQ
v4/xy4n7M8lzZr+vmb3z2pBJnitgMCPwRuaiTPJcAeU/276TpmSS5wr0SjCx
jh/1/+/PFSg7eX/F5r7///5cgZDhx+/2Ns8kzxU47TjWr0k3kzxX4OEgq6nZ
wgzyXIFRrluuyoozyPNmtAsuPlKTkUGeN2N2YWxmx8gM8rwZf/uYPF8alEGe
N6Nf3eYhgc8zyPNmGP3a1sPaN4M8b8Z7f8+Jr89kkOfN+NnZbcPkfRnkeTNm
huZskmzIIM+b0fnOsza/l2SQ583QdTtmcd85gzxvxp+vjpsuO2SQ580YvX5p
6s2BGeR5M9qcu24T0D2DPG/G5S/OftEdMsjzZoQf+1dmq04nz5vx++mRphNN
6eR5M5Mv0obzitPJ82Z8vm1wYFd6OnnejLrgM28NI9PJ82aMwoEHgcHp5Dkz
/6dbu+98lU6eN+PoJi3diXfTyfNmXDxoNtDmYjp53oyKIY5rLY+mk+fNONl0
70K/HenkeTO6yroembQ6nTxvRoC3qP3uBenkOTNev4dmwVPSyfNmvP3itbPt
2HTyvBnFuZnNOwamk+fNCLTkXam2TCfPm/Go8nOb3Z3SyfNmGF/143TSSSfP
m6EMvdfplyiNPG+G19yRS49UpZHnzXigWCh2yU8jz5sh3nI5YkhSGnnejIW/
7j+2Cksjz5txy79+k83nNPK8Gddk+9QOL9PI82bcWaPjuOpuGnnO7H9enurm
pTTynNk/s0V2BcfSyPNmyLwCHw/fnUaeN2PaPp/RdzakkefNqH3/Navj8jTy
nHl+kckq31lp5Hkz+B2NPthNTCPPm+Hn9vd52qg08rwZqzlz+p/tn0aeM/N7
59bFxTKNPG9G+iXBwt7GaeR5MyLc24Xp6qWR582IqV0zUSJNJc+bIcr9811a
l0qeN2P5HGdTw+JU8rwZpTNThtlmppLnzUjrMyJvYWwqed6MfF6IqU9IKnne
jIHvugQVfEolz5sRWjL35agXqeR5M5bd9U24fzeVPFciNTRT3+RKKnmuRMbG
BKebJ1PJcyUiF19ZZ7M/lTxXYtmSQXMjt6SS50r0khnW7HRPJc+VaGq06WG3
KJU8V6JN6IkUwfRU8lwJi0fny2I4qeS5Em89l0z2H5lKniuZ/rUw/27/VPJc
iRG3S66e65FKnisx41sk94lpKnmuRMVUg5IvBqnkuRImWQffBslTyHMl6hsm
97UoTyHPmfcb91branIKea5E7+OzL1h9TyHPlcjXzZ+W5JdCnivxrmJ0ts+V
FPJciVmvntRtP5hCnisRsEJn3bp1KeS5ElU6iZn7Z6WQ50pIx45U3B6XQp4r
4Xy+7luWTQp5rkT58xWT7UxSyHMl0pIHL7mjTCbPlRi60zfOsjqZPGfWr3D4
hW8ZyeS5EvvHzbkd/CiZPGfmEzZ5mP3bZPJciU3TRAUWt5PJcyUCo8dbGJ1K
Js+VMHCOP3Ofecx6rkTRtEeJHNdk8pwZz7dzkgPTkslzJS4WnbeOG5lMnisx
rc7rv6G9k8lzJc5zzxu/7ZBMnitxZ2ZEeLgsiTxXYvTXBx02ViSR50porgnO
bE9Pov8PpMTJ06onCE0iz5XIEzzf9OLd//8eTom5OqOnP72bRJ4r8Sc4JDTA
O4k8V+LSCtNf3ruTyHMlPksUEaHuSeS5Eh4d7nY3mp1Eniuh2PjsxXbHJPJc
icwvV8eX908iz5nff3Q0blvnJPJciV8el23a6yWR50r4vbw/OISfSJ4rsVq/
a/jxokTyXIm7Ko+opUmJ5LkS+x4f7jL5ZyJ5rsSxNe1vO71JJM+VKJx0rs/C
24nkOTMfQ/6PA2cSyXMlGs/FNHzcnUieK+GdNamNYnUiea5Elte+CYvnJpLn
SiwaPu98FCeRPFfBWH2vdurgRPJchRnjZ6Tnd08kz1VY4hfhcrxdInmugmuO
tWiMPIE8V8HWKfSJdnUCea7CQtc07b/ZCeS5CpXNfQzjoxLIcxX2zXB6FRuU
QJ6rUG8b+TnXL4E8V2Guwvk/xfUE8lyFrjadAwadTCDPVbg/aPy+nZ4J5LkK
NhcCHaPcE8hzFVL6T6gfODeBPFehJjfI4ykSyHMV3lgE3u0/NIE8V+Gy/5Kd
YT0TyHMVchW2KZs6JpDnzHgG3b9spY4nz1Xgez16UNsQT56roL6l+zLibzx5
rsJb+ajh75PiyXNmfTuve//yVzx5rsKDyjk6n97Hk+cqWJQm28U9jCfPmfk+
vm4luBxPnqsQe/qc70CvePJchQYBX7x9ezx5rkKb59728W7x5LkKWr1GWQ6f
E0+eq6DsPnTKK8ST5yqM2/jzyaBh8eQ5M7+tfbqF944nz1XQXI+4ts4knjxX
YfFdq46zdeLJcxW2rOpgkyuII89VuJHyvffrsjjyXIXU5VfCvDPjyHMVOI9U
wt1RceS5iunv9z/b8SWOPFehUPts6MFXceS5ColpxwdfvxNHnjPjKXmT++18
HHnO7Hc3z48Nh+LIcxUaZ525N2xrHHmuwqJO9qdOrIwjz1XYdaN5WfHsOPJc
hbNVOwxncePIc2b/xyw5HDM8jjxn9r8m+MqwPnHkuQqdVv5eUWEeR56rUPHd
58k5/TjynNlvQY8VDrJY8lwF+w9PjkhrYslzFcoj9Gr+FMSS5yo8G6bncz8p
ljxXIVDWyfVEaCx5roK+zQbnPQGx5LkK3kuWjNjjF0ueq1DiIu1wwjeWPGde
/zP5972zseS5Cr6ne8wIPxhLnqvxXf7yrGhLLHmuxrV+HbeOcoslz9VYcf9V
6fG5seS5GouHPCzNc4olz9XoY7nzHOxjyXM1VPl5GwNsY8lzNSytFt0e2i2W
PFfj2Pr+hj86xJLnahyeWn9nriaGPFfj5MJIp2/8GPJcDa26zrbPymPIczW+
pnjrrMyJIc/VeHUm9mef+BjyXI0x+a/nS0JiyHM1ClY+DMr8GEOeqxF3z/bV
72cx5LkadltLDgf5xpDnavyu68QPPhdDnqsx4Methj+HY8hzNcbPnLe+YHsM
ea6Gb9zriZrVMeQ5M95+/heGLIohz9Xg5N7sttk5hjxXI7PnoNoPjjHkuRqK
BzdrNUNiyHNmPc6+MlhhHUOeq7Fr10unCIsY8lyNhk+lR+zbxpDnamzcavk+
UBlNnqvxfH112Dje//++nRm/kzgoqSyaPFfj/CWj3VtyoslzNcJvn6s1S4gm
z9Vo9OpkHPM7mjxn1vPbxJzTgdHkuRptrHyHz3oZTZ6rcavkoHHve9HkuRpL
O47epLocTZ6rUS3Rsq04EU2eq5E1JdspZ280ea5GuweH32VsjibP1Tjq778k
f2U0ea6Gy8kto+rmRdP/91UjKmyWg/7UaPJcjbS721fajYsmz9VwvfM94kmH
OPJcjbwzFV9vWEeT52oU9tiWmt05mjxXo+2a9KI+7aPJczVurh4SfkgTRZ6r
Ufa1684CYRR5rsa8TgOKp1RHkefM/XAwWPm9MIo8Z87DiH3pY9KiyHM1VpnO
Hh8aFUWeM+fn87HRc39EkefM+k7SfKr9EEWeM+/XPPnNFb8o8lwNzSRT4/F3
oshzNQQ1qZmCS1HkuZrpPyvqA09EkedqTHxeOPvIvijyXI3KdGHT7C1R5LkG
Ebp+xwe6R5HnGqRNlx/utCiKPNdgxLc7marpUeS5BmFxj5pFnCjyXINRiS4D
xCOjyHMN9r/sMF/dP4o812Dm9zmbjHtGkecaaC247G5nFkWea3Dh2vuRcwyj
yHMNxMZzCw+rIslzDQovR08OEESS5xqUWl04tqoqkjzXYN+z5cEvCiPJcw3s
PVx/rUiPJM81CHA4rhUcE0meayCa0Dvf4lckea7B1A2cLsafI8lzDXIMOA9O
vI4kzzXIj+eNuPEwkjzX4LJj1EeLG5HkuQbtvLW8n5yLJM+Z9XBd+XGkVyR5
rsE8//Y9UnZHkufMekxUpu/aHEmea6Cfk/qr56pI8lyDX3aRqekLI8lzZj+2
G7a5OiOSPNfggLvLggXcSPJcg4EFHflnl/8hzzVwif5gIbKLJM81SJ/3dm+q
VSR5rkHexyWxQf9FkufMeNJUek+NIslzDYJ/re3jqxtJnmvwKFK3m488gjzX
4It5SOHNpgjynBnP8kb3JxUR5LkGa8crnn0uiCDPNejssuxJcloEea6Bx7hy
J35MBHmugeKCxdnuvyPIcw2KJ9uumxUUQZ5rMFy/KVAHkeS5BsmrOkbHPIkg
zzVwbL7kYHw7gjxnzqv+uD7ulyPIcw2cQ/ce+noqgjzXIMMieXjnQxHkuQa1
4ZrZR3ZGkOfMfi4r/lGzIYI81yAkbbun28oI8lwDC8Wio/kLIshz5nxeuX57
5YwI8lyDweIgrWpuBHmuweq2isSDYyLIcw3mbkm4ZDokgjzXwOfVqo2BfSPI
c+Z6OcuXLOseQZ5rYJRxvYeBaQR5roGJt/6QEMMI8lyD+XMW9j6g+UOea1AX
6uHkKPmD/wFNrvU6
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw122VYVO0WBmBAUjGwE1vBwM/AwHhGbLAIAxMVFBQRsMXCblEUERMEERUL
GwOD7pburumOs2HW4Y+X1wx79lvrXs8wM3TrHltnLQ0NjWIdDY22f1d3Gf/u
QWspSut0vH6PnQSN9p8ybPJ4d6/IcxJyDtWPmqhfhrFLOn9M+jwJzzmZy7Z2
K8Po8IDEGxqTcWLnt31+fcvgJHOo/W/JZNhXht77O6QMlnOrjF/cnAzTDdd/
C0zK0O3q1gtaxZOhzG67YBkG3QnGDJMpyGKutnZGGebtHuxss28KnsVaT7s4
twyNswyNl/2agmMw3/R1SRl8pm++ZdbVHLafjc822pRhdkCRULTRHKMn6r8c
uK4M9h+HHn4RYQ55eNsNlmH1ojd21kpzZAwrlBzfWYa6V5I/+Sum4ilzd2+8
ysD12GnoEDwV3j1fLSo/UobCn/v3JQmmYuXVO+7dT5dBNjpo8WSraRip63N7
3uUyBK/1Lbj5aBqkx9sGXAadTkY+TYJpSBPZMSNmxq83OsBy2XSEeMzumPek
DMLFfX3uhE7H4bbpe1mG26zDwc3K6VjeNtz3ZQicOsNlkcMMDG+7vW9l+Jb8
al7Y+xkQt13ubxmOPwp50dXIAinJbT9lgP72gafdLRC84CNPkV2GVlVSH+0U
Cxz88aj/hOIyJAyzGnl73EwsZWbPsboMT3NkGdOvzsTQN14uN5rLUHTl7RtO
y0wITdoWpAy15kqH3zazkBTUdsEyKH7Pd4v4MAuPmauN0C3HwIKYyx/6z8Z+
v77aq7uUY0lYxNbik7NhZag19nzvchRlDg0aXTcbg5nV+Gxcjs/3Vij8V84B
X9G2wOWY1PvIZLOvc5BwoO0Gy8Hy1ddljwAetoYxK1yOD/1vzy71BfYyd3cU
5RBMlz1TKoDF5UfaVgQT10deM5nKwqB1TjNLV5TjjM3EqKbdLHDbtt/acjyc
ybda9pSFuLbt4lgOj9fT3lmXsnC/bXldyhGSe8ylvu9ceLYth0c5ts+6Uzfa
bi4Wtk3foXIMe/P8jf61uRjQNlyfcqTMmm15NWEu2G23d7Ec88wthn3SsURM
2+VulMNNO/T+RUtLBN5t+ylHl3UXBB1PWmJP99PRiUHMeGd8eIEflph/2a1W
Fl6Omeb8a2MVluin3XbCyvH2xPchmbPmoeVo24Yuh9lPu/dTj83DH0HbgpQj
IPXW8Q0/5iHAve2C5fC1/e/RQo352M1cjZNZjj9F/qPElvNh6VidPqywHOt9
jPrvOzcfffJTmR1YjhyLLwe+J85Hk03bASlHKPfd5LyuC/ArsW2By/ElpXHe
31UL4D+v7QbLMdjQ+875+wuwq+34alfgZvWvgSOqFoDVdtwMKzBA5PDr/riF
6NV2PHpWwKSk2Iu/fyEa2rbzwArcXndrsFn0Qvxs234jmP/31/60tNMi3Grb
LuOZ/yfuG2O3ZhFc25bXvAJ/mxx3zw9ZhDltyzG7AlkTCvcP5y5Cj7bpW1CB
zi71s3isxahrG+6yCngX5/746LsY39tub3UFcq1PyDzKF+Nm2+U2VSD7jZ9w
xOQl2LG97acC+Wn5n3LOLsGs0hXMCa7A8nE7rM/lL0HbaYs/UAGjfv9+zTCz
QtvsSY5X4LTT6f94p63ADJbZ0BV42e3F2w8FVmirVhuuV0Dr8HOnM5Os0bb7
rt6pgMa0Ye5bL1uj7Wo/HlVgt+EwsW21NdrLZ1gF3na1meTAWor28vemAr1W
9rQ9dH8p2svV5wqcN35/M1KyFO3lJboCniNOmndZuwzt5SC+AsKdXJ/Ln5ah
/fimVyDKKyPGrO9ytB+3/AqUH7BZJTu8HOrjUYEA/pTL/KLlaN/O9RWoudIU
P2juCrRvP04Fmuw+HjjydAXat4ukAqUrSjTP665sr6aGWpXoOLk/b7fFSrQv
R8dKaN//nsJzX4n26eteiR97+9v3D1mJ9uH2r8QDzylLK/NXov32hlWiLjzt
xMpuNmi/3NhKHNc88W3bIhtMbv+pxJbL77KMT9igrTo7zayEZXZM4OlPNmg7
bbfnVSJqcJdGP7YN2mYv1roSfwLrgmzG2IIZbNuGxtlz8Y9/ONminY8NlSjc
tCCl6JEt2su9UyWKlSZGrwpt0V6e3SqxPfbYuil97dBeTvdVgv/7/j3PVXZo
L39HK6Eqnpm0w88O7eXqbCUW9Dha1TfTDu3l5WolDr4R1Zwzskd7ObhdicFB
6bmRNvZoP74PKrE77se3oJv2aL+7UOZ+nYyf2mbbo/14vKrEhZvKkPjeq9C+
nT9WQpgyIV1n3Sq0b78flZhzx3ae4cNVaN8usZVYPKrGuKRiFdqXN7USPaeu
uXDMZDXalyOvElW1XZ43ua9G+/SVVqLip0/k+I+r0T7c2kqYf5uTb6lcDbXf
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
uktv53VvyPMW+HW586Ll4hvyvAUDOwfv6vL1DXneAr7e7P2xDW/I8xZEjtjO
7jvwLXneAtsv07roL39LnrdicnBPA/+Tb8nzVjy6nDMiJvIted4KkymiV3dq
35LnrTjwKkHZdeA78rwV+s8e7//P5h153ooLUdonZOfekeetuJJd7bv3+zvy
vBUjXqaOvcd/R563MuvRr3DfuEjyvBWDF4807+AcSZ63Ysq3q4WLH0aS560Y
unmr9+J/keR5K564OKZo93hPnrdC13q8/8nl78nzVmQ/uvn0x6X35HkrXuyI
KvwV9548b8XPUK/BV3U+kOetkG3a5jJ8/gfyvBUNOuu+nj/9gTxvxYAN50d9
//OBPG/F6yU9g+K0P5LnrRidnXf75cKP5HkrppcZvPK4+JE8b8W3ySdt+qZ8
JM+Z+TuamRVm9Ik8b8WnebtOD1/ziTxvxewyo7fXH3wiz1sR9MTtPbvqE3ne
ipMftFutxn8mz5nx9d6fGnzgM3neimU6/VLl0Z/JczbGNe04tNHwC513Ntb1
6++SsPYL+c7GZovRSxY8/ULnn43PUeH5Ofwv5D0bT26+ajgx/yvVAzYcooSO
i29/Jf/ZWDz1lfmU2q9UH9i4Yjfg4GKLKOoH2Bi7Y/GSS9eiqF6wseZ8eI2y
Mor6AzbO+/98/MLiG9UPNsIffCm7ffMb9Qts6M/vZfKn8RvVEzZMusNoxsLv
1D+wYWMweaUi6DvVFzaudjKO7KX6Tv0EG6f2awy/sPEH1Rs2pi6wDVn3/Qf1
F2z86Ru+xs/4J9UfNvysHI9M9/lJ/QYbYdvn7VhZ/ZPqERvb7j5I8hgZTf0H
G3u/KVdK1kZTfWLms3Lz4AVXo6kfYWNF6IHgNb+j0V6utrMxWbFn9RRxNPUn
bBy9tTy+xOwX2suNOxv5/6z8123/Rf0KG+KWKR4vHv6ivx+yAb9/fXLyflH/
wsYX6dYthUa/6e+JbPz7kzj599Lf1M+wsV3f4uLVC7/p/Ug2rj8+smduzG/q
b9iYEeakX6H1h96fZGP/ihWX9s79Q/0Os/4DzrCkJ//Q+5VsSM68v3zk1x/q
f9ioHeFVIdb6S+9fMuvtHp5xeMFf6ofYSNMbrNC8+JfyDxu78loH+6f8pf6I
jX4pPTrP7BFDeYiNyOOVrwUOMdQvsZEc8tgwKSiG6ikbP89pzo1uiKH+iY1i
l59nCqbEUn1lo1NHkzGDT8ZSP8VG0rx3D/2SY6nespGXf3vX7P5x1F+xIbiy
feow1ziqv2wYHn/3a9GXOOq32BjPf9Ic2TGe6jEbWreefnbbGE/9Fxvu/bux
Dr2Np/rMxqVnydFFugnUj7HRP7JLwOONCVSv2Vj5RGt+4ocE6s/YcLQ45+TY
NZHqNxt/YyqjXHcmUr/GxkjzGxOaYxOpnrORacyL54xIov6NjWl/h388fiaJ
6jsHV4b+sLpXnUT9HAeH+kVorFicTPWeg8A45aGgl8nU33Fw3uDb0cDuKVT/
OTBa9Fcx90gK9XscfLgY0edxZQp5wMG0+mfdvi9Ppf6P+f+GXeuColLJBw6O
cPr7rRqTRv0gBzeOsc5VBKaRFxwsLivxf6abTv0hB8t1nRxyWOnkBwd9Pu2d
JvdOp36Rg9Vmx4RDP6eTJxxIRMb7rQXp1D9y8GNFxItjkzPIFw68f319+d0r
g/pJDjZ2fBLaLTKDvOHgsHnfUm9+BvWXHLxjv/2uPS2T/OHgTPcTv98cyaR+
k4ODVncvn/2ZSR5x8JvzNfuCThb1nxyIuLkHo5dmkU8cuH19t3vS7SzqRznM
OT+VWlWSRV5xUG51NrPYNJv6Uw6Gz3+WOfxANvnFrMepEUu+/8mmfpWDy6Lh
mW+655BnHIRFOY/T2ZZD/SsHZWOqZvx6n0O+cZC58qhGk14u9bMc7D/l//zK
hlzyjgOuNO3883e51N9y0ME2tPOyjnnkHwe97g76570tj/pdDnSa9z+f8yOP
POTAjpWy50H/f9T/cqAYmj7z8aF/5CMHO2Y4Wa/494/6YQ4eTbTTiZyRT15y
cPMnX5p1P5/6Yw6GeOTVfdUsID85uFe845OHSwH1yxzw6m97K9MLyFMOtK8d
PLh7ZiH1z8z6JNX1jwsrJF85CICJdq/eRdRPc/Apc4/GlnNF5C0HvVsvGH4Q
F1F/zYHB0/WrBuwuJn+Z/dL30PSHlcXUb3Ng6HV3/uINJeQxB54fhlqMyCuh
/psDjytXO822LyWfObBklRY/yCqlfpyDj+IT2uFjyshrDk4bdLryzq2M+nMO
WrrVOXFel5HfzH6fZXNhF7+M+nUOxlzxNhhtUU6ec/G9S1ivMT7l5DkXVxNH
8Y8klJPnXKQ/2qw7pEcFec6Fg9P3uMGbKshz5vm7HqScfF5BnnMxMXR83BJx
BXnOBcsNx3wWVZLnXDj36ZxpFlBJnnNxdDEnem1DJXnORR9Ol026c6rIcy52
NNXlzPGrIs+5GKBb52bQUEWeczFnQurx3ZbV5DkXHQN6Hfe6X02ecxGy3II3
WFxNnnPhIWzyPraqhjznoq7n+MSb72vIcy76b1vyZEevWvKci5Yjf0s6HKol
z7m4aDrQeU9RLXnORYa/p9k7yzrynItlTt3mZj+vI8+5GJeU+bq4Zz15zsW/
SMeA3JP15DkXh58uGhrXUk/5g4vhO+oPftrUQJ5zYSaYk/o6vYHyCBfud3ev
/Ty/kTznYu3tsVb5XxvJcy4eSzhZ/Sc3kefM/PWUDD4b0USec/GrQL58yJhm
8pyLm09i9/GfNZPnXNw9dPiWwZgW8pwLczy8vyOihTxn5qOhaWtvpi9Xe87F
/Oa0R4OiWslzZj7Ope37PYxNnnNxzT0uz9SVTZ5zYSEzCYxnXFZ7zsWesCnz
gxmH1J5zYePRzfIrU3fVnnMxw/BeWY/rHPKci54/u1u9Y86R2nMuHjy6dirA
lEuec5E7YYlTwiEuec6F6ZKoe4sSuOQ5F/v2n3vSawCPPGeeJxgfbe7OI8+5
2JnzQBb+m0eec9H15Ykh+/ryyXNmf37b8OH2Hj55zoXXuauirvF88pyLudqi
nMqhAvKc2W+9/RuNjgnIcy5sNQoOB+YLyHMudg9O23psmpA856Jx94DhX/2F
5DkX/RJTk1aIhOQ5F+dcDeSzHETkOfP8jd4FJ76JyHMuelyP7tJ7qJg852LI
4Adf5efE5DkPWd+N9/7XIibPefDo/mxGxGoJec7DRe2mfe7REvKch7ubS+vd
x0rJcx5my8PeP7sjJc95eLD+xtxeOjLynAfl+q4LI/bKyHMeuIf+fXGplJHn
PLgkDk2fYy8nz3mwjtHjjIyVk+fM4z4TInvMUJDnPKzuEZEjf6kgz3nInDvL
ImeokjznYc69/NLrd5TkOQ+WtxOLjbuoyHMevmiP2Lz3rIo85+FPdMnDYwoV
ec6DxpYFXr1narDUnvOw4d2/6E8HNVhqz3l4XCLbcfe9BkvtOQ+dOxgEvOVo
sNSe8yAISNYWmmmy1J7zMDaqvnq9myZL7TkP/0yiRXnhmiy15zxwFIVHN9Vq
stSe85D8XYjKEVostec8XE319XfYqsVSe87DS7ap0/tHWiy15zzcPmtsXFOk
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
AaZl5LkYFU+vP93St4w8F6OPxSqvOL0y8lyMQuOc2ICWUvKcmW+Dp8vKUkrJ
czHi9y/NcYooJc/FcIjr823k1VLyXIyqBXu2DttdSp6LcVczccy6ZaXkuRgZ
BU8PJ48vJc+Z+Xh55sOhLqXkuRjH7xQs3NRaQp6LYe/RLeBoegl5LobR0oO9
st6WkOfM+TGzHL/Fr4Q8F+N39vEVo/aXkOcSuIR2aRm6poQ8l6D2w6OjdjNK
yHMJfPmhHl8HlJDnEiS72c9drSwmzyVIe+a/Y1R5MXkuQecJHTeN+VtMnkvw
doD48ZawYvJcAm728ldJl4rJcwlWFNzTcXEvJs8l+ByhYzLVtpg8lyAud0GA
+dRi8lyCQmVwgXP/YvJcgq2jGvfFKovIcwnGcHe3rK4sIs8l4HQTpfWOLyLP
JRj9Of6JTkQReS7B8On+gmE3i8hzCZ48PW7rfrCIPJdA9EhvSe2GIvJcgqBB
fV2vWhaR5xLUbeXNczQpIs8lGKKc7La5SxF5LoGiJHb/JX4heS6Btk+NoKyg
kDyXYOaY3qe3/iokzyVYOXvQhy7PCslz5vFHWiOrrxWS5xIETtDfXb2/kDyX
oKv9U5OuGwvJcwkO3D7P3zK/kDyXIGDFGffisYXkuQQqz4fmPj0KyXMJvtoq
6pfKCshzCe7eqB/HqiwgzyX4ZZjweF1SAXkuwbDq/vX3IgvIcwke++193uF+
AXkuwevOhy/dOFNAnjPzJymZsGB3AXkuQQNvq6Xx6gLyXILYkvidA1FAnksw
aFGeLUwKyHMJJmXZhZ4zKiDPmf36S9WZK80nzyVo3Xdrhk9VPnkugVG36JzJ
qfnkOZPTBw67YfA5nzyX4BMWD9AKzifPJRiqej5i0JV88lyCH1efb1p3IJ88
l6Bj+GXvL4755LkEpj77zCys88lz5noRrmOLzPPJcwlWm1mPfjQknzyXwOlg
Rt6pTvnkuQT8i5d454T/yHMJLvTJm/ii/B95zqzHm1qr1uR/5LkEk1VfRLaf
/5HnEkzs2Jub8+QfeS7BwHOX+Qev/yPPJehktufrdO9/5LkUs0z+qfrs+Eee
S2G474FPL7t/5LkUu7baKf7DP/Jcil99lkzcOfYfeS7Fqz7niqL7/CPPpTAq
iPsxRfsfeS7FZdcTATHsPPJcCt1OaWP2FueR51Ksbzk/bXZiHnkuRXjtaJ/h
n/LIcykCJ+YljgzJI8+laJ22/d+8G3nkuRSxO63djx3PI8+lSO8XZJO5K488
l0K1ZvhiS4c88lzK9IPj+6YszCPPpdgz5usFryl55LkUh4Zv3DJpWB55LkW/
vQt2GnbLI8+leOA0w01DmUueSzFTdeu/Lk255LkUGcaLfcwLcslzKTrfyjY5
EJ9Lnksxx3opN+1jLnkuxeYjK8ItQ3PJcymCcjr2T/XLJc+lqEk0N/I6lUue
S3HqT7cNZp655LkUv922xWs55pLnUlzQ9R7RujyXPJfC5rMJeLNzyXMpFjb9
rO0yPpc8l+Lsm54tcwfmkudS9DI+MuxKp1zynFnP2OhVzdIc8lwKjDB3cG7I
Ic+luNnnoZKXn0OfD2bmy3Fm37sJOeS5FLeG/T1k/yWHPi8sxThPZ97I8Bzy
XIqS/Oj1ne/mkOfM/pI0nO14MYc8lyK0186Fgw7nkOdS5H6a4rXANYc8l+KO
7ZuSUw455LkUmbWvt+QsySHPpdj6wStjlkUOeS7F0ppg7S9jcshzKQ4vts9c
MiCHPGfGp9ehe2unHPJciik7b957Js8mz5n9FmC96EBzNnkuReGWouY1Jdnk
uRSj9Ve7LEvLJs+Z89N9nO/q6GzyXIoRQyZj79ts8lyKab8frXgSnE2eS5Gy
Rud+jV82eS6FqMVeNetsNnkuxUXTIvunB7LJc2Z+Rs4/NMwlmzxnXn+n74K3
DtnkuRR/cwfdtbXOJs9l0AkIWqE7O5s8l+GlscnCZLNs8lwGTv+e60KGZJPn
MiiPDHK91j2bPJdhxu6VNpe0s8lzGZ44G3LuCLPIcxkaR3UY/akuizyX4Vrq
tMzagizyXAb3KkWGaUoWeS7Dmd1inWM/s8hzGbI0+y0vf5tFnsvgXP3w0uqQ
LPJcBu8Rve8X+WeR5zLcf7d6296LWeS5DBlXTv/qfzSLPJfhaYlBQKZ7Fnku
w7Qxj+MDt2SR5zKwvRaY77XPIs9lWLaLFb1+URZ5LoNJqPFSe4ss8lwGyd/I
qA3js8hzGQI/9eXuG5JFnsuQ3vA8836P/38eToa1FzrNzdb9/+fhZHgQaTx0
gDSTPJehOKHjGs/mTPJchuaQaXG5ZZnkuQxLy5atts7OJM9lyBkytT41LpM8
l+HKpr7OW6IyyXMZBkxc/1rrdSZ5LsMq4ycR74IzyXMZzBszFnj6Z5LnMsha
dDbNuZRJnssQ4nK3qN/xTPJchm25Q5918Mokz2U4vGJPmMw5kzyXQVh6+Zfm
ukzyXIaomq/FvZZnkucy7N9/qHKaZSZ5LsO7d4e+7piaSZ4z458dZhU6JpM8
l8H+9qijbONM8lyGhcdXTFvSI5M8l+Gr+xun13qZ5LkMkyWGzcPkGeS5DNst
Nn55ws4gz2WIWJzybmJ1Bnkuw4bQb7+T8zPIc+Z6r79n7kvNIM+Z+eh3O9n0
TwZ5LsOrzTMCGz9lkOcyDJ6TOfLrywzyXIZZZp8dbgdlkOcyzC/bO+SYfwZ5
LoPi83cnz8sZ5LkM4SuPGXmdzCDPZdjNizc6sT+DPJdh5/DqlQE7M8hzGdYM
nP/1++YM8pzZb2vPzmi1zyDPmfPWZ//XcVYZ5Lkch2s7mR5ABnkux9Gx7p5J
UzLIcznmPG88MW5MBnkux+m+KtbdwRnkOfP7YcuCjHplkOdy1Pk9vXq7YwZ5
Lkf6Ry3eCI0M8lyOLX3O/PgpSCfP5cx67S92bkwnz+WY1NFqdp/ydPJcjoKY
+0lZuenkuRwd8N+Be8np5Lkc+oNbxrj/TifP5dj7tybP+nM6eS5HY/HKXVNe
pZPncszSvZg1OiSdPJfjyxYj1cjAdPJcjjuzbhSZ+aaT53IEP89eZ3kunTyX
o2F0sovj0XTyXI4fFlcEF7zSyXM5fHsvY0e5pJPncvzH2rlYsimdPJcjf9LW
ZtaqdPJcjsu6uak3rdPJczkW97lY1DI3nTyXY3+Eo+6q6enkuRzjwrbNijFL
J8/l+DzsqztGppPncqSZRlz9MyCdPJdj0KanF226p5Pncrg9nWBXr59OnjPz
/bX6Qy9VGnkuh6vSa7hbUxp5zozny7/0nPw08px5Pb9Rj23j0shzOQyDwvdW
vE8jz+UIjGscfzY4jTyXQzEq8q2Fbxp5zozXR7NC63gaeS7HvbAewcW70uj7
QHIMrHLMSXRII8/lMN0VuDlxURp5zqx34vMRReZp5LkcHR0+6GuMSCPPmfl9
1Ytt3j2NPJdjW6/NP49ppJHncvhobFif15JKnjP742zncMviVPJcDq2851d/
JqWS53LERz1uWfY1lTyXI7LrjbfNz1LJczluw/bbwzup5DkzvwktfMdzqeS5
HGO/h8ydsj+VPJfDHtUX+jqlkudyvDW0f9vZLpU8lyNUFRvUwzKVPJcjxH/B
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
i/6K/uJ/dscUZQ==
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw123dcTf8fB/C0lNlQKGUnOzPzvq6RnZmsZBPZMuObbDITIWRGZhkhIe29
SxHd9q679/jdOu/f/cfjPrr3nM9+vl/3Xr3X71q8SVdHR+evgY5Oy7+unYa+
u9dcgifBh/udNH3K0ml9cNB57L1xu9Y8ZeUfqrUbYcRBmpLdzvHNU9YLXo7z
ehMOVty9tbtY9ZTlsy3K63o3DsoSBs1YNz+E5VL+NCiuFwe9HX95JAaHsAa6
XYkR2XOAyOIvJvwQljqv5YIcrHMqsYHTM1au9mrLx3Ow27LpqMvtZ6znCXMd
z0/h4CznfMzipmesYxjjHjmbg6X6L/9OnP6ctfiz7en6RRwMykuMNg16zhow
wuhVj5UchJf/XlfAf85ShrY0kIN2G7dG+s0NZWX3+SP7bxsHf/3OJ456GsoK
0bYubC8H19rXns/ShLK8u7yZWXqEA/6lXIONq16wFl4K3Gl2kgNnp/HTuJ9e
sPob+t6Y5seB8emPzgctXrLk/7V0mAPulhujFftesjIlS7Q95kDn5L92/+W+
ZD3ZPbndr8ccXH+6tLrN6Feswy3D94qD+SGnK87deMWa39LdDxwkT0roZSF9
xerb0rwo7XjVTv3+fNVrlrTlcnEcTKxpU+4U/ZqVntby4IAzpv5zU/83rEdO
EQJVHgfL72bueHrxDevg92Cr4X852Jm9a9R24RvWPO3ora3kIPThSTitfsvq
HbbX41ojB+0H/kwdmfiWJbZvmRAO+nXkX7DuHsZKfdhyQQ7yz/8ePmhBGOuB
9mr9DEux0PfcwYTTYaz917vpu3Yqxbc50jO8qDDWnA66g89alkL61/H0K2EY
q6d2Nj7blsIwaFuQdEg4S6hqmeBSyLqlCws2hbOSD7Q0sBTLlZ+/zwoOZ91v
fqad4VLI857bLygKZ+3Ttu4oSnFeb9LGevN3rFmlR1pmBE9DJjy1XfCOZbNy
48SSBaWIuHK7d92Fdyx+y/JbXorH+M90QeI7VmLLcllbCof6qW/n679n3W2Z
Xo9ShJ894lg35T1rT8t07C7F4BJhTZ/j71kzWobvUCkMXsfoy7+/Z1m3dNe3
FEEx4zN2q9+zuC3NO18Ks9GyC+dYH1jxLZe7pm3fpcYTU30+sO7cbnmUwttk
qc6D6A+sXWYno1MeliJSFrvgke5H1nS/7dWK0FIkZdpHz3H6yOqu37LDSlH5
JevRnXMfWU1HWxZ0Ke6UeM69nvaRFStqmZBSWGebmow1jWDd2tlywVJckTrN
PuUawdqhvRovpxQJ5spFPncjWFPXVmb1+VOKqE93z9qXR7C6FmVoV2ApzIuN
5/gO+sRqWNSyQUoRt/ux4sLeT6yfKS0TrO2Pcm6bmV8/sW5Oa2lgKVym7oiJ
0P/M8mzZvvplMJAon/+Z/5nFbtluHcow6qBv70+3P7MsWrZHlzLMv2QZNKfy
M6uuZTn3KEMFa+/ZwBFfWD9all+/MnR6Ursy+L8vrICW5TK0DAOT9l/ckPaF
tbVleseUocuNzzcqrSJZrJbpmFwG/aQ2ArttkSzzluFzKoMbd0nfgZGRrJqW
7jqXQXVo6/PGdl9Z31qa51qGeV+/GB5w+8ryb7mcexmG2/wXH/vmK2vL5pZH
GVLHfdpZ2CaKNalkgXYHl2FT55FXPi6NYrXstqQDZeg941KE24soVsvoyf4r
w+qdrIOZmiiWtrPaBV2GsmWBmzu7fmO1nFZuV8oQvDO1h+3rb6yW1XcpsAwT
+opGq/S/s1qu9j24DB/drZ3frP7Oaj0+n5WhUsfRcNSn76zW4y+sDOXbxulf
Mv3Baj2uPpdhcpeOTd+2/2C1Hi/R2vEY8nRHYtIPVutxkFSGqEfKwHyzaFbr
9s0qQ3Pbc3s/TolmtW63ojIc6KjbS39PNIvZHmWYknvKO+ZBNKt1OdeWwRWR
63hZ0azW5cfT3p/3L+xam5+s1uUiK8NaxM96MvInq3V6dcuR41DYbtDGn8x0
tCvHyQu2v/ve/MlqHT6zcnwunBzkn/ST1dpdq3LUnjg2+qDiJ6u1eX3Ksbky
+VLOsBhW6+UGl2PNnk9Xn66PYY1qfZRjQ+5pe97NGFbL6bxxYjlu9uo7NSI1
htWy225MK8exdsPTRDqxrJbRS5hbjqPd1RFhY2NZ2s62LGhoGu8Kq7fHslr5
cCtH6LncQ3cfx7Jaj/uN5Rh223585u9YVuvxvL0cU/MqhviaxbFaj1OvclxY
aOn8fk4cq/X4O1qOa3XXAzafjGO1HlenyyF7q6NzNyqO1Xq8XCrH20WZl1zE
cazW4+BGOcLuObGuOcSzWrfvvXJwND7mSzzjWa2te6odr3b7TYNC4lmt2+NN
OaoNZJO3lcWzWpdzRDnanvv54KdtAqt1+X0vh7v51mmPViWwWpdLQjnuf9s7
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
TK1/8gyElM/leFhT8qTLTwHlc+04yhJDvxwTUD6XY26wT1L+RAHlczmMR45f
4a7gUz6Xo2Fld5PZUXzK53IIryTI/P7jUz6Xw/KE1SGbqXzK53KMchGyhIZ8
yudyqLwGLWqbzqN8Lsdk6R2VcwCP8rkcvV1WFP9w41E+l6ObpzTVxY5H+VyO
u7nNTfo8LuVzOdRLrEOToriUz+WY4b/k3q3zXMrncjQrbV/uWMalfK5dR4rD
DWw7LuVzOQbKtm3p2tBM+VwOpSTf7MqlZsrncjx3bbe02KGZ8rkcB5M+dxDk
N1E+lyN9bNrhxKNNlM/luNWzcfz8/k2Uz+UYwx3gdDSzkfK5HEaCD3UzvBsp
n8vRcTcn/bF9I+VzOcLDTcvP/WqgfK59f2jz9oazDZTP5eiqfiiLG99A+VyO
225D1xo31lM+l+N6de23sIf1lM/lGPrFzOvdsnrK53J827Gjv2Hnevr9rxzF
X4w+PE6so3wuh6SHKU761tHvgbXzFx/Z696kOsrnctQko6FWWku/D5bjXgXP
c31ELeVz7fyUuAdrvGrp98JyWAvPfIkcXUv5XJtb1vTreUlUQ/lcDudDept2
f6qhfC7H4OBt892P1FA+l2O327XUhawayudyLLe0k07Rq6F8LodVfGn3IcnV
lM/laNNlYLDx1WrK53Is3BJpk7+smvK5HIlsj0Xne1VTPpfD63SJVe+6Ksrn
2vkfePi/wA9VlM+185Nr+bjap4ryuXY9So2zO8yronwux4VeBnt0u/8/n2vX
Q45l+7iqSsrncizOf+3k/LGS8rkcm9aHVNw+VUn5XI554jVJT10qKZ/LcWrt
n4bt/Sspn2vbk8DxqBdXUD6XY8DcoTtskison2vXu+HzaZqgCsrn2vVgfn/+
pV0VlM8VqNtgYBQ3rYLyuQJhlgk6D7pVUD5XwNmqHcemqZzyuQKFef7rJ8SV
Uz5XYMTdLiv5d8opnyvwNjbw1dS95ZTPFYhqV7LEfk455XPtc8dctwd9yimf
KzD0jaDqmaKM8rkClZmpfSfll1E+V+A/5XbXlW/LKJ8r0F23MUdzvozyuQKX
C2pUAzeVUT5X4OKu9vMK2GWUzxXQC7g1RdemjPK5Ap+OK/a8lJVSPldAOmmF
T2ZBKeVzhfZ8trPa/qGU8rkCY5ujdXz8SymfKxD4p73GYE8p5XMFftR1blIv
KKV8rsAXvfvvtwwvpXyuwB4b0RRW51LK59r21m0LPN7MoXyuwJkZXb8PyeJQ
PldANftEKjucQ/lcgePNLpxIfw7lcwXOOnSwv+3FoXyu7d+ZN4VFrhzK5woE
fzw50ns8hz5v185XYYaPdw8Ofd6uQIypxcB3mhLyXAHdifPv9kssIc8VyP11
w27ulRLyXAGHWvtnfZaXkOfa/v6N6vS8dwl5rkB7p/ZrCuv/kecKTFSvfREW
8Y88V+BAvIP5sBP/yHMFxuiGpjrP/0eeK2D4dZ5FR+t/5LkCn69fYW+t+Uue
KzA/yuvVmoi/5LkCQz45JDSe+kueK6DPSTcydflLnitgeidXmdD3L3muwB1T
rmNHYTF5rkDe4SdupXHF5Lm2f+8F3afcLCbPFdjqZD54kEcxea7tX5DtsjsT
islzBbK2pe2+0rGYPFegarKda9vSP+S5Aj3aTOVqPvwhz7X766pq5MHzf8hz
7foZHtXD0/0Pea5AfUH/iKJRf8hzBWYvrTH9afyHPNeOz8Aj83pyfpPnCnDa
lfjxI36T5woMt96pGXf5N3muwN/Ht0u4m36T50o83/B5RzfWb/JcidFLswSv
LX+T50rUVq+Pe9tcRJ4rEXRvwoQeyUXkuRIhehM+8x4VkedKnFEMDh12rIg8
V0Iy+4ZP9rIi8lyJxHVnPxaOLCLPlYhb55U2tVMRea7E3on6zp3qCslzJYwU
dQnjEwrJcyU+2EVnxT4qJM+VMB/2q+1Ln0LyXIkkTjeTJrdC8lyJDZV/r/tN
KCTPtdezT5l2olshea5EyoTQgizxL/JciavBc40P5P8iz5VYItp4f/eHX+S5
Eoa6nu4/rv8iz5Uo89/fdd2+X+S5EguG9LznsuQXea5ExKnNSbdG/SLPlfgU
c/XgkC6/yHMlLL07XO4k+v/n7Up037JUOLmggDzXvj6zMPDLpwLyXAn2s9/b
jt8uIM+VOOy8auM17wLyXIl3UpVP/eoC8lzb3ujmb5fYBeS5EtZTMvsc7FtA
nmuv/y/gU4hhAXmuhI2/93nrunzyXImX8+pC89LzyXMlvlWsHpYdnk+eK/H1
whIHk5v55LkSzT9HpV89kk+eKzH/92S7xWvyyXMlCqv2rV0yPZ88V2LAsLNP
rg/Mp/8PpB1Pk3hbs8755LkSyRv0NenCPPJcidvjrx9K+J1Hniux1Kp/jDw6
jzxX4umTnxbbnuWR50qcuvk+zPxyHnmuROOEQ7lirzzyXAm78W9/mrnlkedK
VMW2i9k8LY88V8KqP9uWPyiPPFdi+xNpnw9meeS5ElHxMT1fyXPJcyX+/dXb
UlSWS54rsVxe6zwxNZc8V+I/a/ch2e9zyXMlOn0Tu925m0uea+frdd2km6dz
yXMlOg7VHxK3M5c8V2KCe8DFvstzyXPtfhNsjn0/JZc8V6JyUISj1+Bc8lw7
X8Y9l2y0yCXPVUDxDd+TmhzyXAWBcOWI7Noc8lyF+y+bc+bl5ZDnKhy83b5I
9D2HPFfhtKn/59TQHPJcBevcszXpATnkuQpRIqMyhU8Oea7C/A7otdQzhzxX
Iee/Zb2KXHPIcxVCuh1Zd3ZqDnmugjTlx8Y1w3LIcxXkDwa+XmuVQ56rEFsZ
+OOCYQ55rn1++Gefv/xs8lwF92WD1ywrySbPVcif3ksjTc0mz1UY+/755Z+f
s8lzFZyTTgSFPc0mz1W4e93qY7x/NnmuwqLtJ7brHM8mz1Xoe8jTZe2ObPJc
hXkrbNtUrswmz1W4p+dldHlWNnmuwqeIjDarxmaT5ypctzE/M7dfNnmuwvtr
D4evMcsmz1Xw8V1w54ZONnmuglC6dkNTUxZ5rh2fuScGbv2bRZ6r0Ln050WD
tCzyXIXDPS4Mi43MIs9VGLMtKPxhaBZ5rkLaZsPIB7eyyHMVPva3a/xxNos8
V2HUjTs89YEs8lyF6eqpu1ZvziLPVSh8MK7zn6VZ5LkKtduSvQ86ZZHnKuxM
2bt25Jgs8lyFLreLt7bvn0WeqxDeO89J1yKLPNfejzXzsaVBFnne0n6fjVfr
MslzFQIufJ05NDWTPFdhaq8XLnqvMslzFYp7p/NML2WS5ypkln85u3xnJnmu
wngrE9+CBZnkuXZ9uOyZ4zcikzxX4faDQ4sPmGeS5yp8XfHOOFCUQZ6rEGMd
UNbwK4M8V0GP47XoYGQGea7CC9bptDH3MshzFbYXJKYOOJ5Bnqsg+mWcPG9D
BnmuwrmPf/BkRgZ5rkJ30fnXQwdlkOfa8e5vea2mYwZ5rkINf7hnHi+dPNeu
37XDvnPz08lzFTZaG3eaHJlOnquhK1rE+Xw/nTxXo8JrWNSGk+nkuRrDLy0a
NNnj/9+fq1GwTfRhuvP/vz9Xw2RDfvXhkenkuRrBygELi7umk+dqHLC4fdRT
lUaeq/Giz3SVXXkaea7GVb83Gzolp5HnarjYxkzt/TaNPFfD9X7isDU30shz
NZZ5rvuW6J1GnqthNOXM6ZXr08hzNXw7He3ZdXYaea6Gc2VOP9XwNPJcDbV6
jUOHrmnkuRqyonH/pqlTyXM19nu+SX1cmUqeqxG+ZVbg4PRU8lwN+f1ozu8P
qeS5GhG71LPC76aS52osnGe2982pVPJcjZtLR2iyt6eS52qMNQoPsF6aSp6r
cUqlW3hhcip5robqe9iunnap5LkaE14t0yvqlEqeqxHFfzLxkySFPFfjYeCi
mC+cFPJcja3+tlM5ySnkuRrGsqzNg96nkOdqDJo07G/g3RTyXI01XtLF9mdS
yHM1Xn+vO/BnVwp5roZ36Edp2IoU8lyN0WGKc8+npZDnatxLcC76OTSFPFcj
iD/grrJrCnmuRqiw8dRy3RTyXA0vdfXM/IZk8lyNxwdxZ++vZPJcjX5ZihEO
McnkuRqKNZr4jq+T6f/7qjHZRb9T+1vJ5LkaE0Nvxww4mUyeq9Ho0Ovehp3J
5Ln29SGJy76vSCbP1fBJ83vt6JRMnqtx486IlZkOyeS5Guv3Trc63SOZPNde
f4P5y+VGyeS5GnMPvUmZLUwiz7XrzbTCcTkniTxX4+9M1ruTaUnkufb1bjry
1M9J5Lka7Ub0y3J4mkSea++Xvkwcfi2JPNeOV7182IL/kshz7fWu9phs5JlE
nqsR8uZQRfGyJPJcuz4y9temTU8iz9Vwj+9jWjgiiTxXo7PX6N5q2yTyXIOP
fnocVock8lyDbmsudLkjSyTPNbD+uv5M5+pE8lyDssRY1f28RPJcAyOBz7RZ
MYnkuQbOpbq924clkuca2G5dsLb6XiJ5rkFsgCq12C+RPNfg+qtxw+sPJ5Ln
GiTN+rbUzCORPNfA1PNX+8WuieS5BsuD19q+mJ5Inmswt9/3lVajEslzDU5Z
lVx+1DuRPNdgy9cJ56eaJJLnGhy4mdFNrk4gzzV4mN+jY3JjAnmuwd5zg8a+
LU4gzzV4Ljq28VVqAnmuwVRBj63RkQnkuQYjnfws6kMTyHMN/rZJnjjkdgJ5
rsEs1cI3J88lkOcalI/vyuYdTCDPNbi45myc15YE8lyDseNOdu60LIE818B/
5DpR1IwE8lwDdW3dHN+xCeS5Bh4fVlWutEsgzzWYP2bNndmWCeS5tj/izmxn
wwTyXIO1BuJXm8Tx5LkG4TcNPvtXxZPnGpS8vjcuryCePNfeP+WM4aDEePJc
gz13eLLrn+LJcw36hu2vN30eT55r8I9l8uHxrXjyXIP8332Gzj4fT55rUD95
r4PukXjyXIMdpv1vZWyLJ881iPsaw3qzKp4816Bp5EjNg3nx5LkGypzPH0Im
x5PnGnQeL5vwY1g8ea7BhD78HXU948lzDdLnqwbam8aT5xq4b82Ye0j3/7+H
06A9f0/Yb0Ecea7B8aHzxiyojCPPNcjt2u1zfkEcea7BolVVljuT4shzDRLm
9HDoFhlHnmvwuGRvWe7LOPJcg+Cvog4P78WR5xroDNO94nMljjzXYNqkGbN2
+caR5xqw3vzotntfHHmuwSebrxzfTXHkuQbDjXOPP1kWR55rIKttKvo1O448
165n56np1pPi8D9LQgEM
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVUVdv3NnABUUFARRQTGxU7sD3PEQVbLGwRMRBbUTGwsROxAxsLC1vp
FkRJQRSlO053/A6seb9nvC//3PEMcbP3Wmuvz5yL4+3ivmn2KsMGDRrkGjdo
UPffeRb9gm/V/kOD/+cr7385c2e57aAm+vyUnzbdvbk+718bss2/jT7PLXx4
I6azPvdeci5K3EufNRl1F9TndN3VFozU58dxU4efGKfPe2Hv+nmyPs/+aHOk
cpY+9xzUJKjDIn1WPam7QX1O7fpbvm+tPgfq7u7VVn3eY/ViYv5ufZ555spG
y8P63KPRwUvjT+mzYl/dA+vzD+kc3RPr84PNY02z7uvzrrrhC9LnGXWP+1af
u9XdXog+y+ouF6PPyd/qvvT5nuN7oTpDn73DbrcbkKvP03Sj51asz11ebV3j
V63Pkl51E6LPSXfrLqjPd3RX694o/395u3+bhvMs9HmKmWGfY631uZNuNj7a
6LNIXTfB+vx1R90N6nNA7SPdDOuzl+7ufKDPk/J3183I/3LHRStH/3PWZ0Hd
8lugz/F1y8VNn2/WTe8afd5SNx2b9dmpbvh26nP7usc9qM+8uts7oc+xdZfz
0+fr1+q+9HmT5eGIxLv6POHU+lLlE31u27DuDdPnGp+6Ba3P0eK6CdHnqxvr
LqjPG3RX46fps4NbcUrX3/ps/eu7bgXqc9WsuhdEnyMT6yZYny+Pr7tBfV5X
9/o2LPhf5ta9bmb63Kru9bDS54q65dxBn8Prll93fb5Yt1z66bNn3fTa6zOn
bjrG6nPLuuFz1Oeyusedrs+hdbc3T58v1F3OVZ89Vtd96fOYf866N1if6962
hB36XDd68n36rHtY3YLW57rdask5fa5bfWeu6HPd1cJu63P99vlIn+u3v1f6
XL9dfdTn+u0lQp/rt4MEfa5/fVP0uf51+6XP7PXQ5/rlXK7P9cuPr8/1y0Wu
z/XTa1j4v1w/Hab6XD98lvpc/7jt9Ln+9rrqc/3l+ujzkPovfa7bnVeO1ue6
t+3SeH2uG724qfqse9i6Bf2/XM/HEn2u3+5X6nP99rxen+u30236XL/9+ehz
/XZ1RJ/rt5cz+ly/HVzS5/rX95Y+19/dQ32ufz1e6HP9cn6vz/XLL0yf65dL
nD7XT+93fa6fjix9rh++f/pc/7il+sz81uf6y0n1mX0V/X+e6zPzXJ+Z5/rM
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
zmWei+F6vDu/8xBzLvNcjPTkjfmRS825zHMJIhStS74eNecyzyV43272Vs83
5lzmuQQNCtxbCtLMucxzCWz+xImTpOZc5rkEXn8aJIvaWnCZ5xJUZ97Jdhxl
wWWeS7Dh25vi9wssuMxzCRxUG7pztltwmecSfFw/cWfaOQsu81yCDl+Ghq95
bMFlnktQevDnU22YBZd5LsEEoyXTTqdbcJnnEsyQHTcyKbHgMs8lyDidmbhV
YsFlnkvwzXfch4iGzbjMcwmMwx4N4DdvxmWeS/CIe3Sepl0zLvNcgrEl4r5V
XZtxmecStFo1N+x9r2Zc5rkEXw1c+izt24zLPJfAqMPpD8kpzbjMc914qtr1
cezXjMs8l0BhVc45YdeMyzyXYJCX6fXXPZpxmecS+O1MnhRl04zLPJeg03BY
R7RqxmWeS3B5avCbV6bNuMxzCRZ03b/hutqCyzyXINnT18u3xoLLPJeAN5Vz
eUeuBZd5LsFbuzYzdiVacNnvE3Xzc+x44qV3FlzmuQRdnxeEZAZYcJnnEli9
uTWoke77mecSvHibdK1qnQWXeS7Ba+ddvbKcLbjMcwl8kqatbTHYgss8l+CT
k+GlR5YWXOa5BC5NUicH8s25zHMJHlq03NjuhzmXeS7B1u0NJ7R4Zs5lnksQ
7j5m+tUj5lzmuQTP/Vbbhrqac5nnEshLW1qfGWbOZZ5LUBuxXmltbs5lnktw
ctE0v7UFZlzmuW699NrYzf+9GZd5LsHdy+Me3z5hxmWeS3D05wa/gMVmXOa5
BM5fxhoF9DXjMs8l2F1wJPyZqimXea67XkpVTGZSUy7zXAJOw/md7a435TLP
JWgR0Xfve4+mXOa5BOPsvDXHhjblMs8lGDoyYWZQg6Zc5rlu/dUeWTLwmymX
eS4BV3OsqvMVUy7zXDe/svInJ5ebcpnnEizfsDhnVx9TLvNcgqqTnocUIhMu
81yCqdabJ7YJM+EyzyVY+3hn5t+jJuz1NZRibI8mVgudTbjMcylGfZwc52dt
wmWeS7FFu3CR/78mXOa5FPNvT6320O3HzHMpMMnJoe2mJuS5FCv32se9GtaE
PJdiphvXb7imMXkuxQDLowvexzYmz6VooNpzwv5MY/JciuDpFfahcxuT51JE
Pnxg6NKhMXkuxbeLVSsaFjUiz6WYaDPaLe1ZI/Jcihcjj76K9WpEnkuhXGIx
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
HN3O1j7jJ3mue57me1qkvv1JnivRilfY4sWln+S5rk8Kfrs9acdP8lyJhPhh
tr0W/CTPlXB87fE8ZuRP8lyJfH5S79vtf5LnSvi/Hr/4gzqTPFfC5Wnfa2Z5
meS5Em+CXMYFRGWS50rkHGjyet3DTPJcibOLrk3adjyTPFdiHr/M88O6TPJc
CenrKTuHOmeS50o8PTEytGxwJnmuRPGWxJJfrTPJcyV6t+841kCZQZ7rxm/W
lOZu/zLIcyW+d55cKI7OIM+V8A6K7B71OIM8V+Lic3/HmDMZ5LkSA+7UflRu
zSDPldh/YbfQY0EGea67n4S0dU04GeS57vu3T7v+p1sGea6E789EWaFJBnmu
1L1PMkMbXjp5rkT0uyUBJ36mk+dKdLPW7uwZmk6eK9HG7KqP5H46ea5EfGLE
RMnJdPJct/5nG/Sw3ZpOnivx1fbvuyML08lzJUpq+ltYjUsnz5WYNMq8WVqv
dPJct55mm5aHNk8nz3Xz98j9epYsjTzX/fwBK17a5KeR50pklbR4f+FrGnmu
xAEX4echwWnkuRJtLxU6N7iRRp4r4dzI4YTscBp5rnufHhzJb78hjTzXvS8T
Yh6unZdGnuv68MO8fd+QRp6rEHc8suOm3mnkuQp//Qt2jWmZRp6r8Dor8fxg
dSp5rsLK8rkNPUtTyXMVpt+c1PRZaip5roLnmN01bUNSyXMVbhl84b8MTCXP
VZhSlT9gg18qea5C8OsHk2f5pJLnKgT++Zi32COVPFdBk/TjyunZqeS5Cqat
LdvuGp1Knquw+8pph+jeqeS57nmOSsu0VqnkuQo9u231i22QSp6rwHmceeVl
VQp5rsKsprdtQrNTyHMVbjTIyKqJSSHPVWjSu2f1+Ncp5LnufvqHm4bcSiHP
VWi29pV83skU8lyF2FVRA628U8hzFa6nXtstXJFCnqvgnbRmvWhmCnmuQk3j
zy5WnP8+D6dCUNbFngv6/Pd5OBUaXx5iE97mv8/DqZC0ql3XCY3++zycCoIF
jePTSn+Q5ypcHCQevDT6B3muwqt2Nod63f5Bnqtg32lGk0F7fpDnKgwt2x7q
Pf8Hea5Cx5LcaOWQH+S5brz4SX1Cm/8gz1V4di2n3Zfq7+S5Cs17ZhiLE7+T
5ypsttiycu3j7+S5Cr5NJS/aHf1OnqswwsNxmfHK7+S5Cs6Dl/J7O3ynfw+k
wuVNxgXHOn8nz1U46Bjw0kabTJ7rxrNx+5zq3GTyXIXCk7cLRCHJ5LkKymNX
pw25mUye69azw53rj/ckk+d185M4e+7iZPJchRgbc5X96GTyXAX/kQY209sn
k+e6+fpt7XBN+Y08V6H0u5ew7Z9v5LkKCUPGhn4P+UaeqzDzoUW/D7e+kecq
hKy+mpqme+OY5yo8uZs7sovbN/JcBZfuvaR3x30jz3XP6+VzY263b+S5CuYX
PnwaYfyNPNfdj6xL6fTSJPJcBaNDq9/6f00iz1VwbDqzg2lQEnmuwuGzZ3Oe
n00iz9XgTXtjfXhLEnmuxhoDzvJjc5PIczWKL+yf9nl4EnmuRpPL0iPt2yeR
52pYBaZee6pJJM/VGBs8vodHQSJ5roZr6+Ils+MSyXM18rt2fLHmaSJ5rsbR
nPYTn51NJM/VGH1jwL+2XonkuRpTt31o93Z+InmuxpAXZkk7xiSS52pob7ll
e3ZJJM/VSBvaNNi3USJ5rkZLzY3PXyu/kudqGKTGXR2R+pU8V+OBOkWU8v4r
ea6GR3Ss94WbX8lzNQbvyUzyOfSVPFfDRzzu5rk1X8lzNQoazrqYOOMrea7G
wH2Zbv3sv5Lnang6Wbz60P4rea7GwqubBngafiXP1bAt2nl2XHkCea6G/foZ
PtyUBPJcjZvP0mNWfUggz9UIubqt9FVAAnmuRsrCmS+7HE0gz9XwHdzkx4cN
CeS5Gmub7lVsdUkgz9VwiOWXzh6bQJ6r8eaM39T5PRLIczVut+qfu988gTxX
Y0a12+xv4njyXI0uAQvdx/yNJ8/VOPzNOO5HXDx5rpvfU28GH30ZT56rMY3/
dd2yq/HkuRouX1Z0X3wwnjxXw6u3sfWutfHkuRpPm0V5fpgTT56rscr7e2C7
sfHkuRqi/p3e37KNJ8/V6BXoJB3XPJ48V0O34OwaK+LIczXO9zhsUF0YR56r
MYbDnSxMjiPP1Qj3Wh3a9mMcea6GeYbMxu1eHHmuxs9QzwFxp+PIc937sCP1
1VTvOPJcjQ8zf6/iLY8jz9VofvZWi7fT4shzNTY277Lz8vA48lyN5Ixerle6
/vf5djUc/dXH3pv/9/l2NSL3j/silMWS52rUeLQKn1EUS56r0SK9+8L4H7Hk
uRrGPl4zl36JJc9166/3JK7Zo1jyXINOhUb8PxdiyXMNfINOOHzdF0ueazDc
fD8vbW0sea6BvfMrF9OZseS5BmfmvO46anwsea7BkKIHj64MiCXPNeh9fGB2
8w6x5LkGIx8m+z5sEkuea2D79sRWF3EMea6ByVm7rZ0LYshzDVwWJc1o9COG
PNeAdyXVu1FIDHmuQdGM3KwuT2LIcw36dhvUef7lGPJcg+qE7H2Bh2PIcw26
eE8Kvr85hjzXwHrZlU72rjHkuQaGcDzwfWoMea5BsSDy2cGRMeS5Bkcei1q8
7RlDnmvg+SngmG2TGPJcg+snBCtuGsWQ5xpsWtgn8h0/mjzXoLLPCZ/Sf9Hk
uQYdArrvHvQ9mjzXjc/b4DP+IdHkuQZzd/Y+Zf4smjzXIGtynuPta9HkuQZN
RwRcnHQ8mjzXYOPoHVNNvKPJcw1W57bj5q+KJs81mLKp4eSUudHkuQbmL/6M
/jk+mjzX4Nmngd7CwdHkue56g9Wvu3eNJs9199N6/qrNLaLJcw2erjJZndIg
mjzXIFJy8YgTL4o812BMedXNtH9R5LkGPqt+HN72I4o812Cb2VbrvuFR5LkG
Zh7N+shfRJHnGrT+KLr+OyCK/r2vBhH7wrnpZ6PIcw12Jz7yzdoXRZ5rYBr8
LPLs1ijyXIPAmtGnBiyLIs81OG44xeqwcxR5rsFAj093ChBFnmvglBZ1dN7A
KPJcNz8Lj9752zmKPNf9/ATXlN0toshzDbKfblvTxzCKPNfN367nPWoFkeS5
7uc5HHkQVxhJnmtgl79f9SojkjzXYM1qqx0vYyPJcw2WF3gNj3wfSZ7r1tvg
oM4ljyLJcw1i/A9eLLoaSZ5r4NxJfav/yUjyXPe8Q2vnpO6JJM812OHZ5MO4
DZHkuRbPjtvejHGNJM+1cDAZO9Z5ZiR5roXrHA8/ybhI8lyLmp9bd74aEkme
a5Ho2cDUp0ckea5FZsSRQwutI8lzLc4/PRo9ySSSPNdCvOD9i8nKCPJci+Rr
8bZLqiPIcy3CJmy0OPAvgjzX4oFnp4nvUiPIcy2WPfv3RhkdQZ5rcfam78g5
7yPIcy0iwld+/vI4gjzXPd+C123sb0SQ51p8v9BiVPiZCPJcC5t0a6NFByLI
cy02JU+aZ+wVQZ5r4fjk2L2IVRHkue561ccGnFkQQZ5r8Wlcxn7PqRHkuRaf
Z6ZVu3AiyHMt2m6Kcp09KII812LekqpPrt0jyHMt3nseLtptHUGea8EXLogL
NI0gz7VIk9geiVGGk+daXNySdHBRQTh5rsW17P3Ozb6Gk+dacNLffC54+d+/
V9Niq/mBixmX//v3alp4Hjz/pGhvOHmuRdMzA+MtV4WT51q0TBsW4TotnDzX
/f2r4hUJQ8LJcy2+hnY86Nw+nDzX4vS48VeemoWT51qY/a1c864ijDzX6vZz
+2z/tDDyXIvSOCOjc5/DyHMtusv/hgbeCyPPtch42O5Pzskw8lyL4AcSny5e
YeS5FkO/7jp+ZXEYea7FLs91oZ0mhJHnWhRsX8rr1DOMPNdiQdrdgI+L35Pn
Wijd/8Yu1YSS51rkHxK+nFMaSp5rITB2CVmeEkqea/HKs+GfM59CyXMt/nAL
7DLuhZLnWpxprDa1Px1KnmsxwPHkjFfbQ8lzLT44/I1wXBZKnmuRdbatk3hS
KHmuRU6vzu/DBoeS51r4j1rz926HUPJcC7eODlcCGoWS51rUfugc+ZYXQp7r
5ut+1aCinBDyXAuPsY9U/WND8H9TJNT0
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
i0DuQbX5xwTkORf58/qeEucKyHMu9P4q5KNtheQ5FyMLKlaOuC4kz7noGvh4
e1qjkDznIvbe5PXWzm3kOReeGV4LJn9tI8+52Gq3dPJgAxF5zsV6C5uUh4dE
5DkXNz4cXrCxVESec1GSciAx3lFMnnNhaHveSj9ATJ4zr98benCWuYQ852Ij
6/1g91sS8pyLgS9HpV3uJCXPudhh0yXtzQEpec6FzxeNy3H1UvKcy5xft7ez
18sof3AhfFkZNvyPjDznAi57Lx5fKqc8wsWq6fnf6rLl5DkXJ9L8dh1wUZDn
XOSKz822zFWQ51y4fAwfJFuuJM+5GFrQeabaPyV5zsWTqXMeGI9VY6k8Z94f
erLQ6bAaS+U5F5IF7s0Po9RYKs+5MD2T6KXo2oml8pyLLe599U8v6MRSec7F
woTm8/0fdWKpPOdi0dMhl3MqOrFUnnNRN2aj/etR6iyV51ykbzD7d/2YOkvl
OReTbf4qr6eos1SeczFrwdiVPkadWSrPuSj8Hu2Vsr0zS+U5F47xp2SK0M4s
ledcFPg+N4BOF5bKcy6GdNnz4Py6LiyV58z8LeJ+TvXvwlJ5zgU/32OLbveu
LJXnXPxpikyYta4rS+U5F8e/Hj+8I6grS+U5FxYuTo0ePTVYKs+Z8XsiOrVs
mwZL5TkX3k2Hi7RjNFgqz7lYfHue5+V+3Vgqz7lI+jLPIPpQN5bKc2YfDisq
eZvdjaXynIufN9naI2w0WSrPucibo5XocE2TpTr+mNfnmAwpqddkqTxn1vOL
r+Nr53RnqTznIrtHbenCd91ZKs+Z/b3ZeFHXrlqq7avOw5WMIyNaN2mxVJ7z
EM86aCCL1WKpPOfB6b7bod4W2iyV5zzoX0q8aHpGm6XynIf3mqFXu5Zps1Se
8xBaNOfml2k6LJXnPGjLrKPFT3VYKs95qIu0epUh0WGpPOdh1k3fIgO3HiyV
5zykTi30+RDQg6XynPm8Y/yGrXo9WSrPebDTeWE3yb0nS+U5D3fmG62Rxvdk
qTznwT7vz8RrA3RZKs954H/b2+fXAV2WynPmeT+/p9z5pctSec6DqdPA+9t1
9Vgqz3mMa9v9ntrpsVSe87Dwx6j8uvV6LJXnPDz55977z2M9lspzHj5d2u6x
+6seS+U5j3HoteB8jh5L5TkPeGCgd6FNj6XynIeH73+bdTXRZ6k856E19KKW
s70+S+U5Dxsudvk6cpU+S+U5Dx9mTfsYeUSfpfKch4ioi1rnHuizVJ7zMPmZ
UJD/XZ+l8pyHMZ+GrL72W5+l8px5/dPeTfcq9Vkqz3kwevR0caVYn6XynIf8
CuPJu3sasFSeM69r9LAcbm7AUnnOw/1v4f31xxiwVJ7zsKY5eIPRdAOWynNm
vsuq1CYvMGCpPOdBmMX22bvCgKXynIdbU6NbgjcasFSe8xA0ekaSzk4Dlspz
Hm53i1q0a48BS+U5Dw+OChoL9xmwVJ7z8Nnqi/2iAwYslec83H2+o3/efgOW
ynMe+m2/o3D3MGCpPOfh+MR5K/rsMmCpPOfhbFba26KtBiyV5zz83Cfc8XOt
AUvlOQ+Htt2amb7EgKXynIdpTxN1decasFSe85BjEzH0sr0BS+U5D5v/9Bvi
OMKApfKceZ5VfPcV/QxYKs95ONdV0S1J04Cl8px5v+83nRd8fZbKc2Z95hR/
bvmnz1J5zvz71rSa/CR9lspzHj4+XZQy8ps+S+U5D7NhpWZ/X5+l8pyHglfe
JlJmPag85+HMmqKME2v0WSrPebj3aIlODvRZKs/5eDafW6llrs9Sec6H7wmd
E+M76bNUnvPRcIsv31imx1IdCHxsEvvtex2lx1J5zsfH4P3zuj3VY6k852Nn
4RPzF4f1WCrP+ZjvMtfNc4keS+U5H3+/xAX72OixVJ7zYdA27JmNlh5L5Tkf
3bxneUck67JUnvNxbyVf6npMl6XynI99Gx06bRypy1J5zsckP1Hth389WSrP
+dh6uKQ7bvZkqTzn47ai1mMaerJUnvNx3SJX9rOlB0vlOR8vbS1v/n3Wg6Xy
nI9ZBUs1Pjj3YKk852Oon2yuvVSHpfKcj+PD1jp++qjDUnnOR8pIDlfTTYel
8pyPLt7KlHMaOiyV53wIWyMnlAVos1Se87HlsV7hsU3aLJXnfCQlX2bNN9Bm
qTznY5nVyrO7YrRYKs/5ePBPapK2V4ul8pyPDZc+WD8002KpPGfGa90hpGd2
Z6nuG/kIdN8qO3mmO0vlOR9en246fx/TnaXynA9tocPsfVWaLJXnfEj+Luv+
64Emec7H731Os2LmapLnfDTtSo5aL+9GnvPx+PLzIV++dyPP+bANL03x3dqN
POej86md03b270ae8yFa45tfk61BnvOhM+uDq7WXBnnOx5F911rGzNAgz/nI
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
vJw8b0OxRt7A1afLyfM2WNVlP8vYWE6et0HCMtx5a1Y5ed6GgLhvs55al5Pn
bdjUZ9V0nnY5ed6GbotnZN9uLSPP29A7J+LwkZwy8rwNq95tPfAxuIw8b8N3
0Y3adO8y8rwNoU7iN4Wny8jzNozwqpYWbCkjz9uwp98VgYlTGXnehq4rB317
aVtGnjPjV204b3vfMvK8DYfnXUgvF5WS5234/LV20/6EUvK8DcG6nPBzd0rJ
8zZ0Dj7ZS399KXnehh0TduQZjyolz5nnXd9496nsH3nehlj73pcf/v5HnrfB
cjtnUnfvf+R5G649nbeSvfMfed4GtT2xYU72/8hzpr2iPerGOv/I8zbM3SbB
8pIS8pz5PD/t2i7fSshzZr3vfnzN7EwJec48b4DbkI+uJeR5G44HGhs8G1xC
nrdh1KllrlJxMXnOrIeRZgtj04rJ8zZELrz9kv2qmDxvw7Dnoy0uHComz9uQ
7t4l+oRTMXnOrMebw9f+NSsmz9twYB/P2lv4lzxvg0/66bTw1L/keRtmGeoe
rPT5S5634emVDWEDjv4lz0UYGPCf8arFf8lzEUaZ1TFD8Zc8F8Elbm9Lk9pf
8lyE0Y7aFVOK/pDnIty9uH9E7fc/5LkI82sHFNR7/SHPmToyZWKpw+Y/5LkI
S2d0a3xk84c8F+FNz0FNYsM/5LkIBdM3trpyi8hzEa4WhLA6pRWR5yIc/PHI
J+19EXkuwk3NwKAB54rIc+bz/VY+jFpbRJ6LsHOVNL1qchF5LsKj7vW+loZF
5LkI1e+rq3/zCslzEVg/nli8yywkz0XwchI3/fAtJM9F6HYieY/l1ULyXAQn
q+tdU7YXkudM/7baOFTPLiTPRchbdVt9rFUheS5C/x8VW5M7F5LnIvDquF/e
VBSQ5yIcXnFElBhTQJ6L4BjdycvmVQF5LkJT3FLT4tMF5LkIKdhclLq+gDwX
ocj//E216QXkuQhq98YHbzQvIM9FuPJ99NFR6gXkuQj5rPNmQyrz6ftCIsie
OkvXxeeT5yI89jzuVfg2n74/xKyPj70Kb17KJ8+Z1/X0xl/YkU+ei5CeeWlK
iFM+eS7Cye77DaxH5ZPnzOfb9jffY5hDnjPz/X2SZzgvjzwXQZopri3JzyPP
Rfhst/vu5LA88lyE5bqm1ZnP8shzEdiNF2a9PJNHnosw49hOww9b8shzEUy7
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
T54rUXWnZP9CXX/ynFkP5wrOGXbxx/8ALtaoyQ==
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
jm+Iwpc8r4ZxWLHs0+rH5Hk1cgK0XTwfPSbPqxGgN2/Tfw2PyfNqtNja7tZZ
+IQ8r8ab5eOS3997Qp5XQ//VtT9G7CfkeTUkH/1O/Jr7lDyvxq6t78fNdH1K
nlcDW9dODGQ/Jc9rwHIKL9Ax8iPPazBt3ST/Cx5+5HkNHB6XSBsb/cjzGqzo
uHx2yGh/8rwGjp/Slp0w9SfPa/Cx8ovjz8v+5HkNegmW/LkT7E+e1+Cp47Xq
2lJ/8rwGlj52pZk9A8jzGti+03qwalEAeV6D74vP9dxkG0Ce12DCxT0mTf4B
5HkNAuySTIZlB5DnNTi3+OIojtYz8rwGyrG6SpN5z8jzGvxcNFK86Ngz8rwG
9y9/7B8W8Iw8r8HbFdjanPeMPK+BjNNuZ3yPQPK8BjHzl9stNQkkz2sw+cyy
poPnAsnzGnicWW0wKySQPK9B/ojaZ2/rA8nzGliET/qeMfo5eV6DfseSeS/+
e06e14B/c3/e1IfPyfMa5Bi8UhzJfk6e1+B/5e7tLXRekOc1sNcP8tBZ+4I8
r8G9/yYfvnDrBXleA2n9lmWv41+Q57VwGewuedj5JXleC7PHP3etX/6SPK+F
qfZ/O1OuvyTPaxH+tq62X8JL8rwWR2627zat2yvyvBbHgj+lDlj3ijyvRU5W
qGme2yvyvBaPF0ZGWue+Is+Z9z1/mJUNDiLPa/GxQNt82t4g8rwWe99XjLUI
CiLPayE8f3nIaW4QeV6L4w1OIafmvSbPa7HLf7rdvquvyfNamMsj6hamvSbP
a2G17nNMj8FvyPNaJPjqh2VZvSHPa5GXq77h8eUNeV6L9MA7Ops7viXPa3Ev
3H1uv81vyfNabCqOUJQGviXPa1E0TfvIJ9Fb8rwWd1zkzzxWviPPa+GkP6Do
5uN35HktotNmb/PivSPPa3FpccXx3yvek+e1sLz+2VfL7z15Xgsjm6ht9pL3
5HktrF1l87uaBpPntfBqdBYlvw0mz2ux7ODcVVFdPpDnzHr+EPTi7v9Antch
xXjAnJ3RH8jzOsRMP1HppPuRPK/Dt/UXGxWLP5LndVg1szB78ImP5Hkdgo1M
Ufn8I3leh5KTnSq35H8kz+vQXeJ//mS3T+R5HSa08ytYvugTeV4HrcYLWcn2
n8jzOjiwFRu6BH0iz+sQvum/ZcrST+R5HTyGBHx53zeEPK/D6Ysx7/XXhpDn
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
npglpvqKC5Pr4QOM5WLKv1xsKx00yWiUhOotLvp6nNIatFpC+ZgZX1fhg/zj
Eqq/mDi16Zrs4COh/MzFzxM/rzb/kVA9xkX8MvazJbUSytdc7GFZatnqSKk+
Y/ZboJ3z8TlSyt/M/A7OEK34T0r1GrNfuo2awr0qpXzOxZBH4yUH30ipfuMi
9XnPMe8zpJTfeajs+/3ib7GU6jke41y/VO+hMsr3PNyy3V84Z4mM6jseev52
P+R7UEb5n4ehztcQdUdG9R4PFh3Pj3r9SUYe8PCQY5a7Lk9G9R8PXTZrDQ2W
y8gHHrp7JP2I15dTPcjDjU6vTz1cIicveDh96ns/fSs51Yc85nri9p5tt+Tk
Bw/xE68Mwzs51Ys8OPnMHZKXJidPeJj+rGLcIJ6c6kceTIe+1u3cR0G+8PBm
0JCPj2YpqJ7kocn2SlHOVgV5w0Ond2uOhZxSUH3Jg9l6+1WGDxTkDw/tpxZv
2RCmoHqTh/7Fv891y1eQRzy85nZ5ZyFWUP3JvNeNLN/QT0k+8XDzrk2fvJlK
qkd5+Hr+1BqeqZK84sF6sJOHn62S6lMeLG3L1WV3lOQX0x6LFfT+tZLqVR7k
vxd/1Y5TkmdMnjpzbiOPpaT6lcljd8Z/3KdSkm881CTv6WM+UEX1LA9lR3ZK
/PeqyDse9vHX6VWsVVF9y8PLqrDdB61U5B8PB1LCe9tdVlG9y8OK10pf6QMV
ecjk2ZMLFv36qKL6lwc7ZbbvygQV+ciD7gmZ/oZyFdXDPFRHvOMohCrykhnP
lMc6zd3UVB/zkHN/dYzZCDX5yZRa6u/L9GarqV7mQe+tWZXVKjV5yoPo2vPF
2/5TU/3Mw/bET9fu26nJVx4SxkqSja+qqZ5m4s2x/WgLLzV5y4PjgHevWl6q
qb7m4b/HK641h6nJXx7uvv0t2pWgpnqbh8deHxfPLVCTxzy42Tz4c7lGTfU3
D2vM8wpmidXkMzP+odmarZ00VI8z7vzU+lGpqyGveYi6qOVbpK+h+pyZT5H7
soWTNeQ3D8ZLHh7tNldD9ToPvjdmpS1eoiHP+Ui892Ehe62GPOdj4pszPs3b
NOQ5H8Pih2RYWmjIcz6yi2aWLzmsIc8Zp9x2ZLsc15DnfOTs6JWw6KyGPGdc
qw6s2eWoIc/5OKs74ij7uoY852PujmGPcu9oyHM+kmpfJc24ryHP+Zi5ccBe
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
         "]]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3HVYFWv38HFCFBUVFUUUFbu7c41idyd2IqIeuxVsERM7sVvswFY6pLtL
CYndvd+BtX7Pul7551zfy+Mwe+ae+dwLPafZ4rVTlpmZmJikWpiYlP9zRs1O
L66WpIPJ//eV8b+O3Zrfupsl98OyqPGLrbn3rPq48UwD7mnZdy7/dOBu53Ti
u7wttyGm/IDc0eLRZvXjvu8/ts+RIdy7oNf8D6O5p7xrcqBwMnebbpaP7edw
6x6UnyB3ZPNk9e5V3HfFs/NZz73D5unIzO3ckzzPr6mzj7tVZbezjh7cmt3l
H5j7l3Kq+Im5b68bVC3+Fve28sv3mHtC+cd9xd2i/PQ+cqvKD/eTOyy0/Iv7
5vA3Un0M95bP1xt2SeUeJ169hbnczXzWrzz1l1vRtvyGcId4lx+Q+4Z4tJaV
M//Xm840qDSjJvcYK7MOh+pzNxXvxrsm3DJ9+Q3mDtpcfoLc10ruiXeYe4N4
djuBe1Tm9vI78r9uPGfpgPSJ3JLy5TeLO6B8uSzkvlJ+e1dy/1d+O9Zxjyi/
fFu5G5V/XDfu0vLTO8LtV364U9yXLpZ/ca+ts+9rsDf3MI/Vv7UPuO0qlT9h
3MU7yxc09w95+Q3hvrCm/IDcruLRyqK4hy7MjWiezG2bGC6uQO6iyeUPCPe3
4PIbzH3OsfwEuV3KH99KWf9rofxxs+KuV/542HAXlC9ne+4v5cuvJbdX+XLp
xO1cfnt7cQ8uvx2DuOuWX77h3H/KP+547k/lpzeD+3T54eZzr1he/sU9MH2i
+ARzlz9tgZu5y6+eeje3+GHFBc1d/rZyOsFdvvo8z3OXH+3zde6K1+c97orX
nw93xevqHXfF6+Urd8XrIJC74vGN4K543BK58fHgrljO+dwVy6+Mu2K5qLkr
bq9Z9v+64nZU4664fHW4Kz5uQ+6K02vOXXG4Dtw9Kr64y9/OSwdwlz9tZx25
y6+e/1hu8cOWL+j/dQUfTtwVr/ul3BWv59XcFa/TjdwVr7+d3BWvqwPcFa8X
T+6K18FZ7orH9yp3xdnd4a54PJ5yVyznN9wVy+8zd8Vy8eeuuL3h3BW3I567
4vKlc1d83N/c6Dd3xeGU3PiV84/n3Og5N3rOjZ5zo+fc6Dk3es6NnnOj59zo
OTd6zo2ec6Pn3Og5N3rOjZ5zo+fc6Dk3es6NnnOj59zoOTd6zo2ec6Pn3Og5
N3rOjZ5zo+fc6Dk3es6Nnuf+4zk3es6NnnOj59zoOTd6zo2ec6Pn3Og5N3rO
jZ5zo+fc6Dk3es6NnnOj59zoOTd6zo2ec6Pn3Og5N3rOjZ5zo+fc6Dk3es6N
nnOj59zoOTd6zo2e5/3jOTd6zo2ec6Pn3Og5N3rOjZ5zo+fc6Dk3es6NnnOj
59zoOXftihcqd16F59zoOTd6zo2ec6Pn3Og5N3rOjZ5zo+fc6Dk3es6NnnOj
59zoOTd6zo2ec6Pnv//xnBs950bPudFzbvScGz3nRs+50XNu9JwbPedGz7nR
c270nBs950bPudFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bPufHj
cqPn3Og5N379+cdzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bPudFz
bvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bPudFzbvScGz3nRs+50XNu
9JwbPedGz/P/8ZwbPedGz7nRc270nBs950bPudFzbvScGz3nRs+50XNu9Jwb
PedGz7nRc270nBs950bPudFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs9
50bPC/7xnBs950bPudFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bP
uX0rPOc+WeE597IKz7n7VwDHjZ5zo+fc6Dk3es6NnnOj59zoOTd6zo3LmRs9
50bPudHzwn8850bPudFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bP
udFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs950bPudFzbvScGz3nRs+5
8avoH8+50XNu9JwbPedGz7nRc270nBs950bPudFzbvScGz3nRs+50XNu9Jwb
PedGz7nRc270nBs950bPudFzbvScGz3nRs+50XNu9JwbPedGz7nRc270nBs9
//uP59zoOTd6zo2ec6Pn3Og5N3rOjZ5zo+fc6Dk3es6NnnOj59zoOTd6zo2e
c6Pn3Og5N3rOjZ5zo+fc6Dk3es6NnnOj59zoOTd6zo2ec6Pn3Og5N3pe/I/n
3Og5N3rOjZ5zo+fc6Dk3es6NnnOj59zoOTd6zo2ec6Pn3Og5N3rOjZ5zo+fc
6Dk3es5dq+IFzZ1T4Tk3es6NnnOj59zoOTd6zo2ec6Pn3Og5N3rOjZ6X/OM5
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
ei4Fr47FVsPGPQX0XArSwN0d+o58Bui5uF6a1aw6spUPoOdSuPXnwfexj3wA
PZeCtfdFeUyv54CeS+H1yLmDavk9J7dl0POIune72S8APZfBkaBzl6dKXgB6
LoPxIQecvp18Cei5DH4XVP12r+crQM9l0PxV0oHBaa/IcxnUvnXY8MXzNXku
g4sm2X2dHd+Q5zKwbevWfLvxDXkufn/9GZ9e39+S5zK416BNtSyPd+S5ePx6
uleBTu/JcxmMutjJr3evD+S5DLrahdTaVc+XPJdBssXNhaV6X/JcBk7Wri/z
iz+S5zI45nZ3nf+fT+S5DM4Nhad/Cj+T5zLYOcpt41vVF/JcBm8/vdr369BX
8lwGqaeXXTrc4Bt5LoP2t4Ojvz/9Rp6Lv35unMOnMd/Jcxlc3nXlw/ui7+S5
DFLO955j8PpBnstgycxxzjGOP8lzGawYMWPwEfVP8lwGsn1nZq9540eei9e/
7fe7idv9yXMZ/Mpb9KPVyADAnzfKoNQ/YfSLRoHkuQySlAnNclSB5Ll4fuPX
xLVKDyLPZTBlbnPJ7/Bg8lwG0RbPFnkHhpDnMkjb7BrkERpKnstgwMP3Rp/k
MPJcBh0XR711UoST5zI4uOpEwamaEeS5DBZ/r2Yy5X4EeS6Dqi/6Nvk+KpI8
l4FFlcF+/UsjyXMZdIlrFWx3PYo8l4nrSPLy+/Ro8lwG2Y+9m163iSHPZfDk
rE+Hpikx5Lm4vuJeFr5/HEuei/dfuJfz92AceS6DxjO9Tw9xiSfPZeCvua1y
nJNAnovn03XWAM9pieS5DE4e3jjyy5wk8lwGMw9E7z/omkyey2DcvCrnL3mm
kOcysNm1u+MX31TyXAYKv0GpP1Vp5LkM6nVtVcOveQZ5Lq6HuA22uyMzyHMZ
+Aa7tLc6kkmey8BysPMaxegs8lwG6vd9eofZZJPnMvH7zH7QviCbPJfBrFoD
tr8MziHPxc87JuW+7dtc8lwOsY22Tqnrk0eey6FGY8/ja9/8Js/lUBZ1YbZ5
yB/yXA7h7nc9XxXnk+dyeDb8yp+tzQvJczlE5Oc1nbmiiDyXw7SOfiYrP/8l
z+VQN015Ob5tCXkuh42N9g6STi0lz+Vgvr7tmk3iHI+ey6F2q3Xq+7Iy8lwO
fQ52PD0pXkKey6HZmrjrAwKk5LkcbB8ZI0f4ychzORzfFXvXKUpOnovnFz4g
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
18kgzzVwICQ3dbRpBnmugd6lOftHZKST5xq4sXpDu56f08lzDRzzMrdzupJO
nmvgjdLS79P2dMC/H6yB+zcjb8yanU6eayCs0fZmHfumA/59YQ2sqp/1qY9t
OnmugcxKN4u3K9LIcw1YPDLtLI9NI881MCa4RHnndRp5roEUhSbo2Nk08lwD
Lc6PbfFgUxp5roFCk+v7NdPTyHMNOJ1xXLe3dxp5roGAy/VW9bdNI8/Fz/d5
p7KNKpU818DdE87XRyWmkucauKmYUnD5Qyp5Lp6/tvviZldSyXMNHDnrfjph
Vyp5roGokaNrf1nwfz9v18BqC6iaOCSVPNeAWZs6b5u3TCXPxe+/4ue8K5VT
yXMN9HcwOzE8P4U810C1CSmpjUNTyHMN9At5m9byWQp5roGjMQPbzDmdQp5r
oET7s93eTSnkufg8u27c12x2CnmuhfOXf96qPiiFPNdCaLuVhXKHFPJcC9tz
nHdYWaSQ51qYICwqmpCfTJ5roVnippSPYcnkuRa8JykKpr9IJs+1sNxs6ju7
88nkufjrJQ3yquxMJs+18CytqL7DomTyXAutHh4sXjQimTzXQvePj2uHdUgm
z8U5+HmX1otqJ5PnWnBrmRfVWJlEnmvBeOb+F7PUJPJcC3fXjz9b60cSea4F
3bg7escHSeS5+PlrbLl1/UQSea6FtxqZSfPNSeS5Fpb1DDQGOyWR51o4bNNy
1iXHJPJcC00azL53on0Sea6FQne/qw9rJ5HnWvizqpdpoSqRPNfCnjm+wZMy
EslzLcR8r/E2KSCRPNdCiH/rFkeeJZLnWsh+t/nh3POJ5LkWSpx3mk7Zk0ie
i79/w8FUlxWJ5LkW/Ff6yO5PTCTPtfC9Vobesm8iea6Fr4+/+3g4JJLnWhg1
Pdiva9VE8lwLjSd1UCjLEshzLXjtTdRmJCWQ51rYn3LgVOGPBPJcC8P+Xl5v
+ySBPNdC4ByYu/RcAnkuHt9ttGXUngTyXAtHrEf2WeicQJ5rYfzrTXdrTk0g
z7VQEPLNJnVgAnku3h/7n0NCWieQ51rYfOPL3wTrBPJcvL4TrydaaOPJcy18
2jV5i2VePHmuBUcHyZaPv+LJcy1UK2yfM+xDPHmuhVSflrOLbseT51pYVzox
7/mJePJcC+2Lzk46uz2ePNdC27sSp3PL4slzcb323xLxalI8ea4Fy50DykoH
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
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fotG8l3J80qcr1RzOoxcS55XwmR1ivGJnWvJc+Z+enknBz9fS55XQiO7lThJ
tJY8r8T0E5Wjdo9bR54z1zf7O2be3nXkOTP+aEXLTx/WkeeVyNucJfyt50ae
V+KvV7uh3jZu5HkllvtuFn484UaeM/NjlxoUnuJGnjN57Mb5ll3Wk+eVcP1y
0ctl5XryvBL7RrVYaBG+njyvhKpH5uQ7devJ80qs67Lh6IfxG8jzShzYd9ff
128DeV6J7oPKr1fHbyDPq7B3V7eBBl02kudVGDP8zYk4143keRXWhxUMGxO5
kTyvgr908X5H1UbynPn7Fbf/9Z2ziTyvQo9w4/TbVzaR51V4lH7rW3rFJvK8
CiPyNox+P34zeV6FoqBp15YEbCbPq7A6uvWBpzmbyfMqvDR7uvL90C3keRUu
Le2acOTgFvK8ChvzNzg2S9tCnlehplfJkTnmW8nzKpQtbiO127+VPK/Ckcg3
tm1St+J9o+dVqL7cwuTCwG041+h5FX7YXlT9PbgNbo2eV2HsfpeIqqxtmNQI
XBWcdtSnx4zYTp5XQd9oe+/VgdvJ8ypYmN+c/rtkO3lehfrtYrUedpDnVTDR
i27V5PoO8rwKISFlo/9Kd5DnVZh4jNM7dog7eV6Fpanj9mmWupPnVXC4PPdy
eKA7eV4FZbOja969dSfPq7BlkeePSVXu5HkV5uyf925Qj53keTV851UP85+7
kzyvRmlARtcFB3eS59Xg957tdTpqJ3lejVF35kyZXLKTPK/GuMywHcs7e5Dn
1TDbqWpbP9uDPK9GsX6yqdTHgzyvBkd57InXcw/yvJq570PvNlZ4kOfVWNGq
y9KMnp7keTUsjj2+8sbRkzyvxl7/6FOdAz3J82pUG32xq//sSZ5X453sfP10
qSd5Xo2joZ0vdRrhRZ5XQ9vLx8Vtgxd5Xo2mJtM2jbntRZ5XY8TjCcVHcrzI
82pYf7zMX9TBmzyvhl2/Jt8ezPMmz6txccH904cCvMnzagRbDjqU/9WbPK+G
e5+EjBitN3nO5Gn7fgydsos8Z8bfPP5yn727yPNqpMk6Bd58tYs8r0Z2pG9x
uGgXeV6NweOb1U8ZvZs8r4b5uavq1R67yfNqZJ7svKbj893keTWyKje5LxHs
Js9rEBdz6djw0XvI8xpEjvpqcMVrD3leg1PbHWcFv9pDntfgnn71pyHyPeR5
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
r4jP9dSfM/vt4v5nS07XU38ug6JD598+y+upP5ehYrfBx55D6qk/Z+6v9btx
Y+R11J8z89v+cPmXn3XUn8tw4ZP3wR9X6qg/l8Fp09lozqY66s9lsLoaNXXY
pDrqz2XImfYw+2TLOurPmf1paoXl+bXUnzN989ThY69F1lJ/LoNP5HifmYdr
qT+XI+Z2j4I1i2upP5djzdU7ptxBtdSfy1E/4FrHHFUN9edyhKQXHRudWkP9
uRxbQlfYScJqqD+X42a28YS++2uoP5dj6aw8syiHGurP5ZhryefdM6+h/lyO
AL81e9SqaurP5VB/XxzyJr2a+nM5yq/pzcp8VE39uRzdX99Y4Xi4mvpzOf6E
b/49fFk1eS7Hud4RBzaNqibP5XhoF9WsSctq8lwO9y3n5bKSKvJcjpmPnfvN
+lhFnsvh/GtdZ6OrVeS5HA5r3bfz3KvIczmCSzqL5thVkedyFHrZBqvMqshz
OXM+5Swz0q8iz+Ww7hswZ01eJXkux4k3Ze4mbyrJczkUkiV5nS9WkudyqD53
CdnmXkmeyzHf2fR3p3mV5Dnj1NMJu9sMqSTP5Th8tuCTU9NK8lyOgR/tPtaW
cslzOZ6Ubg5K+8Ilz+WYdiLNxegOlzyXY/ffT9MP+3LJczkq3Vtus1vJJc/l
6Kc/zGDVVC55LoeX8dARH3pyyXM5ahde7eeqqiDP5SiJCGrtkFdBnsuxbvmb
/v4fKshzOcbqGV/Xu1lBnsuR3L/1k1ifCvJcjt+vPgX9WFlBnsvhH7cjsD2n
gjxn9qNlZlqIaQV5LkczC1XkdsMK8lyOn2HT3Q6VlZPncrjFLZ6Y/qOcPJdD
b4Wp9/pH5eQ5Mx8xtt0rT5WT53LkPUlxtHMvJ8/l+CCMCLq+sJw8lyOwYrjH
4PHl5LkcK3zHzhJ1LyfP5eDc/bZJqSkjz5n9Gi8fblVSRp7LYYXvd+p/lJHn
cjxt16yt15My8pzZbzaLSt2CyshzOY5P7Jl2blcZec7M16Dzk0TLy8hzZr8d
yfU7a11GnsuR89e4jevAMvJcgWOqZ0c3ty4jzxXgvNGLfygsJc8V8Oh/+2Lv
3FLyXIGefQ94/4opJc8VCLDedPX+/VLyXIEoR7vM6DOl5LkC5TXbTBXepeS5
AuojifydK/77vF0BZfOVe/va/Pd5uwJNnSdNUln893m7An1uSrs371RKnitw
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
KmQMC4lJXJdJnqtQZKvcOX5xJnmugkTs0OOlTSZ5rkLPn6mxM8dlkudqtLo2
c1OdeSZ5rsZY46quD7tkkudqTItyeLy7WSZ5roZz6DblUnkGea7GrG2nSu2r
MshzNR6fQeDSvxnkuRquXZ1H7UrIIM/V4O9v1TT8YwZ5rsbAFlUl3IgM8lyN
TV9C7lvdziDP1ej41nnI/aAM8lyNMXeL5vU7kkGeq3FgnKwu0iuDPFdjz/jv
1fbrM8hzNUx3f+lnsCSDPFdDzY/2+D47gzxXo5wb+e7G5AzyXI1ARdfco8My
yHM1wqaGRB3sk0Geq1GwfFLvE+0zyHM1hkeMMrxvmEGeq/FqWWdOpvi/78Op
8bv7og8duenkuRpO1Zfs3HLTyXM1/oCT/j0hnTxn5nMcd9LEz+nkuRomg33W
fHiWTp6r8dR4/GCHe+nkuRpHQoK8RMHp5LkaLwvtzB8GppPnavxqusF0+4F0
8lyNshKz2dN3pJPnavRp18pvkGs6ea7Go8n5T3otTifP1Zix80ZUv1np5Lka
3mtPuo+fnE6eM/vh4+DU5cPTyXNmv+we8/qsaTp5rkb6iLCm6R3TyXM1pAHP
7ps1SyfP1ZgQ+PvAcWUaea5Ght6NrbK6NPJcjXpByxV7itPIc2Z+DCaNaZqV
Rp6rcf/fwT/3fqWR52qs+7HFcsHHNPJcjfGlv/q1epZGnqtxIu9qcOa9NPJc
jS0zOng+vZJGnquxrde9WxdOpZHnatg48QwDDqWR58z82qUeP+GVRp6r4Tln
cYfrG9PIczVs238+89YljTxX48ZC/+IyhzTynLn+ZEdpH5s08lyN2CqDVxsm
ppHnalQrw5t+HJZGnqvxQe9QZp9+aeS5GjlavebnOqeR52r49j84r1XLNPKc
eb5qv/pc1qaS5xpsmF++fIQolTzXQClvOyuDm0qea7D2z/Wo6QWp5LkGs1XV
whlpqeS5BofzEgPa/UglzzVomtsxi/s+lTzX4FrLhO+JUankuQYrjw+1/RyW
Sp5r0PLrZXy8lkqeaxAhvh3y42wqea7Brf0G9gVHU8lzDWZMvTtFf18qea7B
yW7nFlruSCXPmftZZHxoy7pU8pwZT4t1Ec+XppLnGnC/f1wsmJ9KnjM/XzZh
ucOMVPJcg9jN99zfTUwlz5n735uWbTMilTzXYAia8X4MSCXPNXjCm3N+cfdU
8lwDx6xVz+rappLnGugdq5p0wTiVPNdgz9MXPacrU8hzDYwfP52h4aWQ5xqs
G1h1O648hTzXwPJZaJ/gvBTyXIOQpRMiPdJSyHMNbjgOsVr2M4U812D8mT7v
535KIc81cPJ45z3nRQp5rsG/50duOD5KIc81eBmeZOd2O4U8Z+7HrF/W4eAU
8lyDpKRz8kenUshzZrylp8PyD6eQ5xqkdIj41X1vCnmugUu/+4tdd6SQ5xpo
b9hPfOGWQp4z6+Mfsq6dSwp5rsF+g8c/djmmkOca1Ld94lgxK4U810BoKROv
QQr9f18NFvYzvls+NoU812DEmQ0zvS1SyHMNtsWkZbXun0KeazDOpat1VLcU
8lyDBSaDdru0SyHPNZi2pO1mk6Yp5Dmzf60Fne4pk8lzDe6YLw8eV5lMnmtQ
EOEZnJeVTJ5r0G5iUdNLccnkuQbTZbO3tHmeTJ5rYNHBuGX1rWTynNmPYS99
R5xJJs81OOHz0nrVgWTyXIOH7Tz679qcTJ5rEFPe7ujOJcnkObN/LoUPfWKb
TJ5rkJ2XI5ONSSbPNVAfjUhx7p9Mnmuw9a3zlZ/tk8lzLR5+vXDFTi+ZPNfC
6UVlXGFdEnmuRXmL2Hf++f99v13L6LPPZWrCf99v16KrwILT5P1/32/XQlZj
5130MIk81+LGXZfi+CtJ5LkW/IMdt/88nkSea2HYcqk2c1cSea7FTx/4iNyS
yHMt3Oa3Su6/OIk812Lpj1F5a2ckkedadLm+6NSL0UnkuRZb9lr/6NQ/iTzX
YmW4xOu4SRJ5rsW/oBCf5gZJ5LkW8e7nfl3nJ5LnWnzJsre2+pdInmuxaMGp
RF5KInmuRTMjU+fomETyXIvjNh1/+EclkudavJh6ucnG24nkuRaSo8bapecS
yXMtpsSVXl1+KJE812KeU2nMVvdE8lyLuMq8FadXJ5LnWqwYkLLso0Miea5F
oi33joqTSJ5rUZi6u5fdyETyXIvlFvLXD0wTyXMtqme3celkkkiea/HJ8ZDo
nEEiea6F/Vxs7SFMIM+1yPuyJuJFSQJ5rkWl54Bwl4wE8lyLtfJKqw7fEshz
Laq8J6378zKBPNfitfVX/SfhCeS5FkFXnAzPXE4gz7WYNKt60cGABPJci6Gr
bxQf2JtAnjPzMcKiVNH8F3muhcFOz7X3lieQ51rMbnp4ROLcBPJci15hPpWG
VgnkuRYVSVd+mFsmkOda+C46nXutbwJ5roVd4a1qRfsE8pyZ76TrIRsNE8hz
Zv/k+dqUiOLJcy1+y+JVW8rjyXNmfD3m9DX4E0+ea/Hd+NvNsF/x5DmzXmtM
1zq9jyfPmestXLGy49N48lyL2v7nfApD4slzLbSayojX5+LJcy2CE6OLbhyO
J8+1KDOz1z/rFU+ea/FnwTjt6fXx5LkWLs3uRF5bEk+ea1FzdHns8znx+D8g
ziTi
         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw923c8le8bB/BSKe20+zakHU0aUj7tPbSlSUpJSHsoZZRSyigSJYW2KC1J
0ZS9Q8bB4Vhn7/F7cPU7/3id13nOfe5x3df7us9zDLd2XLdHq02bNiUd2rRp
/rup+4SYkKZS3ItaUmA5cI9Zm5ZHGexrxtmNmeBslnuidvSUTmWweDU52f/7
GbPHvKxV1j3LUL4104lv52F2zi7+iN+AMjhOUpxav++a2QbWw+BkvTJkLD43
OznF32zcNp8vorFlsDV+FfA5KNhMndPcYBnyfHeWhJeEmWUzrVmYlGH0ojWP
AyIizKK+rZjhNa8MPcwXvJROe2rmgmk73i8rw5sUB2Phypdm694O9ahbW4a9
08LbTeC+MhszpdPTwZZl2LA6Mvxal3dmykfNHSxDyOgRAY0PP5pl6hfJztqV
4fiGiAmddn82i2B6F+3MXO+cUb/OJNnsdJ/nS8pPleHzwk4FY7Z8NzO/estB
160Mo5Kyf6V9/WU2Svt8wIIrZfj2o8ji4oU0M/nZ5gGXwXc168zCZZlm6ZL1
zIjL8PzjhNvnz2SbPXCa0zk/vAxGu05WXivONTvZPH1PyzBxfPBBpV2B2erm
4b4qQxP79tVN44rMRjR3L74Mg2tqxKMG/jWTNjeXzMz/Eb0qSUiZWerv5kcZ
EqRDcm8vqzC7vyhOoMopwxPLZexZPSvNjifcHTSppAzDdLyuBPCrzFYys7er
qgwfQ4f77OWxzYZHO++70VCGq9cqR+3rxjETj21eEGY+xs0SrFtSb5YS1txg
GRxiO/b+e7fR7B7T2kjtcsQPN7lReoVrdtRvQPtN3ctRdA0jc/N5Zsu7ahlc
7FeO6UOXDRtnLDAbxqzG26HleJ+/x9A4TGgmVDUvcDmuQH/J6mFis5/HmjtY
jkd/AhLTnkvMQpsimRUux66B1gu6msvMDjO9O4Ny/BSF5W9rpzBbWn6qeUXg
EvCruu9PpdkQSxvT0jVMe7Nc4B2mNuM3h59FOc7bPux6eXEbfG8Ol13l2PDY
2LvN4ra407y8+8rhn/hs7Po1WjjUvBxO5bi5d9HoJ9btsLh5+k6UY+lQjvsU
1/b4r3m458vh1au9Vo+oDuA2d8+rHA7+EwfZ/9HG1+bmbpTj5PGALv2SOuF2
UPOD6e+UD+aXF3WBo65b4q+wcmgHri0qmNwdC6/YsxWPyvFutrFT7bueGNi+
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
zrS3MvTup4Hl5LkChwqTltp2LCfPFfDdO27XBNG/++cK1P6tjuzF+nf/nIlX
rVsVvTP/3T9X4F7YpmyjT//unytwtiBpzqFn/+6fK7BgkaoqJfjf/XMFCszC
ri+4/O/+uQL3O6VqFZwoI88VULYfrOVlW0aeK1BRFbFh06Yy8lwJx2Ktz1hU
Rp4rkfFtbvdFxmXkuRLzt9e32zuijDxX4tv2Lnb3dcvIcyV6vxmsI29bRp4r
wbaZtKGwopQ8Z94/K89Q+LmUPFfCqlw6aWFYKXmuhL14Ff+Hayl5rsSybsd0
LuwqJc+VGNdG3sVxbil5rkTJ7GU3fPRKyXMlNum+ncJqU0qeK7FQ5eK5v/wv
ea6Etih2nP6Xv+S5EnPerovrGv6XPFcic+CUH2Pd/5LnStSs0lIe3fOXPFfi
4owNTYLFf8lzJZzirs69P/Yvea5EW3H9NdfOf8lzJRbEe5y6Vl9Cnitx8D0e
pKSVkOdKpJTkPJvxsoQ8V2L8/XSTLL8S8lwJro1X3e1jJeS5EuXvxtre2FJC
nivxK/Hu2tezS8hzJZrOPDbX1ishz5Xwm5Da2b1dCXmuxOGodWMmsovJcyVs
Xi9f3T6lmDxXYrT9pbHaL4rJcyUc/O7tNPIrJs+VWKRVE3LleDF5rkSSlvO1
7tuKyXMlDN90L/kwt5g8Zz7fddl0v1HF5LkS7fbZLvHvXEyeKzHSa09CQlMR
ea7Eg3OSZbq5RfT/QEqMyPMIuva+iDxXoui44Xaje0XkuRJ6I98tauNZRJ4r
saPyUXvRgSLynBmfu8HKXuuKyHMlfnQdkL5hZhF5rkSnuaK5n4YWkedKhA8U
bDTvUESeK9HRnPOlY/0f8lwJjwLLOVVZf8hzZr4c7E7XvPtDnivhNYhl1Cvs
D3muxOfPU4buvPSHPFcyLtvwMx3/kOdKTDQYv3//5j/kOdN++3TTUfhDnitR
OGnOyA5j/pDnTH+3yos79fhDnisx1Wv08MmSQvJcCcmLU09PlRaS50okbl5i
WvO9kDxXYrrZ4csnogvJcxVeKE5uNggqJM9VqH1st6vNhULyXIXHftW7JXaF
5LkK0fnDhvfcUEieqxCsX7B5+ZxC8lyFbtt2/ng4upA8VyFtm6+Rfs9C8lyF
iRGFlp9kBeS5CjaDx7ZxYRWQ5yr8lySrskwtIM9V6OeyLt3iTQF5rgI/Nf7c
sbAC8lwFYejSD7FXCshzFdprX17c81gBec70r0dg9ZVdBeS5CqLLXaxGrygg
z1UwKFSdLp1WQJ6r4JzQUR2nV0Ceq7B1+tznT7v8+z2cClOXm25IFOeT5yqs
43R6yyvPJ89V8PlpdH9uaj55rkKAaWLR07f55LkKG/saTJz+IJ88V8Hx+r7d
xT755DnT38msRXdP55PnKrCfnLp31jafPFdhUu4Fs1Pr88lzFeZ5fam7gXzy
XIUJoc5Hvhrkk+cqmObOfthnQD55rsKw9FkrzrXPJ89VeKclMurAyyPPVegY
ZzUhoiSPPFfhtYzVwfpXHnmuQkzEcu+Zb/LIcxVO7Uj3GfcgjzxXYefVvmXG
N/LIcxX2OI5bZXk2jzxXYVz/c5FBB/LIcxU2H+d94lvkkecq9HX4bLtncR55
roIsy9+JZ5RHnqvQ7uLRpzeH55HnzPp7ZjRs6JFHnqvwUHOko6EqlzxXocrG
7/d/dbnkuQp6l+N7jizMJc9VcPtYFrnwey55roKgcvVel9e55LkKp0Ni9dLC
c8lz5vm2AU+n++aS5yqs8asoiXPNJc9VCMzJurLaMZc8V6GPsp23ansuec70
34LzKmllLnmuglbuupJ7prnkuQoXDKyL/cfnkucqPO/h73V3YC55rkKu9fv4
xE655Dmz3rbKVVJJDnmuwhJRbt/F7BzyXI3Q2H4Nj/JyyHM16taUPx3xLYc8
V+P8+8cTY1/nkOdq7N9tstLiYQ55rsaZkw9KdQNyyHM1zAzWJ1W455DnaoTV
KjK/H8khz9Vwfxpe/dkmhzxXw8AkpDhjQw55rsZ0u0s+woU55Lkab0+uLTKc
lkOeqxG/cvKdk6NyyHM18hIjn//pm0Oeq9FP4d60RjuHPFej97u/poXibPJc
jSXhfQ4dY2eT52ocCkuzH1OQTZ6rYTFZ2bX+RzZ5rsaed9mTkt9lk+dqJNdl
xr54nE2eqzG3/7vjz4OzyXM1fC5dt0z0zibP1bBmh5tWuWST52qwAy7IBztm
k+dqiHtpjtnuyibP1Xi4eeKN5LXZ5LkawYtsxxkvyCbP1QjRmq8XZ5xNnqsh
tbm1afnobPJcDZWl6zNu/2zyXA2njRu1H+lkk+dqcGKezT+syCLP1Rg/YefC
NQ1Z5Dlz/RKXhtmlWeS5Gr4JFnqzM7PIczWmyM9+WpmURZ6rcefcu2cOr7PI
czWy9nRLC4vMIs/V6Jvyvl11UBZ5rkbUitlTTb2zyHM1hp1aPCfsbBZ5rsZn
i++dBhzKIs+Z/uRUnbi7O4v+31eNuLltnWdsyiLP1ViRG11QujSLPFfjvmHS
jUDTLPJcDUHSnAtWE7PIczUcz2zzmfX/37cz1w+5ETqiz7/ft6sxrfBCwOCO
/37frkZsejfLUfJM8lyNDzfnZ81pyCTP1ZiauKdyT1kmea7GV+umYyHZmeS5
GmfDLztVfsskz9UImtv37az3meS5GluH3DW+9yyTPFdjTvr+1D5hmeS5GnKD
mv2B/pnkuRr8go+88ZcyyXM1ThclrPx9OpM8V+Po+CbrM46Z5LkaT+ZeGGy6
O5M81yAq+o9Vp82Z5LkGxu+8/qtcnkmeazClaPXUNLNM8lyD+U79fb5NzSTP
NXg+Xz0odXQmea5B59ErPpUPyiTPNTC84bynfY9M8lyDnJl9JcbtMslzDa4/
0Ww/LMkgzzXY2zjO/VNdBnmuQfCgN+sHlmWQ5xpsUArjXHMyyHMNlsVsDRT9
yCDPNRi/+mrF8Y8Z5LkGK45tdO0Yk0Gea1DW8dG2BxEZ5LkGtu8fWq8OziDP
NfiedMOlw/UM8lyDIy5FgT/dM8hzDXZ1Hnjv9skM8lyDUlXHcyccMshzZn7a
XR2+e3cGea6Bm2fsYUuLDPJcA7/tz6x2rMogzzV46pyV7zA/gzxnxuN478uV
GRnkOTN/+953f22YQZ5rwPaqieIMzyDPNXD91v+sYf8M8pyZL7ctp091zSDP
NXi9jHU1p20Gea7BS/bgxUcb08lzDT4lvjDfUphOnmtwYuGnfhuT08lzDfbv
zTy870U6ea7B6VUvF/jdTifPmXj54GCd65FOnjPjPbL96cRD6eS5BpwnfdSh
29LJcyY+DjoYj16aTp5r8EPnomGyUTp5rsHjS/FJJ4alk+caJPR5nr+gSzp5
rsELB9PFoyRp5LkGPjvdGwaz0shzDbwMa56MT08jzzUw79ph1+oPaeQ5M/8h
b2ouRqaR5xoodgwale+XRp5rsGSsh9DUNY081+D3A+/pcfZp5LkGRultUxZt
SSPPNTjswLvBWZRGnmug6x9+4MHUNPKc6c9/wTMPD0sjzzXoYxBQuKlrGnmu
wZnXlyatkaWS58x6qx7+t606lTxn3j9g0zmX7FTyXIPFx2fNjk1MJc816Lnf
0Fj1LJU812Daw9nLtgan4n+G4ptu
         "]]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw123dcjX8fBvCkpcwyQlmRkZmV5FwHGdl7ZET8SEJmRoQImUmyCVEkhewZ
Ki3tQWnvdfYez1335+kfr17V93z3+3Pd5+jrumPRf7o6OjqF+jo6zf8uaz/s
xe2mIsycqTO0i6yYo9PyVYyfu+tPpJwu4WTvr7EeZVSM9WutfJMtSjlP+Blz
XTsWo/FQ2D3LV6UcH/ePewLNi/HG2mdX8rwyzpKy0Js/+hTD2V4vvLy+jDN4
9cVY8aBinJw6s+OuC+UcTVZzg8XwnuN+6ejoCk4m09qKCcV4N1s4zKKgghMW
N3v8mcnF+G+irfHC05Wcwxi79r1TMU4VX9tgY1fFWfS218m6hcWImN796pu6
Ks7AUUYRFs7FWCP17an7oJqjCm/uIPP3gsqz3dbWcNL7/ZUfcS/G2W0Nt/Us
azmPmN5F7SrGg3XcgTlFtZxDnSNnlBwsxrnyKovrj+o4C84Hbzf1LcZa92eB
zjvrOQMMjgVNPVsMpB35OpDbwFEcaR5wMUpWZsjamTVyfksXMyMuhiDA5GWP
2kbOQ89JxrkPilHevcRv1c8mzoHm6YsoRvs3JV13LOJx5jUP91Uxji+8P3nF
Dx7Hqrl7H4shvvR1iqcdnyNrbu5HMSJf/RjyOZLPSUlu/iqGcmtlT6eBAs79
aa+F6qxirPg+ZZb5fQHH6/PdHiMKi3HhpqnKtreQM4eZvXUVxdgXWXLm3h0h
p2/ULreAhmIMtIpb69ZHxJEMal6QYnSJuSYLeCjiJIU0N1iM6Z7DqvvbiDn3
mNb6G5RAq38+fdArMWdvoLnesvYlSP4w3CMUEs6stro2p7qWQCWz9b2fIuH0
Zlbjba8SqHffEQ9cK+WI1M0LXIIlra++nsSXcn7ta+5gCcI730yp85Nx7jQ9
Zla4BGNSEpbZ95ZzdjO980YJrmd38h31Xs6ZWXKweUXQJvvItfzlCo6l88aJ
RfNLYHRnm8BepuAImrffihL865Deau1NJSe+ebusK4Hi+c65syerOLeal9eN
+bl6+C6TWhVnZ/NyeJZg6MnJVo+D1JzpzdO3vwQ9ow4PGeio4fRsHu6xEgSv
DXa7ItZweM3dO8OMd+qmbGm4lvOzubmAEiw81YX7bKQOblxv/irBt+e18aXn
dbDD1PdrYkgJVswI7RtSrwPHsx5VyvASXHqQI6uf0wrd9ZpPWAmWqxbpJ0W2
QqN384YuwSrTZSZcU118FzcvSAnuOob9XeCli2vbmxssgaDrj8W6/3SxjWmN
n1GCV0NUa1ZOb40p6yrS+v0twYaIEL5zVGt0y09ldmAJosbZmLW10EP9wuYD
wvRn+OqsnWf08C2xeYFL0CXYY0mATA9XpzZ3sAQXNo76umOLPrY2H1+9Ukhn
TltkWqAPbvNxa1sKw9a2i48sMECX5uPRuRQbht3o/i7OALXN29miFGsCNhgn
cAzxpXn79S9FsLbkWtRbQ1xp3i7DSnHmue6M/WOMsKV5eceWom7Q/tD+L4zA
aV6OSaW48rZy8YdRbWDWPH3TSjFvd6dWU162QXXzcOeWYkqC4dbP44zxqbl7
y0qRHrrYZdxHY1xubm4t077toA/Pp5pg86bmr1I8tQjYOjLFBA5F85kTXIq8
4/e3fV7RFs2nLWEf03+v8FSXyrZonj35kVLU910T0WNfOzCDZTZ0KQYd7ThW
bNgezbfV6ouluPWr/LH4Zns0777zwaWo9FIt6WfbAc2tfb5bih+SyNvHEjug
5fp8XIoXR9Yqztl2RMv1F1WKQ4lTmmRHO6LlunpbirLK27JTaR3Rcr18LcWS
wAvuk/p2Qst1kFCKiUuW3LfY3QktxzetFFGrtxoMjuuEluOWXwptVpjBph6m
YI8HM16f5Ra5O0zRsp1rSnH+85JEnzhTtGw/fikmy4fd3tDLDC3bRV4K900c
Gz8vs5bbtK1uGY5OSOlcl26GluUwLsPTcUP1rg7rjJbpMy2D5lnOM3//zmgZ
bo8y1BVdSkuu7oyW7vUrQ3TyqbHrZnZBS3M2ZajZsTNqZngXjG75KsNB92e9
/U26ovl23jixDFMsNnkM2tEVzactaGoZ5o144T8wqyuaZy9udhnuXH194Kx9
NzCDbd7QeNPq19QV97uhhY/VZfCNv6wJMDFHy3W/sQyNTmOSHPaZo+V69ijD
0Cy3nNWl5mi5TveUIVv8ZIVkfne0XH/eZXBZvfJquy/d0XJdnSzDk2EFRY9G
9EDL9XK+DIHliQFxIT3Qch0ElUH5wrTLzi490XJ8b5ehdotl0RP/nmjpXWgZ
ZtfJdu5vZYGW4xFZBltrn9X/DligZTu/LsPEkCP2JUILtGy/z2U4FVj26uQO
S7Rsl7gy5F4qOZZWb4mW5U0tQ1CC5X9xW3uhZTlyyxBekD/Co74XWqavqAx7
FvT+Fre9N1qGW1UGfmCd/l9Bb7B+l2HcskjVMoc+aGlOyqwXZ8eifkf7gPW8
HJ9XDe2Y8aMPWM/LMfzl8F9uxn3Bel4Oabeh5jUL+oL1vBz9LVzuLr3WF6zn
5bBaddcourgvWM/LwbU4qK8Z3A+s5+Uwmj97Pvb0A+t5OUzKlj32+tIPrOfl
2OxdmhNuYgXW83IU+81/nrfCCqzn5XgRNtbY8LEVWM/LMST48K/xEiuwnpfD
cp537rbp/cF6Xg6viPYDI4L7g/W8HIZeMS/FNf3Bel6OO9+jj82dNACs5+Vo
SOl753XAALCel2OTXa/eY6oGgPW8HKPf51r9mmQN1vNylDnEZO0PsgbreTka
3XdtmN5oDdbzclRHc0zGzhwI1vNyGL8r6DjzwUCwnpdj9/zY2OPagWA9L0eP
TLsD1asHgfW8HCLTI1e9PwwC63k5jkVW+E3pORis5+U4IVJ8neQ9GKzn5dg2
9cHPnf8Gg/W8HJcauH1KJw8B63k5ej/I2XT50RCwnpfD9D8be7+2NmA9r8Ag
3aZp33bbgPW8Akf7FnFnFNiA9bwCBwrq63tOHwrW8wq8r3XtNjV6KFjPK6B2
bXv9q+UwsJ5X4Inp6mXXzg4D63kFinZcQapiGFjPK7BxIG/Bpq3DwXpegcOz
ki5vLBwO1vMKrO6V0j1lwQiwnleg8ZKp4cOfI8B6XoHoJ0N/SCxHgvW8Au+y
u9TnrBwJ1nOmfXeDu3uujgTreQXuWS42zMgcCdbzCsSEKpbyO40C63kFHFp/
is1aMAqs5xWYMHD0uSOXRpHnFbgiq5Ty0kaR5xXgv9u6aLipLXleAbuMfU12
S2zJ8woskMsGmwXbkucV+JM4fuOXP7bkeQWKv1YZcnuPJs8rsP3adL/gjaPJ
8wrE9R23IuHJaPK8As5Hlmuy+KPJ8wrsTbVu9XXCGPK8AjkLuvHPHh9Dnlfg
h/j5ponJY8jzCnx2C9NN7zqWPK9ERIDB9vmuY8nzSnQNcHB+FzmWPK/EI7sZ
xzqpxpLnlcjVTQl1njWOPK9E5dlJgcHXx5Hnlfh1gW+ZVDOOPK+EudtsK5n9
ePK8Eqq+eWf6nh9PnlfCxWTn5FnF48nzSpgWrpm6d4wdec70b4fX5dAzduR5
JbL0Zk/8V2RHnldikzVnSb/xE8jzSjj2fqnec3ECOrVcqJW432G4a371BFS2
eF6JwfcOvl401Z48r8S55RkTyu/Yk+eVKL3SelyA0p48r8QU2+va1SsnkueV
iMnQlcx6O5E8r4Rr0SffteYO5Hkl3Mf59Lp5wIE8r8TDi2tm6BU4kOeVWHhD
5X8bk8jzSrzOfXvM/eEk8pyZz7FZv7cbc8hzZrzbHwyI3MkhzysxcsRHDP3D
Ic8rcbhN/6r6qSDPK3HK7ihfGAnyvBL2PR/cu9+OS55X4VqQxHWXI5c8r0JN
z46cukNc8rwKi9Nl4zq84pLnVTDec2plcT2XPK9C/J+Db9dZTybPq+Bac2Xb
5XWTyfMq/NHEXPe6OZk8r8KBItlG09zJ5HkVFlr+1mw0m0KeVzF+97qzc8EU
8rwKvRWrjtlfmEKeM/05G9n4LXkKeV6FbSlGY4zbTiXPq8DZPetxlzlTyfMq
bF7n8qjy3FTyvArb01yCfVKnkufMeEyjq0s7OpLnVSjJt+5ktsSRPK9C/fAB
l0yvOZLnVXgtim0oK3Akz6uQ3qXh/Zl+08jzKvRc5B9gsGUaeV6F9q/udl4T
NY08Z14/ai/vomwaeV4FW9GnPyGTp5PnVRhe9u5y0Nnp5HkV9iavL9mWM508
r4Im59z1Yf1mkOfM6z/pfi13+wzyvAp+f7r92P5xBnleheyOgvYS45nkeTX2
GVzf4+k8kzyvRvXU58riJzPJ82pUvYyJmaWaSZ5XY5rxhC9R85zI82r8bK3D
7XrfiTyvhoGv/dYjEifyvBpXLkb71M+eRZ5XI8teFr/h/izynHl9z9s3quSz
yPNqLH691vnQotnkeTWeFa/a1y9iNnlejWtfZ7sXG8whz6sxPS3681vXOeR5
NSaVdW7z/Msc8pxpv2hcfZzlXPK8GjtPzDXXOzyXPK9G4zSH2e6Fc8lzpn38
XqDmzCPPq5k8JtX9FjKPPK8G38pw1jv9+eR5NXY18C1q3eeT59VIvu1/bHn6
fPK8Gvu3usYdt1hAnlcjYNehUaoFC8jzalw/1t6ih98C8rwac4Ttw/59WECe
M+Obe1o7W7CAPK9G57xvSzYOXkieVzP1pmvp4PULyfNqpMYG1925vpA8r8Zv
j/Eff2YsJM+rsbqmJuxe20XkeQ18t8zvYDtjEXleg5r+g5Z5H19EnteAJ/Vu
OPZ5EXleA058wrxpykXkeQ0ORfRTJ9gtJs9rsLXJ7WQHr8XkeQ3a/fY40vP1
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
jntUH/HQaaJbwLyH9ygP8WBx+n17hz/3qF7iwcbogjK1YwjdpzxM65KzsM3M
EKqfeLg12cu0wSeE7lcekks2TPN+G0L1FDP+7u/kb/khdN8y+2NrwbRQm/tU
X/FwN/36jKmb7tP9y4Pbmin9g0LuU73FQ/6mJKPbhffpPuYhxKlx8JoeD6j+
4uFNzMwfucsf0P3MzGfQYYsOVx9QPcb013+Zj372A7qveYBJ5eRPnR9Sfcas
b48n3+yWPqT7m4fB959vPHj1IdVrPGzZ9/r6ibyHdJ/zYKBZmreyZyjVbzy4
nukXolobSvc7HzXLMw/veBBK9RwfPxduaRVTHUr3PR+LvJYl/B7+iOo7Pm61
fbQ/du8juv/5qDw2IPbip0dU7/GR1PvCWnuDx+QBH9v2P+/0c/5jqv/4mPLw
RrjtjcfkAx9j56RqTlY8pnqQj8unNoi+jQojL/joe2ni/pojYVQf8pGzaLiv
NjmM/ODjieLt+SPaMKoX+fD8/MKptUc4ecLHjeF7R0g/hlP9yLze4m78ivZP
yBc+UhZbfMtY/4TqST4q9g769zXmCXnDx8nR4wJfGj+l+pKPjKXJ4yPXPSV/
+LjabezIV2+eUr3JR8Gy1w0JHSLII+b7/MTGJrcIqj/5SIuYkjomLoJ84qPV
Ux358V7PqB7lo6Tj6KmSg8/IKz6MXYMW++c9o/qUj/lDL6+8Pi6S/OIjzOWa
+5arkVSv8rHuc4nnJmkkecaH4Za7R7c7P6f6lQ8dP50uxZ+ek298lD51FDl2
iqJ6lo+z7y8nwTGKvOMj8t7fqEyvKKpv+eC1qx7XKiKK/OPjP1PTS3+Lo6je
5WNzUJenq7tGk4d8BNSKv/nNiab6t3m/XO222jeafOTj+vEy6b/30VQP8zFn
nPJNJ2E0ecmHZvqK1xKbF1QfM+ufrXK+9N8L8pMPm+13upXcfUH1Mh8j/mRs
rvvzgjzlo2fhpPTori+pfuYjKu9L2bjFL8lXZn3Xh044fOkl1dN8nE/I9TqV
+pK85cPpdvt5K9q9ovqajzsjdL0Ec16Rv3z4dr77dsX5V1RvM+v7yr78fOor
8pjpT21CzpWOMVR/8zEv2vSA5+IY8pmP4+KGL1bBMVSPM+fn8L6I6L8x5DUf
57Qz5lj2fU31OTPfLu/ebdn8mvzmI7R/d4sbka+pXudDPKjucbTkNXkugOPp
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
a/S4rOdSPLh6a3rr4Xpc1nMp3plbCXYxXrCeS7H0ZGKh8e/WXNZzKTKv1K1I
u9uay3ouxbrwRIcEz9Zc1nNmvionRUont+aynkuh8+10tqtZay7ruRQjTvxX
165Cl8t6LsV67zV/VK91uaznUpi/aDdn9BldLuu5FJ2er3z6apUul/VciqPu
d61PDNclz6VomFMb/bCVLnnO9N/Tqk337FbkuRQ3PSe9KAtrRZ4z8+PorDU4
/H/PpThy1eH2iYX/95ypw5Yd8XCx/r/nUmTUpry8ptQhz6WIbFhgaZuuQ55L
YbXTkD/0sQ55LkXU40ln/A/rkOdSzDl932DOEh3yXIqB/er+22WjQ55LUXM4
+JhGV4c8l2Ko9ZKBpTFayudStOc+2B60SUv5XIrVF4yzu5lrKZ9LcePHgN7u
iRrK51LM6oHCc4c1lM+lsKwes/3oKA3lc2a9WjnqTqtUUz5nxtf+ze0/N9WU
z6VQTTvUc/IiNeVzKc6U3xixv42a8rkUO6tvb/H5pqJ8LkXtyfRxyw6qKJ9L
YVe7r1w5WkX5XArXf/khOxqVlM9l8K2efzwqXEn5XAaBfx+fT/8pKZ8zda3T
8gNB/ZSUz2UY0evoxPHFCsrnMti1nn8o5I6C8rkMX51G/81Yo6B8zrTvklv3
y1JB+VyGiJjzw07+k1M+l2HgnqedWt+TUz6XweR+unKyq5zyuQyW2wZM5Q6Q
Uz6X4dCY/aNV1TLK5zKYKl3a73kmo3wuQ2URt+2jXTLK5zIst5+55pKdjPK5
DPv4K4eM0kopn8ugeMgL8mPWmfVchmHj+R8vXJBSPpfBa/quNzOWSymfyxBo
uf/68z5SyucyXL0XuvtHrYTyuQyhMaWLT8RIKJ/LkPJINq3hqITyuQxrhP2X
qOdIKJ/LUK//4NSL7hLK5zJ8cxhWY8zUcaznMjyO3ntML0ZM+VyGh9bBK2/7
iimfy7Db+8ihzEViyufMPHScK3jI5CDWcxly175K7CAU0eeDZFBitpkpk0tZ
z5nxdiksCA8S0eeFmPGF/HTK3iyifC5D60dV0y7bi+jzQ8z6P4pqXdRORPlc
hnLzHw/flQgpn8ug36Nhcp/XQsrnMugO+67T6ayQ8rkMegn+Rv7rhJTPZdDu
OHbizDgh5XMZXn7SfdiunZDyObPeZeE3OpcLKJ/LYFO9496tDwLK5zJMjYvj
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
tXNrcvtDnivB++BVf2/2H/KcGY/Oog/+w/+Q50okLB7Ejej0hzxXImDTlGo9
cT55roRzeVy/K3n55LkS/ea/WrfyYz55rkS+LL/zknv55LkSST3SX/qeyCfP
lWgwlryscssnz5WIOL/+vM/cfPJciVuOpe9m2eaT50rk2klezeyWT54rITz6
Q7lflUeeM/1t1a3d35I88lyJ305LtmyPzyPPlVjsd+Cy7bM88lwJl8ud2w4M
zCPPlTjSi7Nq9oE88lwJJ36gwV2XPPJcCTVGX+07/f/vnzOv3+tlYMbQ/79/
rsTwNr39o83+//45Mx8+fP3PilzyXInbH9oHSUtyyXMl2vh8iVvzK5c8V8Ke
99SGF5VLnjPzcTlnaeS1XPKc6d/C4Lzgo7nkObO/7l6dGeGWS54r4ReeMLFu
QS55rgT/npvTkgm55LkSup1Fbar65pLnStxcY93tgXEuea5E4wCRyWlhDnmu
gp3E70RQQQ55rsLCf3a9kn7mkOcqTB96yWvQ8xzynPn52Ikjn13LIc9VsB3Z
tmbF8RzyXIVRfcRTbTxyyHMVZGmty62W5ZDnKlwuXbNtCjeHPFfhQoXDSb8h
OeS5Cp/9atObOueQ5yo8T/yoOKzNJs9VUC83DRtZm02eq6BIm+drmJ1NnqsQ
NjF3nO7XbPJchZ3722/v8zSbPFfhW9zC7PVXs8lzFYqWi7vHHcsmz1UY0sSt
nbMtmzxXofUlD7F4RTZ5rkKK3e26r47Z5LkKPZ6WHH42Mps8V2E+d8TaDxbZ
5LkKnKS1qDXKJs+Z8ZwcnD1BnEWeq7Dd2DorvCSLPFeh1Pknf0JqFnmuwjve
/PKa91nkuQqxf0pd3z3OIs9VOFzhMSDsShZ5rsLS1KflMceyyHPm++ODnUu3
Z5HnKhhunsAdtjqLPFfBN1K88KpTFnmuwqIYh9mW47PIcxVMtkZWf+ufRZ6r
4P8jvMrXNIs8V2Hs4zB5WGEmec7Mp+N/rV0aM8lzFY5oT93xKsgkz5n1eiYK
jkjMJM9VyAh6s/zD90z6/0DM3/8Y+cT9cSZ5rsKaIj3XvUGZ5LkK9sW5C8xP
ZJLnKsyo6HNOvSuTPFdh5MmezrnrM8lzZr5nJusnL8gkz5n2lk7gruZmkucq
tFp0quDkiEzyXAWXDdq3Ib0yyXPm9/N7m2rbZZLnKtQMv6uzT51BnjPr1X3Q
XIOGDPJchfCNqq/PCzLIc2b9dYUDdiVnkOcq9Bqyb/rcjxnkObNfDx5r4EZk
kOdM+/3uVc65lUGeq5BnWqf2PJdBnqtw19ZQ55l3Bnmuwrh7Vu91tmWQ5yrE
CaXyrWsyyHMVrP1jzzfOzSDP1WjKnu54mpNBnqux9XVSvd2IDPJcDWlW9+U6
fTLIczX0jQ4u/tcxgzxXY/nHly8yWmWQ52rEbDCZXihIJ8/VCK3hFqnL0slz
NfYNu7BgTHY6ea5Gh+OhHkfj0slzNaptowxK36ST52q8bT9XsCI8nTxXQyC5
0LriRjp5rkbxHmV7v3Pp5LkauxefqZl4JJ08V2MT566bgWc6ea6GxSZT14r1
6eQ5059BAyLyFqeT52os/HzSsnhaOnmuRmnDnPPK8enkuRoXvqkyhgxJJ8/V
8JzqE7fNIp08V8Nh0gDuj/bp5LkaL1QPzYe3+v/n4dSYatF98FNhGnmuht0C
7ayJlWnkuRrx48ev+JeXRp6rcdW2lc2VpDTyXI3B9urbqz+nkedqeH8ZfG58
dBp5rob7udK0/g/TyHM1hoYXzegfnEaeqxE8bUzKWP808lyNcY/mTlp5OI08
V8O4i2DPBc808lwN5ipemL0hjTxX42fviOfDlqeR52qIu+huD56VRp6rofy1
3t2Uk0aeq9HoAN87o9LIczXk/60PnjggjTxXI2Niycka8zTyXI273wYND2ub
Rp4z/e8m2OGlk0aeq7HR/PyyyOrf5LkaXbYrj15I+02eq+FlcaDPxbe/yXM1
RMY1kuf3fpPnarxy/hnHO/2bPFfjToTl4oU7f5PnamR5BLmkr/xNnqsxvb9r
lOeU3+S5GrzfTsYjbH6T52pUTAqxbdv5N3nOzO+OWU2G6lTyXA0r3ZcG/SpT
yXM1/G9mwPl3KnmuRsSawa5Rb1PJczX6rv08tv/9VPJcjXdWvXxjzqaS58z+
G7TSbOPeVPKc2R/rdaNGuKSS58x5SBxmZe6USp5rmHps+3jL0ankuQbDInPf
cCxTyXMNnu2T7PA2TCXPNbgwPdsmh59Cnmuwr5fszeyCFPJcg/SXq0oK4lLI
cw1a9dqz90x0CnmuwbxTNlMW3kohzzWILy3uMuZUCnmuQXLopi+jdqWQ5xqM
8WvVftaaFPJcAzhsTveemUKeaxA781P+r9Ep5LkGZl+CpSN7p5DnGvQykymj
jVPIcw0EtbPfzpEkk+ca3BNt1eiUJpPnGnT9cuNeakoyea7Bf8G+O2PeJZPn
GlS6TXCMCU0mzzUIDBlbnxKQTJ5rMK778knaw8nkuQYBqmITJ/dk8pyZrw8H
hj5dlkyea+CtGLxnwNRk8lyDj6dWvX0zIpk810C6KC91vUUyea7Bbbdf563a
JJPnGizjxSSpxEnkuQYDhh93aShNIs81kPtt7yP+nUSea5B7qmul2ack8lyD
Kbwdp52eJJHnGsz88qsoKDiJPNfgwdSkH7ITSeS5BtOG7+64a1cSea7B0LCu
t1qtSyLPNTjovm7y47lJ5LkGe/Ln/3GdmESeM7/fz27ymMFJ5LkG0c5fFvTs
lkSea8B/WFjWTT+JPNfAZElB9mBhIv1/Xw3sOi/VXViSSJ5rsKDLqGnnfyeS
5xrsHB928N+nRPJcgxP2XB/HiETyXIOqpqQRX24kkudM/7a7b5l3JpE8Z/rn
5NdG4JVInmvwOz6rIXxTInmuwcR+S0V7lyaS5xq8/jRfudQxkTzX4KnH0hKn
0YnkuQaRUZyTC/slkucavNAMifPolEieazBD/6jvTZ1E8lyDi+LqW4VNv8hz
DW6lLBXYFv0izzV4HqrYcDP1F3nOnFftvIyun3+R5xoUdGnXK/TZ/z/froHR
6FGDpt/+/+fbtejVWp4uP/f/z7droaovVX3x/kWea7Fj6zP/ax6/yHMtItyW
rfFd/Ys810J+s8fyo3N+kedaGNXscb7o8Is81+LyN8tZUUN/kedahJ82blNm
8Ys818JB5nFwYLtf5LkWE0+/OHZYnUCea1Gf66tb0ZBAnmvx0fxH8Zp/CeS5
FscPXdKpTk0gz7X4ewfTfb8kkOdaGOisvzoiKoE818KrzOlw2d0E8lyLV5kd
1kRfSiDPtZgzs/5l07EE8lyL2y7mT4t2JZDnWvhPubmueEMCea7F293Hj8mW
JpDnWoQt2pRuPiOBPNcie+5aRe34BPJci+mxy+U2gxPIcy1ksb1V3j0SyHMt
/iy4UlNokkCea9GmW1zYPHU8ea7FN560z+/GePKcGa/nnQkuxfHkuRYv3F3+
aNLjyXNmfrw71T37Hk+ea6Fz88Nij5h48lyL63euqCY8jifPtfiQrpva9Xo8
ea7Fk6M3o3TPxpPnWnj79zuv9o4nz7VYKjwzx3BHPHmuhdaLn9t7fTx5rsXj
fo/MZyyOJ8+1CCnuK/OeFk+eaxHY3WTdt/Hx5LkWQTPG2HceEk+eM99fuum5
1yKePNfi7Dr3hvL28eQ5Mz/64huureLJcy1uOb3f0CiMI8+1mNxlg+3pyjjy
XItyo1j+iPw48lyLd70yz1UkxZHnzP6e9aEx7HMcea7FyZ4Jugej48hzLbhr
drxa8TCOPNdC9GFek2NwHHmuRcFmm7sc/zjyXAu99/zn0w7HkefM+cp/1c7Z
M44812LcxsiHhzbEkedajO3EWf9kWRx5zszXmpoRlU5x5LkWSttV6uGT4shz
LUYFbHh9YmQcea5Fnp10RpVVHP4Hz/LsOg==
         "]]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd23VYVN/3PnxaGiywwFbEVlREmXsAEVHfiiKKjYgtGNhiIdgCBnY3Jiq2
YndgIkh3w3THb2Cvz3eu5+Efr/tCz5wdZ7/WOkL70CXj5xgZGBjkmBoY1P85
0bbnnZN1eTD4/3zl/1/+s6aiS19zfb7K//lfqL0+b1r4dMWBFvo8oeji8Tft
9LnbtPhXYhd91vyuv6A+/9JdLXiwPl95N2rQTi993oABMx776/P4h86xVeP0
uWtf8+ttpuizKqn+BvX5R4cs+caF+nxJd3fJy/V5fbObfgXr9Dlg7+GIJlv1
ubPZlkSf3fqs2Fg/YH1OkwbqRqzPF5Z6Wv49r89r66fvuj6PqR9uij53rL+9
p/osq7/cG33++qX+S5/P+d4Xqn/r8+rU06165+jzaN3shZToc/vk5fP31eiz
xKV+QfT589n6C+rzGd3VOpkV/F9eeaCFyURbfR5pbdR9u4M+t9WtxkNnfRap
6xdYnz+uqr9BfT5Vd1m3wvocqbu7KOjziIJ19Svyf9lpStiQvLH6LKjffsH6
/L5+u4To84n65Z2vz8vql2OpPg+vn741+ty6frhb9JlXf3s79flt/eX26fOx
o/Vf+rykydYXn87q87Ddi8uUSfrc0qT+CdPn2qj6Da3Pr8X1C6LPRyLqL6jP
4bqr8X/qs3dIyfcOWfrsmPlNtwP1uXpc/QOizy8/1S+wPh/yqb9BfV5U//ia
FP5f5tY/btb63Lz+8Wimz5X127mNPj+v336d9Plg/Xbpqc8L6pd3gD5z6pfD
U5+b1k+frz6X1w/3P31+Vn97E/V5f/3lZujzvLn1X/o8NG+s7gnW5/qn7cMq
fa6fPflGfdYNVreh9bn+tJoWr8/1u2/vYX2uv1rqaX1uOD4v63PD8Zeszw3H
1UN9bjheXuhzw3HwQZ8bHt/v+tzwuGXqM3s89LlhO1foc8P24+tzw3aR63PD
8hoV/V9uWA5LfW6Yvib63DDcVvrccHsd9Lnhct31uX/Dlz7Xn85hQ/S5/mlL
9NHn+tl7N0qfdYOt39D/lxv4mKbPDcd9mD43HM+L9bnhOF2hzw3HX5Q+NxxX
sfrccLzs1eeG4yBRnxse35P63HB3F/W54fG4qc8N2/m+Pjdsv1R9btgu7/S5
YXm/6XPDcvzV54bpy9PnhuGW6TPzW58bLifVZ/ZV/P/zXJ+Z5/rMPNdn5rk+
M8/1mXmuz8xzfWaeF8Nn0fQmPwfN5zDPi/HkXX/HvN5bOMzzYggf/VcTkhzP
YZ4Xw2Naxd31649wmOfF2Hd2ku/47mc5zPNi3Mns9DTh0iUO87wY3RQvuIMu
Xucwz4txYnlFt+fxtznM82Ic3Wvpd77RPQ7zvBgrYzY4f3vwkMM8L8a9m3wv
t1NPOczzYlwRD3GJn/aCwzwvxlVj01G7t77iMM+LMSO9X2n46zcc5nkxDlhU
XLjW+j2HeV6MtUfHvv+0+yOHeV6MSZsE3JCmXzjM82LImrZdYXPnG4d5XoxH
ckWf53e/c5jnxXg9bFHLlJY/OczzYqQ2n2X4ZtcvDvO8GFuXh/G/m/3hMM+L
8amwj9GLvekc5nkx3I50NF7bNoPDPC9B0uz+vUqfZHKY5yUI9RSWCkOzOMzz
EpjZXI1OaJbDYZ6XYFa0wPH691wO87wEvJvjXU+Myucwz0uQK9vWo5lbAYd5
XoJA3y+jHrYv5DDPS1Bh4zJta7MiDvO8BFM90p4vtS7mMM9LsMOxZmqURQmH
eV6CP2Fn4s5ZlXKY5yVYHWPaJb9JGYd5XgKjId2D+7Ut5zDPSzD+2u8nh/pU
cJjnJRgQV+dl5VfJYZ6XINwrqXdcaBWHeV6CDn72LZ23VnOY5yUYPbFf9qMr
NRzmeQnmDk06EfKrlsM8L8Hg/97m7TDkcZjnJRhinhFZepzHYZ6XIGNqV/kH
dz6HeV4CS1Hl2j4ZfA7zvAQRzttbOa0TcJjnJVg7dnCLeGchh3legsTy3Pfb
3go5zPMS7P7266DJEhGHeV6C6HOlWvPWYg7zvATmN0NOHfwo5jDPS/DjbduW
V9ZJOMzzEpQfetF9WC8ph3leipeyv+cXFEs5zPNSLDHxCGl5UsZhnpfC7Pt/
AROC5RzmeSkyPyyObO2g4DDPS3H75eiMJekKDvO8FDPzIk+MP6rkMM9LIT5z
r+rNDBWHeV4Kh6CH2vdd1BzmeSk6T41uO52v5jDPSzHvlO3p2FQNh3leivHv
ynK947Qc5nkpHnwv7jyqjwGY56Wo7Nnp1otjBmCelyJyL+drtJkhGjccqKXo
+j3Lb3+kIUobPC+FzdhW1XUFhmCelyJg4OI9J8YZgXleCvOaVQZHXxmBeV4K
w3miTqVuxmCelyLd+1BWzBVjMM9L8elQpeUqJxMwz0tRN8771OMDJmCel8K7
5dHYQCtTMM91979z4z2vGFMwz0vR/5NB120aUzDPS5E2+cjf9uvMwDwvRWmj
5h+bS83APC/FOtM9hrNXNgLzvBR3tMN3W4obgXleisduKStsVpmDeV6K6pWT
vi+WmYN5XoaBFk9TukVZgHlehpkz5w31NbQE87wMD/d/iX2x3RLM8zJ0vsC9
e8LOCszzMpiF11X+O2IF5nkZzg/9MTGqozWY52UIanG2U/QtazDPy7Dy0K/Y
mqE2YJ6XQTs67tbzzzZgnuuu/+X0P/lUWzDPy9DNeY3PyRpbMM/L0P99e9dr
m+3APC+D7WmnBfst7cE8L8PixWtexgbZg3lehr4H1/v0OWsP5nkZLuZ6H9pf
Yw/meRkGdUsKveHRGMzzMtR2Hx64ZUdjMM/L4Bi+uJnd38ZgnpchflbXCZO6
NAHzXDeeB4NfTVnVBMzzMjz62Nq+1fsmYJ6X4b6HgpfYoimY52WISElpmbaw
KZjnZRj9NZv77llTMM/LILC95xzVuBmY52Xo17ZPOH9OMzDPy/DRnFfW5Ukz
sOGWIey872inxs3BPC/DvJZ9Jv+Z1xzM8zLc3jUtbezz5uRqOXp87rxsr6MD
mOflmD30oFH8Ugcwz8tR/WK6f9AnBzDPy9H3Y4l1QSdHMM/LcXSNp0P/zY5g
npdDWtCxz+hsRzDPy+E11axrz8EtwDzXfV6Zwcf0Qy3APC9HZEpuib+4BZjn
5eDfbjV2+4SWYJ6X4/3A/L/xKS3BPC9HUapVUFjzVmCel6PN4+4nTVe3AvO8
HK0jtuxYkdkKzPNy5FUa8m8PbQ3meTlW20+6k3qmNZjn5VhyKT/puGkbMM/L
UbD13n3/RW3APC/HyA8XHn380QbM83Kg06DENoOdwDwvh1O/5J4+Z53APC+H
Va7dAo6lM5jn5bDMadrbboUzmOflaNx/8IL7uc5gnpfj2PtnRgNGtgXzvBwt
zc+V777fFszzckSN/mOS27gdmOflaG7Zt3vRiHZgnpcjZOHe/KDN7cA8163f
fNmpgQ/bgXlejrjncwpiee3APC/H7pJbHYd1aw/meQXaWx4tXBbaHszzCsxz
+nLc7kR7MM8rEJid89UpvT2Y5xWwKPpPdsK+A5jnFdjzdvvxvaM6gHlegRa9
it152zqAea77vuHV8W9fdQDzvAKJO+0W22g7gHlegbMXhlh8HNIRzPMKxCqH
35Kt6QjmeQVeDfUsPnG/I5jnFdg23bn3fVFHMM8roMzLc/Tt3wnM8wpEt43o
OnJ5JzDPK2B47kbZ29udwDyvQFZEVNFDficwzyswZ9HdSx37dQbzvAIxT7um
mkV2BvO8Aik9rz8ITekM5nkFbp5s0sFd0hnM8wqolvTcu929C5jnFTA3+bFz
3PouYJ5XIKzvn6RDqV3APK/A9I8OmycZdQXzvAJ/nNaeOTi8K5jnFei0t+z0
mN1dwTyvwO6mk5pt+94VzPMKLC14f3CIgwuY5xWYKh3+aMk0FzDPK7DmXV2r
juddwDyvQF16TeDEShcwzysxMHKj1qJfNzDPK9EvWPCIs64bmOeVCF10q534
VTcwzyuxYGW/nz2tXcE8r8SiQvuIiiBXMM8r4bJdcdDljCuY55X4u+hJeVWl
K5jnlcg47mntNrA7mOeVSFTsOm8Y3R3M80p4OacFBn3rDuZ5JQb3nvy6d+se
YJ5XwuDryaP75vcgzysRLnPftP5+D/K8EkuMeU61Jj3Jc93nx95tVxnYkzyv
xPNJZ/svPd8TTxo81413n5nJFmFPJDR4Xolx8bO4TsN6YU6D55Uw1c4+4pvY
Cx4NwFWioFr0VFHaizzXXe9fvxDPwb3J80pYZK0cYLunN3leCdvb4/jheb3J
80pcV36+cLNlH/K8Eumdb6yr9elDnleiA3dV+qqIPuR5JRIWCJuNONqHPK9E
TPODB0Lf9CHPK1HTY3Hyu7o+5HklLvcb8GlF677keSW2LhzLDffrS55XYarx
6+XJkX3J8yrYD/N6xTnTlzyvQvyTzgktvvYlz6vwNXI1h6PoS55X4VLXyt7J
XfuR51WQrc97HxHUjzyvwtsh8xeu29qPPK/CkMO+Ub9u9yPPq6CYUxm6Lr8f
eV6F7YujYpbY9SfPq/Dpwh+/u5z+5HkVnu6MbTY8oj95XoXguT/Hu5zqT55X
4erlx4umfOtPnlehfz/Jh2xNf/K8CsmPpb9v9XYjz6vwpX2t4leIG3lehSu/
3l7y3+9GnldhnKurb+M3buR5FbJ+bfPpLnEjz6vwaoiF/RGXAeR5FYqkZ1sG
Tx1AnlfhsrvZ90VxA8jzKjT3vH3+18sB5HkVrD+VmCaIB5DnVeh38db8s90G
kudVuNi0hGM+YyB5XgXJVBfVm/0DyfMqtBpd0Szj/UDyvAplr+ZqvNQDyfMq
BHom9zLuP4g8r8bMeZfbtFkwiDyvht1tQ+7e04PI82r8LvVvPCl9EHlejX7f
CizW2biT59UweWd8QTLMnTyvRtnCN1O+RrmT59WYj2ZXNSnu5Hk1FgW/tN1d
406eVyPcZq1ZZJfB5Hk1mt/4aPdg5mDyvBo7BnS6OunoYPJcd7+Nc4OCfg0m
z6sxL6PfwWQbD/K8GpJmw8sWjPAgz6vhatP555atHuR5NXISPmTIUj3I82rc
+eywOU3hQZ5X41Xrkv/MBg0hz6uxslr+4WTkEPK8Gr0O2a49lDyEPK+Gt/eP
Ul7NEPK8Gsm/So/f6D6UPK/G0N/VHb4uGEqeV+P23PWNAq4MJc+rMd6za/rA
sqHkeTXmJG5tE93FkzzXzdegTgv6zfUkz6uxPer0qBGXPMlz3fiCEya8KfUk
z6uxcN6R5pe7csjzalibhrbnz+eQ59VYHnrO6vxVDnleg56XWi94Vs0hz2vQ
3u50Grc3yPMaTHCyS++5HOR5DX49n9Us9h7I8xrY7jjX0U8O8rwGbssUYx47
c8nzGgxyHWXXyItLntegdQiv3a7ZXPK8BmaTLv302cYlz2sQ8vVRpFsSlzyv
wYAuFhOmfeGS5zUYesj0zZM6LnleA2FgSrPApl7keQ0iPt063GGQF3leg8lp
Lqddp3qR5zX4lFW2YdEmL/K8Bi4jxmwvOe9FnteAs3uS3dEPXuR5DVpEHVu4
rcaLPK/BvMMja2808SbPa3DBbzDPzt2bPK9Bcp+/765P9ybPa7Bt44CPMVu9
yfMacAc1GnskyZs8r8G4hHPJZWne5HkNuvsZ+UVKvMnzGrir3y0a4uRDnteg
12H3tdxhPuR5DcpP+32KXuRDntfg/M24x0YHfMjzGnz4HnjpxWMf8rwWftKd
lU8LfcjzWqyb97NYajmMPK/F/d4bhcv6DyPPa7HkdPzK7tOGkee1CHr95FOn
2GHkeS2SihcFzrg5jDyvhdL6+dKMv8PI81pM2bs75oChL3lei2k7Q/jx3X3J
81qM2La91bcgX/K8Fh4a07Axm33J81p8lJzq1/iaL3lei+0nflc5pPuS57X4
W1Ahnmk4nDzXfV6H4gfVPYaT57WY+WnP0WfBw8nzWhwyijT+FTOcPK+FWUjN
jJ63h5PntZh9pLXD15zh5HktLnqUH7hj6Qe7hgO6Fu6LLYflDvJDcYPntYi5
2uhAwBw/8rwW2QkDai0O+JHntZh7/slry5d+5Lnu3zsnRgfW+ZHntfD9uP9Y
sdMI8rwWvX9Mi0odPYI8r8XBCyuOFqwfQZ7XYm36wLAx10aQ57VYYJoz1jRr
BHlei4fvN303s/Inz+sw/0SLqYFD/MnzOlwt2DqnapE/eV4HTVr03LQT/uR5
HZ6ue/ZH+9WfPK9DxZ833Tdo/cnzOvR82azQr+9I8rwOHVo4RIbMHkme12HW
h3ZT3ieOJM/rkFS9oemGDyPJ8zok1yxoE60cSZ7r7ueKgzC91yjyvA6rj99w
iAodRZ7rrucwvtHyQ6PI8zqYrOg4/NGnUeR5HU5NRNB47SjyXHf/Va8feLqN
Js/rcH/AT/76BaPJ8zqETE3YYXN6NHleh8vq7kbC36PJc93fP5Bd0sPqP/K8
Dq2KpyrDh/1HntchwzLU2Xfzf+R5HTh+H2Nqn/1HntfBP/jLm87q/8jzOoxO
8uvwxnMMeV6HtUfDrJM3jSHP62DTyKv331djyPM6XDh37G73RmPJ8zq0s9/0
5tzoseR5HTbajL/V/8BY8rwOG04lBv39N5Y858H9b0bp68YB9LzzMOcCx/7M
wADynQdn23PWmqkB9PzzsDCweePsLQHkPQ/HExIOul8JoPOAh7zjq3ybpAWQ
/zxsFo4znC8JoPOBh8/h7t/cncdRPcADd8ySP1uHj6PzgoeObcxmjlgyjuoD
HjrpKojYI+Po/OBB3cXn1JBX46he4MFvr33IgupxdJ7w8Hz95we2juOpfuAh
Qtp2anfv8XS+8LCi1VG75+HjqZ7g4W3g0KSPR8fTecOD/P14i1HvxlN9wUP7
nZOdfITj6fzhIexhk9zb7QKp3uCh9O6dMYfHBNJ5xMO6sZ2jhFGBVH/w8PHF
vKh31wLpfNLNx2pRuH1WINUjPCTu4Kz+YTkBDcfVXB4O3vV4ZzFkAtUnPOwa
L4p/tGgCGo6bCB7S3vWwLzgxgeoVHr52Ndm5+dsEsP8/5GF256veRwyCqH7h
YYubw26X/kFg/5/Ig8mQd/f6zg2ieoYHf6utrVOOBtH7SB7uN3Ntlfw1iOob
HoJfr2/WxWgivZ/kIcaxdpnDoIlU7/Dw3mbrqS2LJ9L7Sh44685Zzj83keof
3fjNpK6fMibS+0vdelqOWXPFbhLVQzy0la9dYuw3ifofHqIGDtqXtXES1Uc8
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
Kb5dNp8lzyV48PfguFnPzpLnEjgXRZsJlWfJcwlm7lIXFw85R55LcCPjzVHu
hnPkuQSX35nE2L04R55LcKm7e/YUk/PkuQR23xql9Bh5njzXXX8wPOL2nSfP
Jbgbt+jdjn/nyXMJ7vfnH+7c+QJ5LkHb5s6/w5ddIM8lCH+ujV34/AJ5LkFv
zoAznewukucS/O4b0eVKyEXyXILTBY7r5XcvkucSVFz+1aSjxSXyXIK8o/mH
e4ZcIs8liNrTcmr7R5fIcwlK5BWTGzW7TJ5LABer0rKll8lz3foZzl3zOe0y
eS7BJs+E2Md9rtD/J0ogujlgy7MDV8hzCe40e1yQLbtCnktwzqpTp/YhSeS5
BHsPBXzf/zGJPJcgyXvCBo8BV8lzCfgHf/5pd/4qeS6Bew+DE2OaXiPPJVg9
y/DGl9hr5Lluv6UsMr6guEaeSxBgmvUwZ9l18lwCt7zXZlurrpPnEnzq0cLn
5Lwb5LkE80e07jiw9AZ5LsFh1/gTE+fdJM8lsLDun2ledZM8l6B9ypXvE5fd
Is8luNDl+q378lvkuQS2LhOmSr2TyXMJXv7Ib9J1VzJ5LkGvF809n/9MJs8l
MD3cvPfdNrfJcwlGnDzQtPX82+S5br+FXlsjSblNnuvm96rDoFHGd8hzCaaI
Xw5rG3iHPJdAc+1dwNoLd8hz3f4futR2hvQOeS5BrenIPb9H3SXPJVhsd7Vv
0dm75LkETYrPxSfI75LnuvnZ+nZK0fgU8lwCsxSjxYU3UshzKSo0cS8PWt4j
z6V4eP/jJsMF98hzKRJndBX0/niPPJciIPLe/q7d75PnUghiArbVxd0nz6V4
s2FsiwTRffJcitbTs9F42gPyXIpLhzmd1799QJ5L4Tp5VfP0Pg/JcykOn/4c
43rqIXkuxe+KP/ZbbB6R51IYJDmeKdz4iDyXIvrn88OTBI/IcynyXe2uV8x7
TJ5LMc5p/ahzeY/JcylCl3m23D35CXkuRZDhdRfj9CfkuRRLdlVmNZvwlDyX
YvbXwKuffj8lz6VINtt5OGPSM/JcN/4FXr1H5jwjz6XIeo3FrnNSyXMp5hpl
74mpSyXPpYiSOFqHRT0nz6WYOuzkuErTF+S5FHJHXmf+mBfkuRR3b7qeHX30
BXkuhclMMxPjkhfkuRQTv5ncbdXvJXkuRe7ZfYOObX5JnkuRusrSa8f3l+S5
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
5NTThz5HWXCZ5wpcknkGeH+z4DLPFShpdsdzrbMll3muwIzF0lMB4ZZc5rkC
b8b6x195bMllnitwdHyPTrPMrLjMcwXEd/L2Tgmw4jLPFejpvil61RErLvNc
gRs3+vU9kGvFZZ4rsPL8rGkHOlhzmecKDFp//1NwmDWXea7AliHR09+et+Yy
z3XzV/flZmq+NZd5rkDK2+1xLq1tuMxzBYrbNZGVj7fhMs91fz9wqmfZdhsu
81yBx+U1Xawf23CZ5woMWY4m3hU2XOa5AnctpDYrm9tymecK+NoWCPdzbLnM
cwU62I/evDvMlss8VyD61L65AdttucxzBfrNTwz9c8mWy34+WIFv32387F/b
cpnnCozfs9xcnmXLZT8vrEBt1uo3O/m2XOa5AktXNHqXamzHZZ4rcD71Tuyh
JnZc5rkCgd8uXGrsbMdlnitwv7YTr18XOy7zXIE+3974aF3tuMxzBVrVzkjY
0MOOyzxXYERZk1f3dd9nniuQ6Ljy1r3OdlzmuQJdxvQy2e5kx2WeK/C+8L9u
g3WfzzzXrefQxO7ZuvtjnuvmY8bBCTsEtlzmuQLXl/eZ4J1ry2WeK9DDxduo
63tbLvNcAYc2JzJH3rDlMs8VuLfCc8GbBFsu81y3/xZ17H1tmS2Xea5A8wFn
1jgG2HKZ5wrIn/K8O/Sw5TLPFQjyGdWmxNSWyzzXjefua3fTXBsuO14UaJkU
h4I7NlzmuQIrio1XbN1mwx5fIyWqL3db0zPYhss8V2LGhuqfTV1suMxzJUrL
4pzHSay5zHMlBo+b/VH7yprLPFeia+pGA484ay7zXAmTCpsTLYOtucxzJaZ9
G2/zsJ01l3muxKeBo8f0KrfiMs+ViHlg8uvgTSsu81x3PX50lPEKKy7zXImJ
R8ft3eduxWWeK3HF9MDpIJUll3muxJPd+07MeW7JZZ4rca7R03vpWyy5zHMl
7H1VM575WHKZ50r8DDk9pYepJZd5rsTlWaOq3N9ZcJnnSuQaO5wQbrPgMs+V
CNhokBLhZ8FlnitxdtaBAY8aWXCZ50oIQla8KHpvzmWeK7HSsN1t1XZzLvNc
Ce/CRV+bjjDnMs91jlm0HjPA3JzLPFciQnT/d8SHRlzmuRIbDevsvuxoxGWe
K/F05dKJwf6NuMxzJXZfCR3jbNmIyzxXYod/mKDrZzMu81w3v47vD23cY8Zl
nisxaJC61nWMGZd5roRBUI+mA+zNuMxzJcJ/ZMVe+GnKZZ4rcadNyuDNiaZc
5rkSdQuGH/4WbMplniux6fnv6MQ2plzmuRKHRzUN/ZdvwmWeK1ExjxMmjGrE
ZZ4rceT9ryH8hSZc5rluPOqaJ5/7mHCZ50qIBhf6DpAac5nnuu8nr2nVN9WY
yzxX4uWTh21exRpzmedKLJzCWXJwrDGXea5E8H+SJZMdjLnMcyVWFHXWWOUb
cZnnStS+2fnM/KoRl3mum6/B8innVxhxmedKZD+LEOfAiDxX4tq4S0MfWRmR
50rkuZ/+NiDDkDxX4u3nnU0nXPyf50oIb2T/ahr5P8+ViHcot13l9T/PlTrf
Zzusszckz5VodDzrWNt8A/Jc93m/TbvOTTYgz3X74ereDv9tMSDPlci4nfr7
13gD8lyJdocs58k7GZDnSqTcz/y2tk5L/bkShmZTEz0Oaak/V0F7uFFOP46W
+nMVhsa5DQop01B/rsJqaaXti30a6s9VOHI56vpYTw315yp0sy5yt65UU3+u
gmBq5QvBYTX15yoEru/ubuCnpv5chRXZ6ev7SlXUn6tw9ej4oK1XVNSfq3BK
eCNKMEVF/bkKj8dVH1tvq6L+XAXu126jW79WUn+uQpr38fbfdPuaea5CVNqi
8wm6c4B5rsKCjo/OzCxTUH+uQov8BPnAMwrqz1Womdw8oqnOXea5Cls3uUTy
dXUJ81yF5i85UV+/y6k/V6H7pBjVeV0dyzxXweBK9bxlurqeea5C3YWebv10
fQ7zXIXLL69kFn6UUX+uQnap9+9Nu2TUn6tw/1KPk6ajZdSfq6BZ3vjbUlsZ
9ecqFI3+W/jsh5T6cxVMLe8urkiUUn+uwkmkGfOmSKk/V6HJuc9+39pJqT9X
oalFn/zNZRLqz1XwLvoVZXJLQv25Cm+zPdKDVkuoP9d9XnjZjWVcCfXnKuRr
z3+bYCmh/ly3fv6vrVW/xdSfq/BwQ/DwsDNi+n0fFV5nz5u9a7GY+nMVHKY3
kkUOFtPv/6ggunGjlUkjMfXnuvn5IHkw7o+Ifh9IhQ8jcrnjLoioP1ehXXun
L9pIEfXnuvX0Gb11yjAR9ecquHwuPjSjuYj6cxV2D1rqbVEmpP5chaWtm32Z
9EhI/bkKh/L3xvjtEVJ/rgLncvf3f2YKqT9XoeXOV3JtfyH157rvrz2357W5
kPpzFZzE2xVOuQLqz1UwS979wTpFQP25Cu4h9tv27hJQf66C79ebX07OElB/
rkIk2nGHDBZQf65Cn0Vd42Y3FlB/rkK0eHVEs0o+9ecqtL124tyo13zqz1V4
tC1bbHaST/25CuvOOHsOW82n/ly3Ph2/TjQcz6f+XIXFsx+4Du3Jp/5cjcje
wiSBOZ/6czV6r3/2rUMJj/pz3XO8bsqJTy951J+rcWuY2Ln8FI/6czUK221a
tDaKR/25GknRcaejpvCoP1fDI8uzoM6dR/25GgUjLGf+cORRf67W1W9hpzm1
ddSfq/Gnq0vxrRt11J+rYfejZSth+P/6czWCT97MNen9v/5cjWtvfucW8Gqp
P1djuOR2+ra7tdSfq2E2LHQfb1Ut9edq8I4/KG89pJb6czW258vfmBrUUn+u
hve1y22uva2h/lytq5cHicz31FB/roZ/SNb0NoE11J+rkWDrtbawVQ3152o0
2R0cGVxUTf25Gi98Hbetv15N/bkaox95ykasqqb+XHcOxjg5pXKrqT9XY49X
yIQMq2rqz9VYYJlmkfi3ivpzNVZda3WPf76K+nM1xi+4kFm1tIr6czVGjvcz
28Kpov5cjYOWHf7ctK6i/lyNQcazqpZnVVJ/rsYaOwv5p6uV1J+rMXT0q4cp
6yqpP9fth8DzdT1HVVJ/rsbHFNVitzaV1J+rUf20k+W7mgrqz9VQ7PC5mv+8
gvpz3XpsausRvb+C+nM1Lg2tvHVlTgX152ocEa/0HD+4gvpzNb7PvLIqyqaC
+nM1bm8eea1zYTn152pct+kdX3KznPpzXd8+Ztjqmj3l1J/r7jfDaZr57HLq
z9XoNdXx77HB5dSfq5Eui+143r6c+nM1diXdjmlbXkbv29XQdr3pa/uijN63
q/HyqNuj8CNl9L5djY28DYOHLiuj9+1q+Bk5u6wZWUbv29XImZBX07ZTGb1v
163nsdOKvppSet+uxrbsHm+vZ5TS+3Y1jo/r+Dnubim9b1cjKudzQnpcKb1v
1+3PQcoz0QtL6X27br/d4+/ZN7yU3rercfLRkGrDjqXkuRoBz/dP+6ktIc81
uNno+RbDnBLyXIMu+WtN4x6XkOe6vDXg8KojJeS5Bibx26sfrSohzzUY2Fj7
fGJQCXmugWcHx5+j3ErIcw3c7RPLDzctIc81kDTd+W2wsJg812BFnNuEPr+K
yXMNIj/xxqy7W0yeaxD9fcLBpgeLyXMNxl4dctNgZTF5rkGqV2qp58Ri8lyD
0pLj3T4NKibPNej4wmrehZbF5LkG6kzHqB/KIvJc932LJkrv3CLyXIOngc2K
DF4WkecadF3Z/ZD5hSLyXIO3Y086Tt5eRJ5rsKbJjwj+wiLyXINnc4dc/j6m
iDzX4JvZqO/ifkXkuQbvHgWpZzoWkecaHEqJ9bVVFZLnGtyb/v61Nr+QPNfA
YvmDQ/3fFZLnGhzYsS//yrVC8lyDwULn9zP2FZLnGnyRX4ycsLqQPNcgPjyz
yc7pheS5Bk32f/it9CkkzzXIm5xWfc21kDzX4KBw274jjQvJcw16XbqveiEr
IM81CJYPW9Qpv4A81+CKSzenV+8LyHMNhuVNCzp6q4A81yDd49vkpMMF5LkG
lU3HR/I3FZDnGuTsOlSzdH4Bea7B67/NHbuOKyDPNciaZuHV1KOAft9Xg2z5
tOduHf/3vl2D1mfOle+y/t/7dg0+djZzaC7JJ881cAr2Ov8zL58816DNqITa
Vx/zyXMNykouBpfczSfPNSi+embY4FP55LkG1o+1jqk78slzDd5YH/GIjMwn
zzVwq9jpEDwjnzzXYNuegS0W++eT5xooLAbevOmWT57rnp8Z//m3bZdPnmsQ
fjds2jOrfPJcgzN3lQ/t6/LIcw1ic+5f/vcujzzXQG75I9z1dB55rsGIzV+T
3q3OI881CFx0tlNhQB55rsGDDjmPinvnkedafNgZ8uWhcR55rkXffWXXL+Xk
kudacJqNGl76IJc81yJ96tCLq/bnkuda3BghypwYnkuea5Fa2lEWOyKXPNei
bnSJg3GnXPJci6Hvrgd81eaQ51o4DfN4XZSVQ55r0ajF7njfhznkuRZxws+Z
/IM55LkWpT1GfSxblkOea7HPb9GOLmNzyHMt1qUmDrvRI4c81+KUXa9e6y1z
yHMtos1i18SXZ5PnWnT3/TK54l02ea7FcgtLqx0Xs8lzLf71tPmwMCabPNfN
R9istITZ2eS5FtOSfELl3tnkuRbhdYfenO+QTZ5r4a/NGBpvlE2ea2Ee59js
SWEWea5FybaSxC6vs8hzLby2B9j/OJ9FnmtxZE/6r0cxWeS5Fk9+Tu2fPyeL
PNfiVkG7GB+/LPJci/KPD52KXLLIcy3Wx2knp1pmkedaLHlin/i7+h95rsUr
F07Pzmn/yHMtXpeZbb11+x95rsWQqbby5Qf/kedafFvTVBSx+h95rkV8//J/
56b8I89182G7wMGW848816Jz+orGye3/kedabI0udt9h+o8818LBc6sysSKT
PNcie6/Zp4yvmeS5FsXXzRwD7mSS51o8lUomKg9lkue67+9yNvi3PpM812KT
OmFXVUgmea7FLnRd2nt4Jnmuxecja3pc7J5JnmthOP9KuXnjTPJci98G8WvF
kgzyXIuf8/b9VWdnkOda/PdvbljY6wzyXIvxY+Z//pyUQZ5r0cn+T+PQhAzy
XLcfSlNTu6zOIM+12O36akrLGRnkuRZzP2mXDPbNIM918xPquGtbjwzyXDc/
S9sPNGiWQZ5rUXQ0yeiS8i95rsVI+6RNq4v+kudarDLewlnx+S/+H9NnQqk=

         "]]}, {
        Hue[0.3356314599949535, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd3Hdcjf//P3B7ZI+MFMqMbOFNemQkq4yo7JCQjFCJpElKRoRkhCIKpeyV
LVtWRfvUaZzq7D2+V11Pn3P7/c4/79vjdup1vdb1uj+vc/I2XbN14bomjRo1
ym/eqFH9f53aD7t9rq4Qjf6fV9H/8s9dlQNHtdLn64Js+zUd9Xmfx+Odx3vo
86LSxLhXffXZfPmRF5LB+qz9Ud+gPn9nWnP5T5+T3swZf3CKPu+F5cqHs/R5
4f3eYdUL9HnQqFYpxkv1WX2tvoP6/M3sjyLAQ5+vML1L3a7Pe7retCverc/z
o05t6RyizwNaBMVMi9RnZUD9gPX5i8yRGbE+J2ybbPD7sj771U9fij471A83
Q5/71XfvsT7L65t7pc+fPta/9PmS7V2R5oc++z69YDQiX5/nMrPnWqbPpqnb
Nxyr0Wfp4PoF0ecPF+sb1Od4prX+LYr/l72P92jm1F6fZ7dtMvRAN33uw6zG
/d76LNbUL7A+Z/nUd1Cfz9ddZVZYn3cwvfOHPs8s3l2/Iv/LJkvdJhXO02dh
/fZz0ee39dvFVZ/P1i/vBn32ql+Obfo8o376dulzr/rhBukzv757B/X5dX1z
x/T5TGz9S5+3dg7JfH9Rn6dHenJV1/S5Z7P6O0yfa/3rN7Q+v5TUL4g+n95S
36A+b2ZaE2Tr81TXsq9mf/S5e+5nZgfqM29B/Q2iz8/f1y+wPp+cVt9Bfd5U
f/s2K/lftqm/3drqs2H97dFVn6vqt7OxPj+r33799flE/XYZps8b65fXUp+t
65djsj53qZ8+W32uqB+uvT4/qe+ekz5H1ze3Up/Xu9e/9NmqcB5zB+tz/d32
zkef62dPEaDPzGCZDa3P9afV8iP6XL/7ok7pc31rTy/oc8PxeVWfG46/VH1u
OK7u63PD8ZKpzw3HwTt9brh9v+pzw+2Wq8/s7aHPDdu5Up8btp9Anxu2i0Kf
G5a3Sen/csNyGOhzw/R11ueG4Rrpc0P3zPS5obmh+jym4aXP9aez2yR9rr/b
Yqbpc/3svZmjz8xg6zf0/3IDH8v1ueG4d9PnhuPZU58bjtOd+txw/Pnrc8Nx
FabPDcdLlD43HAcx+txw+57T54beJepzw+1xU58btvNdfW7Yfk/1uWG7vNHn
huX9rM8Ny/Fbnxumr1CfG4bL1WfWb31uaE6mz+yL8/95rs+s5/rMeq7PrOf6
zHquz6zn+sx6rs+s5xyEOY3dYXfhjDXrOQfY2EWRyLltzXrOQXxgS7tcj+fW
rOccWDsYxCVVvrdmPefgUTfHsMTCbGvWcw64+x1qRpbnWLOec2BlIc0ZsbfQ
mvWcg575tpEGDqXWrOfM9fLV2Z17c61ZzzlwnTFCKxtabc16zgEnbnvSbu86
a9ZzDvaq11QuUwusWc85GP3BwMVgqdia9ZyDITn3DXp8l1qznnPwYGvy72p3
hTXrOQfr10oqdF3V1qznHKSYJBwr+Ku1Zj3nYNCxx9wOhY3Aes6BWuxzZczy
JmA95+DZoqFr0sqagvWcA2dxvpPbnuZgPefg2I/A40NNWoL1nINVtzqFVb5v
BdZzDob96HciJNQArOdlOFUw51vxrLZgPS/Do1M3b9QatQfreRkSqyOfnJR1
AOt5GVKvh0/h1HUE63kZvOe26fuwshNYz8vgFf2z3LayM1jPyzDhsJ1VUG0X
sJ6XwXdi7TZ3RVewnpfh4cNLXvzW3cB6XobCbmMfGfXtDtbzMsz6uW5e8aQe
YD0vw4yt3ZJtVvQE63kZrp1b/8Qy1Ais58z7U94VPkntBdbzMjhvevX5V4kx
WM/L8KNx6OUAo95gPS+D/FXpp3TnPmA9Z8Z/MfLARPu+YD0vA2femoeugr5g
PWfmK3DGkLmnTcF6XoY+JqrL6ilmYD1n5ufz4q7ba83Ael6Gyaf370851w+s
52VokxlsljKvP1jPy7Dk3JGhXs0GgPWcma+pVVrVowFgPS9D1MKDne19BoL1
vAxxl6UitzGDwHpehi4h1nbTRYPAel6GUU+Er6vvDAbreRkO3YT18j3mYD0v
h1VOp+iT04aA9bwcJqdm341rPxSs5+VwyWxy2/PvULCel8OgWd45gxsWYD0v
x/cuCy/7BA4D63k5Fl8aq05zGg7W83JI1jUVPhkxAqzn5Zh+637tp+YjwXpe
Dj8nYfRA75FgPS/HhOGB8ZVlI8F6Xo4zr41yu7uMAut5OeR3hjW//WEUWM/L
0fz7FdF9m9FgPS+H6cJ3fsPujUanhgOVef+OZnvHEWNQ3uB5OdJmpmeuSRoD
1vNyvGw7cvaAfmPBel6O93+81C4XxoL1vBzdb7Z5rzW2BOt5OWJ+NU/uftYS
rOfl6NQz82yC8TiwnpeD4//z4pXz48B6Xg7r541f9DYbD9bzcjxd0sqg/dXx
YD1n3v97NtJ72ASwnpfD/v3cFU53JoD1vBw1Fz3OpFn/B9bzcgT2U64Jz/oP
rOflMHx07s+fxRPBel4OgTp02I3SiWA9L8ergcv3a7ZPAus5F7NOWvX43NQK
rOdcZJmf79n3pBVYz7ng+896LTafDNZzLu5IZy+1fzYZrOdc9Dtf3muokzVY
z7kITj604EitNVjPufD4+HnGnnCA9ZyLklbJA+SdbMB6zkX/TM9cX1cbsJ5z
MeNchMeTWzZgPefiV+/i/Vk6G7Cec2G52K7g7PwpYD3n4sasSLMJl6aA9ZwL
WcKWlmfFU8B6zkWL45enZtlNBes5F6uLsiIz46aC9ZwL73meZ4P5U8F6zsUn
M+2IjjOmgfWci255OU09zk4D6zkXpn0n/j4qmgbWcy7cuVM2hc2ZDtZzLsLS
+cEzE6aD9ZyLg+0GluZppoP1nItY0wsLJ7vYgvWciwehktht6bZgPeciv8/5
EO8OM8B6zsV5m4o/cz1ngPWci4cf1dtkWTPADpcL3qn8zj6D7cB6zoVvntvx
rAN2YD3nwu/t9DdCrh25WoHXU1oGCWfOBOt5BbbcbBeXdX0mWM8rEFN6tGZX
u1lgPa/AoDEXHRt7zQLreQXGHx14fe3PWWA9r0D7z0Vf4ifOBut5BQ7L1yc+
iJ8N1vMKFL2yaHer5RywnlfgWE+/6qCtc8B6zvTnxraBY3LmgPW8Asuedrry
cspcsJ5XYE6u5aKxKXPBel4BvyfRxvu724P1vAKj5j3iPQixB+t5BUri+2Z8
5duD9bwCBe27uH1Y6QDW8wqs3fKy7vonB7CeV4DjMH3utsnzwHpegQf2kduM
b84D63kFzkx+MCSnw3ywnlfgSMXf3d1mzQfreQXuL7Z8kxU8H6znTB5zv1D4
eD5YzysQ7d/PP1o2H6znFciw7GR7bfQCsJ4zeW9s4fgtC8hzpn++obXW1xeQ
5xUIDVvZ5Vn5AvK8Aru1Peru91tInlfg8wUvs2GrF5LnFRBV/edgfGEheV6B
g8KILgfyF5Lnlei8i9dli7EjeV6JDh47BN+WOZLnlVg8N88hPc6RPK+E/+iY
L53/OpLnlRB5lnQXGC8izyuxLi3no8PKReR5JbbP23HCIn4ReV6J03/OGkaW
LCLPK/HuwgS5x4DF5HklerUfWvZxw2LyvBLJbqv3p6UsJs8r0fNqzv6egsXk
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
PI1sG19MnssgVH7+6fipmDyXwX/y3V3tVMXkuQxzvIynTTQvIc9lODbbu/Ef
5xLynLl+2fe9/P0l5LkMzS492bfnbgl5LoN2i+qDf3kJec6877exv6RbKXku
Q9Wg13ZldqXkuQw+y/0E9n6l5LkMcws25I5ILiXPmfWovJsemV9Knssw73PU
yPp/58V6zuyv2FJV+jQOeS5Dzh2rJ0G+HPJchmGRnt0/JnPIcxn6tFuUdLyI
Q57L8Hf6+Va5hmXkOXO/5Oz+cHZOGXkuQ9PTTgGFQWXkuQyTTC+/vHi/jDyX
4b+QsfmldWXkuQwxIYnrrwwqJ8/lOLXA+1flqnLyXA6UCWJuni4nz+X4kck1
kHwrJ8/lmDyvs9GfLlzyXA7BBlVgqxlc8lyOlOXW/X4FcslzOW6MP/V44GMu
eS6HxYnFB5QyLnkuhyTaOmPB2AryXA5nvxEeFl4V5LkcSb5PX0fcrCDP5Thx
ITfHk1dBnsuxpIPb9ewhleS5HBOWfbN8vLGSPJfjl9UzD/NrleS5HPtPRFkY
VVaS53LceSNecNi8ijyX43jomYQwjyryXI6dbROLdMlV5LkcMeK5GeqaKvJc
ju1HNj/bM7KaPJejp67Lcf8d1eS5HIEG7dK0d6vJczlaf/KKbKyqJs/lOOs0
JjQUPPKc6b9LIm9/KI88l6NE2rJ5q/c88lyOcE5HdYuONeQ509/HbS8EOdWQ
53K4N35xwe9cDXkuh0Z9bCePU0Oey2GY+3FkrkUteS6H8YCP60y9a+nvheSo
aO88Ufukljxn1rv8xs5tLevo74fk4IzZkjt+QR15LkdnXUiFd1wdeS5HwLiQ
YWbldeQ5c33nZ4fO9eCT58z8VO1NXGPNJ8/l6CMJ/LHCjU+ey2H1IsfkcASf
PJdDaLDCT5jKJ8/lyG3hm33wN588l6M8k9fSUcsnz5n1/Hmjeu4AAXkux7Nn
F6f6zBWQ53Iof/i++rRDQJ7L8cnYr9fCOAF5LkdNv+Wcxi8F5LkcrWRGN/9U
CchzOQ5v+qDI7ywkz+UIK/ab2HKSkDyXY+/VFj8XrxWS58z1LFr0fRcpJM+Z
8Q5PWLs8Q0ieyzG0RURux3wheS7Hl0XvUkqbi8hzOTL7v1JkDxeR53Ksyhz0
+a+ziDxn8trfg3WBIvJcjpHSSsX46yLyXA6PJlfMwr6LyHMFXNqGeHPUIvJc
gRmBI+46DhST5wp8XRkX+3WemDxXYPXPlm9c/MTkuQJneL2+V14Sk+cK/PLV
zgr6KCbPFRi52TvRWComzxXY+dlg4YM+EvJcgXN2428umiUhz5l8NdqAt11C
niswb5HBdf+zEvKcyXkmL5oyz1Ws5wpczTDdE8A8x7CeK7BsQzi/knluYD1X
wEx94sOMqVLyXIGmLWZei9gkJc8V6DZ0+I+7J6TkuQIrgvf178zUeaznCli9
2XPtTrmUPFdg8Yv9Zvs7yMhzBeYkpn0cNUFGniswhHt34x3GbdZzBZrdHHy7
HeMk67kCNh3Vi8enychzBdwrjDTDc2XkOTN/g9R2AuYcZj1XIPDw1K+7mXOP
9VyBXsmrzd/Nk5PnCnRvNKv4J3Ofs54rED/QMCj+nJw8V+Dy8zdR/Zl9zXqu
QJOOuvCVVXLyXAHfsueC2R0V5LkCE79Y2ZZbKshzBbxNj+sslinIcwWOJd08
2ytQQZ4rkJLWNfZmgoI8V+C90bPtJe8U5LkCnlPUGek8BXmuwJHHRZ97d1SS
5wqUDD+xsO8YJXnOrGfqlg8Zi5XkuQK3C7I/5PgqyXMFwh/W8sJjleS5AsY5
V748f6gkzxUo9Qk2CfyjJM8VSO94+mCmSkmeK/CR6/dtXy8Vec6Mp+JQ3xfu
KvJcgXH38vtvWaIizxW47jWu4qSvijxXoL9dnnxUjIo8Z8bzOtDJ6raKPFdg
oPOnjumfVeQ5s/+Nh888XqUiz5n9X+tk/0SjIs8VuOMgaxXWV02eK+Df+NPw
YxPV5LkC5cYj2qod1eS5ArJvYtOXnmryXIFN/8W04ISqyXMFDm4vcl9+Vk2e
K8EPN+i7Jl1NnjPzMnqYXWiWmjxXotVXSytZgZo8V6Lz47Ond4rU5LkSj6Kb
nQluqSHPlZg5bMO5xr005LkSi/++25c0TEOeK/Hrm+zeCWjIcyWWfFsXfHW+
hjxXYlBH+9w+qzXkuRI5qq6Rf7dpyHMlOpou3vt3n4Y8V6LT9AW3ex/WkOfM
Oh4cMetSnIY8V+J2Ur8A9yQNea5EZacj1z0yNOQ50//W3WxvPtOQ50rcunWt
eOR7DXmuxBzN/lHC7xryXIkF74c0Ff7VkOdKaHkTp44s05DnSvSXjFQ2/tnI
hvWcuX6jkTM3iDTkuRLf3mX5rFFoyHMl+vx5Xhyn1ZDnStzwzWxq2FRLnivB
y9vhs9RFQ54z7R8qK37XWkueK+EXk2zcvK2WPFeiqVOhQWg7LXmuxLwy/o0Z
7bXkuRJeG0v7OjCZ9VyJ1Z1fnYpjfp71XInLiT1XjWTaYz1XwqOR/Z92Blry
nJm/5z+DLFtqyXMlwqs+y5OY/rJ/H8yMN/11zkadhjxXonu7ScV+Sg39vbAS
UTwrTp5YQ54rcSE4/e3hWg15rkRqZkLoKa6GPFdi19KdA2WFGvJcCdmwof1N
izTkuRKFV/vMH/pJQ54rsXWjR8HY1xryXInnS9vmNX+kIc+VsL+pq56QqiHP
mfG8jtr7NUFDnith5lnU7MtpDXmuRKN1ls3GH9KQ50p8n9G5dRtm/7GeK/Fe
uSvZ3ktDnjP7f+0pp14lWvKcuf7+OBfzRRryXInRn9JOm6vV5LkSJVd27Ssc
qyHPmfXvcnnxjv4a8lyJoTUPW+/voiHPmXMv2W29URMNea5EwJ4E6zF8NXmu
xJb7b1y/56vJcyW4r2JTNO/V5LkKezpMtcy7pybPVfieu+FS3wQ1ea7C+Kkr
+n86oibPmXPpV+9ZtnvU5LkKbhbtu9q7q8lzFY62nt6PP19NnqvQu9f9eaMm
qclzFeYUz9/WZYCaPFdhcWOXJbHt1eS5Cso40Z/XMhV5rsKL+wmv44pU5Dnz
89/eF5pkqchzFd6FWdQ5pKnIcxUW7g1LHxWrIs+Zc9q7J/ddoIo8V+GT/1zr
7htU5LkKbRbarO8zT0Weq/BfiU9rjqWKPGfyL7/X641V5LkKsn4Hxt5g5o31
XIXLx6ZW3K1QkudM+909PQ58VpLnzO+3j7MyZfYl67kK6jba3/sZj1jPmfGt
7XPjIXMfsp6rwDW92e/ZWiV5roLljjlnTs5Ukucq9HdZ7j6NOfdYz1XYdrDw
+9tOSvJchT5edgMGShXkuQrJvVyOu+YpyHMVHjVtbe/HOMd6rsLdOA/f7Zf+
ea6C2OfIMIf9/zxXoYN0V2B7j3+eq3DDuaXvHft/nquQ17Gmne2of56r8NYh
cfyzrv88V6EudPPfAXI5ec64eLF0RfAfOXmugqKdbfTbp3LyXAVXE+cM7UU5
ec7MZ3+O+eAwOXmuwtO8x8tnbpCT58z89Ei8sGqOnDxXwTH9z/Gtw+XkuQq8
TxFf/TrJyXMVrvX9XbJPLCPPVQi0EtiHMM/ZrOcqRF8eHBnGPOeznquwyM7+
cNA5GXmuwh+HoxVhgTLyXAWjs4Uzo9bKyHMVat34fc/MkJHnKvhua+SVbC4j
z1XwGLzu4su2MvJchXN3T1aU1knJcxXSdxlMa/ddSp4z98sjxfQpd6XkOVMH
+PfMDIyVkucqxLaalvzDX0qeM/P9oKXFcFcpea7G38l1409Ok5LnaqxbYFnS
bpCUPFfj7SFeYJSBlDxXo0Uz8SrzWgl5rkZ1f/NHP79JyHPm/TaOc2LuSMhz
NYKzf5ZsiJWQ52rsmuMXsGivhDxXo+ZvyNmFqyXkuRrtYt+3XW8rIc+Zc6T3
23ljhkjIczXWXi7wvdZOQp4zdU1s270jhWLyXA2h8blGib/E5LkaE6sPmIx5
JCbP1ZhwoNOGPxfE5Lkay9PnbjkfKibP1ZiTO/m+/0Yxea7GkHHatz4OYvJc
jT0vC3pGjRGT50wd9Duif2YPMXmuxjXvIUs6akX0fK7Gjzmh/QJKReS5Gp8c
+1S1zhKR52r4OKYNv3VTRJ6rsZV3TOd7QkSeqxF1zoqzareIPFejwzRLmw2u
IvKcGc+1DdOOzBCR52qcu2hg+8tCRJ6rsVgWGTG5i4g8V+P8016LXyuE5Lka
TRq9Lt5cJCTP1YjhRm4c/1ZInqvh4hthanZTSJ6roXjYdtLwGCF5zuwP/5TS
Zf5C8lwN692etsnM8ynruRrJPb7vN54jJM/VKDnd7MOt0ULyXI3I939HrTMS
0r8HUuOpdascqyZC8lyNJKXx73HM8zHrOVNXXr9t65gtIM+Z/eO4e3z0QwF5
rkbzw4ufiC79ez5XY9m4zWW+kf+ez9W4csPuUe+d/57P1ehyqsCuYvm/53Nm
PCYZx37Y/ns+V0ObyT1bOvzf8zkzv0mzNxn2EJDnahiG7FBvbCwgz9UIrf1m
X1zFJ8/VMNryfOmeH3zyXI3MmjjjCU/55Lkag39+iOiexCfP1ViYkn+mZzSf
PFfj/sJjNtb+fPJcDecPVZvD3PnkuRqp56d2qZvPJ8/VkE/nL9gziU+eq7H6
3uKr5gP55LkGBmWH7JQd+eS5BldLXczyZHXkuQYPI1zymn6uI881cDu3dr9X
Qh15rsFjTBKZ7akjzzXI/dk3tfvCOvJcg4CYHY3mm9eR50zdczLC40OjOvKc
ab95u9sHc2rJcw1GdX0fGZFaS54zdbnx29+fwmvJc6YODIy1clxdS55roExX
+BlNrCXPNVix2GJ2vy615DlzfZNf6zbzashzDWZXdgiVv64hzzUoGrZ76asL
NeS5Bv5588599ashzzVITd6lM15UQ54zdZjgzOhrw2vIc6bu+mzB3dm6hjzX
4GB16Md9HB55zrS/3dAz6xmPPGfGt779swVxPPKcea44On5hD18eea4BZ7fz
c2NHHnmuwcopg5+tHMEjzzUYveqAJL8NjzzXILTbmXZnKqrJcw0ql+Tdin5d
TZ5rMGd2v9C3l6rJcw1Ozn4yakJgNXmugdmNjas4K6rJcw1GqDenf5hUTZ5r
EFF8/ntNz2ryXIPEmx7rZsuryHMNROGl7Yp/VZHnGvyelOWVdqeKPNdAmB5t
+ehEFXmugay/r0azo4o81yAt32ezn2MVea6B54e15sPGVJHnGlikVv7o0aWK
PGeu1/ZkFytRJXmugevLwvCT3yvJc+Y5cOvwnEEZleS5BvcCihPqTlSS5xo8
0jlF13hXkudM++OF00ydK8lzZn8JTFdETKgkzzXYcdo9aLBRJXnOrHdHl0Uq
VQV5zjxXLkn2a1JQQZ5rcFk+PmZyZgV5rsGp4ZrZKZcqyHMNUmQD4RBWQZ5r
UJvbuVu/DRXkuQbVQYt2DplTQZ5r0GfkQ+3a4RXkuQbXZPOXfulUQZ4zdbxT
7XZPCZc812DmcX+Hiblc8lyLZKMQzYQnXPJcC278ga4bLnLJcy1UobnPboRx
yXMtnBc3NnTy+Pd5uxY3s/fP7Trv3+ftWrQeMCq88dh/n7dr0cu8eqtJz3+f
t2sxO1CXvF5bTp5rEWvRq6ywtJw81+J56/mvwrLKyXMtlgzoLnK5VU6ea2En
XdhrSUw5ea6FmfcCbtiecvJcizzDz40LV5eT51psTBAZus0sJ8+1aGXrXdB9
RDl5zjy3tn47RmxYTp5r8SHDcaJKXUaea2GocMo255SR51pkBr8sCPtQRp5r
YWv0SNAmvYw81yLU8+/9R2fKyHMtfuxvUnoiuIw81+Lc29A+pzzKyHMtYn6M
7/1iYRl5roWD/5YjhpPKyHMtLoYq+x3rV0aea3Fv3bCosW3LyHMtRoty/HVi
DnnOPHeL5iUK8jnkuRZ929zdYfCWQ55rUexnNmR2Koc81+KQyYVpqbEc8pxZ
z4nnHK1COOS5FiWe7/rUenLIc+b6o3aveO3EIc+1ONz+yIvnNhzyXIspT9yb
lw7hkOdawJ7zd7AhhzzXwuS/LY2O60rJcy3CvWoHmVaVkuda7FqR3eb7j1Ly
XIuUrwbrkp6V0r/31WKIvE1N/PVS8lyLr5M/rXgcU0qea3HHLMtLGVhKnjP9
6aQpXepZSp5r0XhQ5dZ851LyXIsI6ZFvQdNKyXMtukz1eW03opQ81+L8zUut
RvQqJc+1mDyq3ZLxLUvJcy1ObM3c4SoqIc+18Dr6rOpSYQl5rsUt3emZbT6W
kOdatL9XKDt3v4Q818LzY+dXsxNLyHPm9zu12tU1uoQ812LP0ZgD9f/fUtZz
Ld70GmTa2LOEPGf269LcA4OWlJDnWmywHBHgOaOEPNcip83gt1/GlJDnOoz3
8By8wLSEPNfB8lLj1fz2JeS5DkvX3p9wQ11MnusQGtrO+0BVMXmuw0lZZU5A
TjF5rkPjl+uGHn9TTJ7rEFLxY/SrjGLyXAcbXZO7nS4Xk+c6PDs42n/PsWLy
XIcps4ztGwcWk+c6TDxSy7+0pZg812HvobkjXVcUk+c63Dxv/2PC3GLyXId3
cf5XLCYVk+c6mBj/3jZpSDF5rsONFx81bj2LyXOm/VDrHtdaFZPnOhTw9ka2
lBeR5zqkuM3tF8gtIs91kG/PS+78u4g816Gi0VvB0zdF5LkORWd6vwi9W0Se
67AsbWnV2itF5Dnz8zmuE5afLCLPdUhqHbx78/4i8lyHvgV++075FJHnOnz8
trlbnnsRea5D13289pbOReS5DqPzeROS7IrIcx0S935yGzPh3/fnOmRmOa79
Nfjf9+c6fEBy82M9/31/rsOeVDeTtQb/vj/XYaG8Sn5aWkie63AhfnNVbE4h
ea6D6fusjHcPC8lzHcx8rLT9zxWS5zoU3369+ea+QvJch609BiW7rSkkz3UQ
2JastLMtJM+Z8biOH+00uJA81yEgc7NVaVQBea6DbciqImltAXmuw/2aFZ3C
swvIcx0atZndfvrdAvKcuf685Js4U0CeM/PXZkjfSQEF5LkOfncaH/NeU0Ce
M7+fEhmWO6OAPNdh24gu0e5DC8hzZn4WGZ417lhAnuvgMXLCJJU4nzxn9u99
K9MmefnkuQ7HTQ83GvUsnzzXYbqzzaEDCfnkuQ66ve13NY/IJ891mL1rya7r
W/PJcx2a7Rw41WdxPnmuw48Ak8gNk/LJcx02moa3DjLNJ891CJ/UOfZZy3zy
XIewliZn+tX+xf8BMBlUTw==
         "]]}, {
        Hue[0.5716994374947433, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aMPwMT7keS2WjO14Pn++D3lei7t7zDIcN/qQ57WwGJZysuaoD3lei9TPTVuy
Un3I81pMbCO8nP7WhzyvhVnDuLWFZT7keS26RbzXH6G7kjyvxS7Ppdk3B6wk
z2uh/9qiyn36SvK8FkvjujwZv2IleV6LSdePHcaeleR5LfTWJEcHn11Jntei
0Lnd0NInK8nzWozOMowN/L2SPK+FG+tkv0nyleR5LTakWBqP7O1LntciY077
Vwun+JLntZjbtsPWlOW+5Hkt9n+9Fmi525c8r4Phrv+6/z3rS57XYe2hDmnZ
z3zJ8zqYlvbfUVTiS57XIfNFcMFAjS95XgebXfzOZweuIs/rMM+7/95ZdqvI
8zqMS5u+yWL1KvK8Dg3L5o2dFL6KPK/DeTvpoL3XVpHndfAW3ooSfVpFntdB
9jrq2+XGVeR5HUZ9PzI1tMtq8rwOeywmDEkcu5o8r8O1F7pVbLfV5Hkdqh6Y
/PIOWU2e10G1znuByYXVeNrqeR3230q6ps5ejahWz+swuO1cDKhajTWtntfh
SO3zTTs6rMGUVuDq4NK2e5TB6DXkeR06Jdnrf1q0hjyvw9vcjkPe71xDntch
pEuHxcrza8jzOnw8fb/Z780a8rwOr94vXtaldg15XochGf2am43Wkud1mHy7
d/f249eS53XYWzR1jKfHWvK8DuK3bpdrD64lz+tQ32PY13vX1pLnzPVtPfpm
5q0lz+ux3OIQXyBeS57XQ9bR8tHm/uvI83rYO7z6OcRxHXlej7aDXjzotXkd
eV4Pz4KjL+cmrCPP62HnHbby8Yt15Hk9Ki8aG66tXkee1+PigrP9XLqsJ8/r
Mb/PYePdk9eT5/W4mWe3rMJ3PXlej8P7XTxPRqwnz+uxLWda9I6s9eR5PW53
Sva7xF5PntdjdM1Y944d/cjzeowMfv7j4Xg/8rweSYVDXFN9/MjzetimBs4u
POFHntfjwMn80U4P/cjzeviURRzUK/cjz+tx2nnwI5XRBvK8Hhvjpy20nbqB
PK/HpLkZb7LXbSDP6+H9IjH2RNwG8rweJzljp5/N3kCe1+OubeeZvKYN5Hk9
JLoCi8i+G8nzejzo3+S3be5G8rweXbe5R1/YuZE8r8ettn8HGadtJM/rUbEq
4Gr+z43keT1CuasuFxr4k+cNuLduzaWh4/zJ8wb0X7nf6u0qf/K8AS4NZj9v
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
7vafRSZ5LkR20vrEPosyyXNm/Xd0Phd1IJM8Z85fW7uATXcyyXPm/IxzG5Dx
N5M8F2Lymn/PfTtmkedCaA4/9t47JYs8F8LH0aSfwYYs8lyIgA3R2W5nsshz
IUydN1bd/5hFnouQVVfSf6QiizwXQZE0/sDmkQ/JcxGQuTJ7lNdD8lyEdqqp
U9yiHpLnImRml3asfP2QPBdh8vspN0Sih+S5CHo7jf/sGfaIPBchd8+W37tX
PCLPReDGja8RRD8iz0VwdBszu+rdI/JchJwRFnaLlY/IcxGGJZSZweYxeS7C
wNsOE6+tf0yei7C83PVX1MXH5LkI+zuxlsp/PSbPmfenhnWvMnpCnotw37d2
+5JZT8hzERIliYVzDjwhz0VwHzni2tvHT8hzEWxHvlz8XvCEPBehuoee86JR
T8lzEaYUzey6we8peS5CwegIk/+uPiXPmfntmPzblvOUPBdhgrFlrarfM/Jc
hKCtVz4t8HhGnosQwj5vZHPmGXkugqQhZc71wmfkuQgXdqw1zer+nDwXwc//
fZflbs/JcxFmvGn8l5DwnDwXwer6spGbC5+T5yLMEvCvcHq+IM9F4H+wUPOX
vyDPRTh7gsdLOf+CPBfhkUoCMfsFeS7C9WtJt+vNX5LnzPod7tA23O8leS7C
k6oVvd/feUmei+By62p2uvAleS6C3YqD/sn9XpHnIiYvlly2m/GKPBdBlnJd
NHnNK/JchDKjPO9jx16R5yKk6m36Y33nFXnOjGdN2dpxBa/IcxEWFhXrx0hf
kecifE5a8tCpfzZ5LsLNlKfHfGdmk+ciTK/jhBduyCbPRUio7P3iZnQ2eS5C
kZ2dHftRNnnOnJ+Cj8N2sLPJcxHuPHwXubnda/Kc2X+v1JGfxrwmz0WINxE7
nXB/TZ4z89tZVXcv9DV5LoLbqunxuPWaPBfBZNeX4PG/XpPnIqSbZr6J03lD
novwGG3veI14Q56LkO1XHRDn9oY8F8OQneI4MfQNeS7Got1PA2ffeUOei/E0
kT/t4+835LkYbVx8G54YviXPxbDUP5bff/xb8lyMZV08pol935LnYuwetHil
XfRb8lyMv5GbOAav3pLnYvzT91JMb35Lnosxyr53D37/HPJcjJMRBhcHLMwh
z8XI2u6l93F/DnkuRtFwj8zm9BzyXAwdAxvr+LIc8lwM/XnWwicm78hzMcK8
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
LoOn3GPN1C5c8lyGCXGx/EpbLnkuQ9iSBl8jfy55LoPogR0yk7jkuQy790a1
+fORS57LcDJo0dADMi55LoPe7Ob/rg7jkecy6Kd26DJ3OY88l2HpxeqQgBM8
8lyGWKuHEabPeeS5DAeE1dunNfPIcxkSpmxZVGHGJ89l6DvIeNJ/S/jkuQxB
Iy+bPTzKJ89l+NpjnIrzjE+ey3Bw6NqrJ3l88lyGP+IwzmMLAXkuQ/Sfl6vX
egrIcxnm9XP9EhMjIM9lOKd/PWX6RwF5LsNj5WF3Px0heS7DpTb95nSbJCTP
ZWgbOfrBpC1C8lyGNSbmb/5cE5LnMvx+1TtMzhGS5zI0zNbUxvYRkecyHN96
Ojd1iYg8Z74/Gl9mHSUiz2U4OiXp09hcEXnOPO+oOTo324rJcxmM/81nx9uJ
yXMZVEPWpvKZvl7ruQxDO/n7v3wqJs9lKPXxGSaXislzGXo93pF+aYKEPJdB
vX1wejrTV2g9l+HdrpH3LDMk5Dnz84uem+rzJeS5DFOyr/ZkMXVa67kMk5fs
zv2zRUqeM/sv16ZnAXOutZ7LcDfn5fNBzD7Xei7DEduJzu+tZeS5DHu26k56
vk1GnsuwvKTvPZ0HMvJchqJLGz+dFMnIcxkCVnZa4zNRTp4z73v4cuz2XXLy
nFmPGR5P3j6Vk+fMftvrNH++Wk6ey5Bj3q6x3QwFeS5D7otZP/iHFOQ583rw
zxtt3ivIcxlsYiZIp3ZQkufM/spZax41X0mey7CRn+ejjFKS5zJwHmpuh/xQ
kucySPkf/xj0VJHnMvjfCjsW56Eiz5n3X/KyGHxRRZ7LsCPsG+96mYo8lyOo
h7XSzEJNnsth1meZZZifmjyXo5/5dsuPt9TkuRwxtrxDtc1q8lyOeVPCT5fY
aMhzOeJCfRPOB2nIczncjPcdNnukIc/lEC/s5LhSriHP5ehg2n7O8P46LK3n
cri2idovm67D0nouR1RZD50kbx2W1nM5fvkUBBoe0GFpPZdjrs2L7baXdFha
z+Vwn/c6cuIrHZbWczki+jazeP90WFrP5cja+Vq9RqPD0nouh0gTah3dX5el
9VwO28ibkzfb6rK0njPrPm/dFqmHLkvruRwBBf2GjQjRZWk9lyPtqVGG7mld
ltZzOUKrFMuDM3VZWs/leHKD43/kuy5L67kcNTrPxls167K0nsvRMX1pm9Ud
9Vhaz+WoXTtqjKWlHkvrOTP+xHldt9npsbSey+H/C51YK/RYWs+Z+/l1OhUR
rMfSei5H++ShJoui9Vhaz+WwO7rH/NQNPZbWczn6u652n/ZGj6X1XI7p/z3w
cvujx9J6Lsfj4ifCIr4eS+u5HM5tZ/JfttdnaT1n5m9pnKPhQH2W1nM52j5b
qbgxXp+l/ftgOUZdfzMhba4+S+u5HL1X9raVeumztH8vLIehe/22pG36LK3n
ciTp3fM6flifpfVcjt/Tzt14m6jP0noux7AnDhaO1/VZWs/lUGTM/9DxiT5L
67kcKteau90+6bO0njPX31WQ7lmsz9J6LseQtAVJpdX6LK3ncrzRpAxLEumz
tJ4z9yuYMCtCz4Cl9VwOfmjvGw+MDFhaz+VI9758q0tvA5bWczkOptrdvmBu
wNJ6Lod0W4dpK0YZsLSey1HAm97HaaIBS+s5cx5QjXUwYGk9Z/ZzyNjv6Y4G
LK3nzP66n2NlOd+ApfVcDqewP5yPrgYsredyHHFedu/0UgOW1nM5Dpmnx8R6
GLC0nsuRO8z4YLqXAUtbXuQYHJ34vM1KA5bWc+b8TuqwL9zXQHt89RQoWWNl
PX6VAUvruQK95yz51I35Xuu5At+H+WwayLxf67kCG7d83+TtY8DSes68/rJo
/rcVBiyt5wqccLZ+HrzcgKX1XIHob6rExW4GLK3nCvy23F/p52LA0nquADv4
2a/HTgYsrecKvBV0z3F0MGBpPVfATJw7xni6AUvruQILlGtfmk0wYGk9V2BY
nyFTgqwMWFrPFWiIdIrowqyH1nMFijoEZot7GbC0njN1d9NH/RGdDVhazxUI
2+OUlK5vwNJ6roB4nrTquESfpfWcqct1mtXP6/RZWs8VGPChU780jj5L67kC
tUsLNWkF+iyt5wo8mL1v+PFX+iyt5woMPhRftjtdn6X1XIFH+5dsOHtJn6X1
XAGRhz9XFKXP0nqugMX7CAP5fn2W1nMFkjfVfN++WZ+l9VyB4qHB6zZ46rO0
nivwZ2ngz9I5+iyt5wrMWnFv/K8J+iyt5wooknWvLh6sz9J6rkBb4Xk7r876
LK3nzPhqk0dJ5HosrecKpHROODq4So+l9VyB7d6yTdX5eiyt5wrk7G+QOj7V
Y2k9V2Dd7L/THa/qsbSeK+BYzFpYG6nH0nquQIfoDTbjduqxtJ4rYNrTq2b4
Sj2W1nMFOKkv132bo8fSeq7AnbNfzo2w0WNpPVeg87oN621767G0nivwNGf8
xQ56eiyt58x4bTLbJdbqsrSeK2Cy+YRXVb4uS+u5Aj0bXjgpH+qytJ4roGk2
8v97QZel9VyBmm5LnY4f1mVpPVdgZI3Omvb+uiyt5wo0bzw0eIWrLkvruQI/
/jX/OzpJl6X1XIF5D05wTjFeaD1XYGH34BVBBrosrefMfsr03jGtToel9VyB
gsWYVpOnw9J6roDH9SG3dmfqsLSeK7B84H/psiQdltZzBWa0edJ/DeOb1nMF
ZiemPH21Roel9VyByTFVEzo76bC0nivw7C7LatEYHZbWcyV8r5kMPWWqw9J6
rsSQoIYpJ0Qa8lyJzAO72byXGvJciWlPHNhuxzXkuRKci08zXiz+v+dKeDef
v2M14P+eK3F33DJNWq2aPFdiusHau9YP1OS5Euj8OuXrPjXlcyUm2XudD52j
pnzOXG/MlckuJmrK50pcFyn5tv9UlM+VeKHwNpt3Q0X5XInm3Gr5viAV5XMl
tnn4xxWzVJTPlRAOGVTm1UlF+VwJg/22j7oWKSmfK9E57EyuMEVJ+VyJ/kN8
73fYoqR8rsSPZ68qlkxTUj5XQvD0+PMiZp60niuR08wLif+poHyuRJNwPCKT
FZTPlXD0d+uaE6CgfK7Ekaickqm2CsrnSozJ6x0sZOqq1nMl/LvkJHCL5JTP
mfXyfFZizbin9VyJi/E2Px8HySmfM+ulZ998bKac8rkSC/0uHUkxllM+V+L3
/hkVhkzfqPVcieyDHSc8YvpgredMn5gZciYzVEb5XInLj2b30GVyidZz5v3+
Xa6eHSyjfK5E4YrmIeFCKf1/H2Z+ws03ZudIKZ8r8d7t1rgFTG7Xes6sd2mx
tZWflPK5EjcqS7x3TJXS/wdSIrJ09iXFf1LK50pM1XhOz2dLKJ8rYWS/I0rF
5AGt50ro2XBO7j8ioXzOjM/jWKSbh4TyuRLWcxNLQkdLKJ8z6z8uPqJJX0L5
nHneq2ln3hWJKZ8rMWFi0RvpbTHlcyUCn1e/3nNITPlciZeLDpS7uYspnytx
4KaH1ZHRYsrnSnSYd/XCf0w+0nquRHj+6pF1f0WUz5WIMK583feBiPI58/zO
PR2vnhBRPlfCZJYs+tAqEeVzJVasqw15OFVE+VyJfz07fWWZiCifK1FhdtFl
QKOQ8jlzXljOOa7vhJTPlXDQnCr7fVFI+VzF5HCO58NdQsrnKhinDiurXiSk
fK6Ce5S4t/8oIeVzFWYuyr1h315I+VyFs/1Wj9lcIaB8rsJrqcyh/qWA8rkK
4wsOHXxyVkD5XIWSyaLtf4IFlM+Zc5sXcmf+YgHlcxX8Yx886mItoHyuwhNl
Y29zIwHlcxVq2i12P1LPp3yugmrqMNHkj//P58z1rkv8p6b9P5+rsMQ0e9qJ
w//P58z1RluVDl39/3yuwuZOWR+M7f+fz1XYnf99q9MgPuVzFRzuDpyfp8un
fK5CEY5/vsDhUT5XIXPSJp/H2TzK5yp0vvAiuH8yj/K5Cj8CrA58CeVRPlfh
b5l9Vc4qHuVzFUbZHDE1dOBRPlfB0jhhZ5QFj/K5CnVFDrtWtuNRPldhq8uL
A7vquJTPmRy2Pk5S+JlL+VyF6oRyhz13uZTPVcgZu7ZgTQyX8rkKaRcjDOOC
uJTPVXi+JnZOW3cu5XMVPF1O6zybxqV8rkLG4TuxDwZyKZ+rMPUiz6/ZgEv5
XIXkb6N/Fn5vpnyuQs9lhnLXc82Uz1VwmZfWdeHaZsrnzHy7VNZ/GtNM+VyF
9JJ57jmKJsrnKhzymDrC9n0T5XMV7n6Tj7WObaJ8roL3gD+Ol7ybKJ+rEPZn
zqRjI5son6sQVF5TUidrpHyuwr60FKO37xspn6swl/Um2TihkfI5M14P3e1F
qxspn6tQ2zZpRddxjZTPVbgR4DntuX4j5XMVvkY9afpd0ED5nJmf+sLFflca
KJ8z95+b6LwuqIHyuQqvktJyChwbKJ+r8LHm1JnbPRson6sw8PCTDEFdPeVz
FRo896uuPK+nfK5CVqSV76uoesrnKoTbmeTNXF1P+ZzZ71+Pj7WeVE/5XIVb
1tIDYZ3qKZ+rcbS8+IYtp47yuRobOn9K9ciqI8/VeG9z2L/kRB15rob5qGZR
9so68lyN5s890G5SHXmuxp2P0x3vGtWR52rkLSnsmFVZS56rET/sREyf57Xk
uRoNg2z/lcbVkudq2AR3lKn9a8lzNXz2udSGONSS52q49Ln+1KV/LXmuBv9d
/d5QSQ15rkbTjLGsTt9qyHM1HPjFJk03ashzNYqbQ7pYHq4hz9Wwy+HNyfKu
Ic/VCKl2/500pYY8V2NL7X8lBaY15DnzPJtSA3x41eS5Gvf/SO/hSzV5rsak
ItN3W65Xk+dqnDg2K59/uJo8V8PoamfJW99q8lyNwnlDVlW1ZLhWz9Xo9WIb
3PpVk+dqzPvR7bGxooo8VyPCd4GmX3EVea7Gs7Vn7Lc/rCLP1cjqEfXYNKGK
PFfj7zdBgm7Q/z9vV2NweZrxxMX//7yd+fnJd/wyx/7/83Y1nMSDf+42/v/n
7WokVdjGHRNUkudqnPwzs7qkoJI8V2OEYUyXnQ8qyXM1nPudWLw0vpI8V+PM
/guykB2V5LkaU5wwu2xpJXmuhngZ53jE5EryXI1PVqL/dvWpJM/VOFRaPiBN
VUH/35d5/qoOXbuzK8hzNaYKH47NeV1BnjN93w3zvxlXK8hzZj8u3+bDOVpB
nqsxPPNqz/n+FeQ5s79FAfHu9hXkuRpKPcvIv2MryHM1vHt+MND0qCDP1Wjn
fkTHRVNOnqvh2P5JmbC8nDxXY3rbZb8+5pST52qMlZq2uXajnDxn5juwn6Lx
VDl5rsZ4y8sfgoPKyXM13g7LyxzlUU6eM/cTCWYvmFFOnjPn0/s2N9CynDxn
1mdaX/e3/5WT52ro5u6VLxGWkedqnPoj/9r3Txl5rsGuizvn9nxdRp5rEFuz
vWzW9TLyXIPwb7pGN6PKyHMNLDZkO8zYWUaeazDDj6PfwaeMPNfAqrz7W4PZ
ZeS5BpvaJulbjykjzzUoLjGbEdmzjDzXAL3Yyj66ZeS5BtZ/9zwqruWQ5xp8
ju0mefedQ55r0KZgmG35Uw55rkHUhMwuo65yyHMNTi78T5YaySHPNRiX0LBv
/k4Oea7B+1UbR5r5cshzDRKEigizeRzyXINvW9daLZjAIc81iNTPOZs6kEOe
a1Bet3/d8I4c8lyD41fmmBWL2OS5BonGfTzus9nkuQbdM0dfy8xlk+caVP3R
PV+WxSbPmZwjcsyblMwmz5nxFtb/fHiSTZ5rsMek6xzvXWzyXIMXKwxfj1rD
Js81cK5x+jPEhU2ea6DzL2zMTFs2ea5ByZ+9XseGsclzDc5sMNcXmbLJcw2m
xoU9D9djk+caPKs67rGn9B95rsGFFKe68Y/+keca7D7P2zg55h95roFPXwfL
cP9/5LkGS8uGrekz6x95rkHz7dNbpGb/yHMNBn89ndBXVUqeaxDxYbLFkaJS
8lyDjC4nt0x8UEqeM69/u/hhZFQpec6s/4fth9b6l5LnzPOMVkvKZ5eS5xq8
ftlj/5UhpeS5BvZPDwSm6ZWS5xpM7PLLuuFfCXnOPO+xiJ7bnpeQ5xpM6lZ/
ZNLZEvJcA27bNmXTd5WQ5xoMPPfgeNjSEvJcgxGu8dXtJpSQ5xooQtTeuSb/
//25Bg75Ks9cwV/ynMnFvVzntCv4S55rEFyxJvrg/b/kOXPeZs9NmRDzlzzX
wDD7XpPFtr/kObOfutVXuLj+Jc81OIy/0iybv+S5BldjVBeWGP/F/wDo/ZuV

         "]]}, {
        Hue[0.8077674149945295, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Xovwesy5q22Wn6D63Dgfk7I+Z96cIL9FkOzpHtSpx0mq10WIiqvofDXkJHku
xrXjoXP6Fp4kz8Wwnfj76lnnU+S5GB3yZpjPunWKPBdD6Xy2i7LpafJcjBt8
t4U/HU6T52J8jshYNXTjafJcjLItm250vH6aPBfj5dibT/dlnibPxTjkfYoT
bHaGPBcj/ulUcJgz5LkYH7faPmm3/Qx5LsYH6YEJcffPkOdidN76FLnFZ8hz
43q8wvecNz9Lnovx4JitT/Gcs+S5GLcTpxW8PXqWPBfj0hbGbvins+S5GG9D
/JaN0p8lz8Vo4ZR68NuYMPJcjKfWsveabWHkuRiHY16O+vgwjDwXwyWEM6t3
TRh5LkZNiy93LQeeI8/FOBh71eHh2nPkuRiaZdeulkSfo/5DjKG9fa88Kj1H
notRMqfp9h69z1M/IsYC315Th6w6T56L8fOXyej8qPPkuRinT3jFDCs/T56L
IVuVNahv/wvkuRhBvHtl79dfIM/FeNxjuKjJgwvkuRir+nhmCIQXyHMxbLjn
fu23u0iei+F6+f7upMCL5LkYFzdlyh++v0iei3Fix+Hu00wvkediCNs6PQqb
dYk8F2PDguHDTl64RJ6LsW7u34SxhZfIczFm7xpz5eqAy+S5cX09wwc92nqZ
PBdj4OnVd3e9uUyeG+PJZqJN0+ZXyHMx+k6zinGZf4U8F8OidUAec/MKeS5G
Y39ra0XdFfJcjP1nYoYecLpKnosRW/yrz6PjV8lzMZ6k9QkLz79KnovhIfi0
bNmwcPJcjPXP25UW7w4nz8VYe3Mtf2xGOHkuxpsJLxJm9Y0gz8Vg9CerewZE
kOfG8wwpn57yPYI8N563qsUml97XyHPj+8+G648HXCPPxZjpxh17N/0aeS6G
dZfegosDrpPnYkx+kH3UY+918lyMK0edalW518lzCQZcEQgTu0eS5xIs/Poj
acWUSPJcAq/ALTP8d0aS58bX/3n5G6IjyXMJUjs1OaDIjCTPJZi6R5i9oskN
8lyCEEXMDKdRN8hzCUbN2bf4xKob5LkET+Jmnppz7gZ5LkERN/Dv8c83yHMJ
Gv+1XcIobpDnEhxxvPTIa+BN8lyClmlZ75t73CTPJaj1Gtmx76mb5LkE3Zxk
nPcfb5LnEnSVVPtnyW+S5xK8czW9vnJwFHkuwYbBCXXbVkSR5xJcix4/0+xC
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
o37TXK7P+UaeyzFmfp/h265+I8/lmL3RLteq4ht5LkdcokX+Mdvv5Lkc+c9s
4j6FfCfP5RAWBt1PT/1Onsthuqjvn/huP8hzOboX+z318vpBnsuhf972l+LZ
D/JcDufy1x9Xmf4kz+UotzZ1ilv4kzyXY1b8Br+/93+S53L09lw9o1L3kzyX
43HWlLZ1A9LJczmKg88GL/svnTyXo/+67x9cdqWT53IsPri4yd576eS5HGll
u79uz04nz+Xo5zyz24dGv8hz4/51bZ13bNgv8lyO1f8qCjKX/CLP5fgkMdt/
5cgv8lyO9lU8FCf+Is/lqHEddfFexS/yXI5no5c8lHXOIM/lCB1xtuKzawZ5
Lkf0BN5Ky50Z9P+JcriYOL5W384gz43nffT++vk5GeS5HG1edwuc3yKTPJfD
0Derb/b4TPJcjg0ffMaW+mSS53L8nVs0JSgqkzyX451s4OpHfzLJczmczvtX
bG+VRZ7LodUMif3unEWey9Gt8+cWX/2yyHM5JqfZvnGLyyLP5Ugt4IzcXp5F
nsuxx1FjPrpHNnkux8rF1sWn52eT53KcKRrU5OTJbPJcjvH7/U4NT84mz+Xo
dVj+ZFvj3+S5HFx+h1tLnX6T53Jook/MqfP/TZ7LsSx8W9ygp7/JcznunFj8
tL34N3kuh8/m96tuD/9DnsuxbnvKW773H/Jcjg4jtN+KYv+Q53L4txVcOVrz
hzyX40hOSxf+kBzyXI6qcdP+NNqcQ57LEbmoYkfmwxzy3BhfL3dzPcU55Lkc
3t8GeTyw+0ueG89/tVT5IuAveW6Mt0fjpx95+5c8V2BI1JRbPZrmkucKFHye
nek/LZc8V0DzjXdixZlc8tz4/UMsM078zSXPFbDv7WszwyaPPFdAvt35bO7G
PPJcgbcpNsfHPcsjzxVYOX5JrU+jfPJcgTy/qed2zcwnzxUIznVfseZKPnmu
wKm1gxX9efnkuQLN46+0SbH/R54rkP1gmXLawX/kuXG+I4Nt4n//I88V+Hlv
g1rdv4A8V8B72VfV0MAC8lwBl4Onrkz/XkCeK3D08u1l7taF5LkC3UPavXPb
WUieK7BbEAmnb4XkuQLOD+6POtW+iDxX4EJEyYogpyLyXIFxPft5l60vIs8V
aOzd5lrahSLyXIFHZn2ZkZ+KyHMFPi5hwszFReS5AurAuKp9VsXkuQLTZ1Zf
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
         "]]}, {
        Hue[0.04383539249432289, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd23dYzf//P3CiyKbIqGzKKqIQ564lIVFJKFLRNCuREA0jM5WdkYzMZJW9
siqFygihPc8enfU99Xq8P+f6/c4/rvtV5/l67tujUwZ7r3VeqdGmTZufmm3a
tPzr1m3s7dNNv9Hm/3mV/S8XbaoZMb6jOqdzPjl691Dn7YGPQo/0VWfXf2kn
Xw1SZ2OPgy8ERuqs+NLSoDp/VrXmPkWdL+fMsdhjpc5bMWlZtoM6Oz8wjK1b
oM4jx3e8pr9EnWVXWjqozoVDfki2BarzRVXvbm1Q5y26N+z/RKjz/P1H1/SK
VufhWjuSbOLVuXlby4DV+aPIRTVidb6wbnqnklR13twyfdfUeV7LcO+o89CW
7j1SZ3FLc6/UOS+35aXO5+3u8eRf1Dn8yZn+Jj/Vea5q9rwq1HnwrQ3+hxvU
WWjUsiDq/OFcS4PqfFbV2jCtP//LYUf6tnfrps6zu2iM3tVHnQeqVuOBoTrz
5S0LrM7vNrZ0UJ1Tmi6pVlidQ1S9i4Q6z/oT0bIi/8sGS3wtfzupM7dl+7mr
85uW7eKlzqdaltdfnde3LMc6dZ7ZMn2b1HlAy3B3qDO7pXt71Pl1S3OH1fnE
8ZaXOq/tFf3s/Tl1to0PrpJeUed+7VtOmDo3RrZsaHV+KWhZEHU+tqalQXVe
rWqN80mdrb0qCob8UGe9b/mqHajO9QtaDog6P3/fssDqnGzT0kF1Dmo5vu3/
/i/PaDluXdS5d8vx0FXn2pbtrK/OT1u23zB1TmzZLmPVOaBleSepM6tlOaar
s07L9Nmpc3XLcB3V+XFL99zUOaGluWXq7Leq5aXO0347qU6wOrectrcb1bll
9iTb1Fk1WNWGVueW28rjoDq37L79R9W5pbUnZ9S59fq8pM6t198tdW69rh6o
c+v18kydW6+Dt+rcenwL1Ln1uH1TZ+Z4qHPrdq5R59btx1Hn1u0iUefW5dX4
97/cuhyd1Ll1+nqpc+tw+6tza/eGqHNrc6PV2az1pc4tt7OvpTq3nLYkG3Vu
mb2cOeqsGmzLhv5fbuXDQ51br3tfdW69noPVufU6DVXn1usvUp1br6tYdW69
Xvarc+t1kKTOrcf3tDq39i5NnVuPxw11bt3O99S5dfs9UefW7ZKjzq3Lm6/O
rctRos6t0/dbnVuHW6XOjN/q3NqcSJ2ZV/n/57k6M56rM+O5OjOeqzPjuToz
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
yPNGBLj80xRmzyHPGxE8fITt0fo55Hkj+prVpG02nEueN+LToZGbTs+fS543
Yveb+R3bRc8lzxvx+ajDhfS7c8nzRlg+CT6RWD2XPG9ESFb8lOcDHMnzJtw7
3FRg6uRInjeh1/nFt/7tdCTPmzDep73R93uO5HkTkiwu7NatcyTPVe+f4j/0
yMB55HkTLnaWOri5ziPPm9D7cvS8ZXvmkeeq90+6GH31yTzyvAl6P2Kmsfjz
yPMm9E1+lttnlBN53oSPvSJ2T/JyIs+bUBrr/OpEshN53oSru4KLZuY5kedN
4Gy619FAYz553oROv6f7ZRvMJ8+b4B1yPmPLlPnkeRPqLkTqrFg4nzxvQmzO
pQeB6+eT503ovtM679j++eR5E4Ln3txad2U+ed4Ee05pfc6b+eR5E9qnZLZj
V84nz5tw/ZMu2nZYQJ43YU23aQ3FIxeQ503YH2lw38NhAXnehGkHfPRigxaQ
503YdaZq1swDC8jzJjhe7vH9WMYC8rwJb+Z/q95YtIA8b0LUnns3fkgWkOdN
yPH/bP7S0Jk8ZyMlOm3MKFtnOu9sRCz1z+oa6Ey+sxHqPC4o6JAznX82Ng/0
GGJ135m8Z8O2c1K7/b+c6T5gw29FQbCjlgv5z8a0mkf1UeNc6H5gQ5z2w3LE
IheqB9jIPV9lPi3Khe4LNpTurO/Pr7hQfcCG+9kerHufXej+YMNw+YQjfRUu
VC+o2lsUMKjayJXuEzaOfB4yY5irK9UPbHxy3Losd7sr3S9sDF12VPT7qivV
E2wMM+ibvOyrK903bPhcqCq011xI9QUb83r2cDo5YSHdP2xo/372yN1rIdUb
bByKXftl+4GFdB+xwRrfc3GPxwup/mBDUy+wT6f6hXQ/sRG7fW1Z8AA3qkfY
uNI7O2HyHDe0XlerVO8P1Oqxeosb1SdsnKp5btXpmhtar5s1bPx4fV6vx083
qldU87vPYde2bovA/P6QjTVz6uIXzlhE9QsbqW7tRiRtWATm94lsjCrsvHR6
2iKqZ9gomj1t0ryvi+jzSDacPzi+fNPZneobNvo/s+mbDnf6fFK1P+ZPmSMI
cad6h42r6RPCr1x2p88r2ehWw8nO+elO9Q8b66Z+nOyos5g+v2RjfpvEPtMd
FlM9xIbgrPvW5O2L6ecfNo7l+x5ffG8x1UdslHbvdSKuYTH9PKSa/0W3MgyG
L6F6iY1e24J7D/RcQvcpG67bJsv3Ji2h+omNndZ3U1fkL6H7lQ1djsHM1A5L
qZ5iY8+RicPmWy2l+5aNywqTKP8tS6m+YqOqIj2l/u5Sun/Z0NJIzCllL6V6
i434yQOtpozxoPtY1V7G/cUa/h5Uf7Fh/IHrOfmCB93PbJz/EX36R5kH1WNs
2NwxDaw38KT7mo0hX3P0gpZ6Un3GxomlPWWLjnvS/c1GttfHNZklnlSvsfF9
5NV3W/sso/ucDYf08f73Fy6j+o0N3/vvL3klLaP7nYN58RlVm4uWUT3HwaVv
Dbvb9VlO9z0HCmvHRrnbcqrvONg5wTMy4Nhyuv85uNNv5fGZ35dTvcfBqZhb
xbO7eZEHHGg4KQ5dNfGi+o+Dk4PsM+wWeJEPHHRbor2mX4gX1YOq521IVIxI
8iIvOHDv0OHkmvteVB9yUKLpGMn+5kV+cBAgNyi9JvOiepGD+t1SfurAFeQJ
B/uKTTSKrVdQ/cjB99m5sFm1gnzhoPP0y7V1e1ZQPcnB1NzlMwquryBvOMj5
4LydXbiC6ksOwnJSK+cKV5A/HDztY3Gvor831ZscyHRuj3sIb/KIgwbniMN5
vt5Uf3KwWXJnkMFeb/KJA/NhMwem3/SmepSDX54FBaFF3uQVBwUj7mzeKvWm
+pSDdfu7L3812If84sC56HGOwywfqlc56DBukajrWh/yjIP0cNPJPZN9qH5V
rUefpYUuj33INw6WF1zoXFzuQ/UsB6OfHjU91sWXvFM9zy5i74mJvlTfctBL
z8n3p4cv+ceBzewi7RWxvlTvcqAM3f1m+A1f8lA1v0Vna0eX+FL9y4FvtM7z
kDYryUcOXDISjsuNV1I9zEESe//Ldy4ryUsO7sdMOPh160qqjzk4+CTIcdTl
leQnB++9/jk9/bSS6mUOBnfTqDkqX0mecvDnaVPQHaNVVD9zILFLHNPbdRX5
ysHP/KPbs7evonpatb6bfLIvXF1F3nKQXT3Y7EvJKqqvOfjd+HSGQ3s/8peD
itENU9uP96N6WzW+l/oRmsv8yGMOtuvELXKM96P6m4PS0OFjSx/4kc8cBLZ9
vPB2pR/V4xzkexeNKdD1J685eH3pSTdzG3+qzznIHHTYvXy9P/mtGr/1OP8f
Z/2pXufgbILVqQEF/uQ5F/mJVq5pSn/ynAvDnHXsTSYB5DkXbgeGdDy6PIA8
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
kmJo6VvnEvK8GR3abeLyDpaQ581Y5PgvKCOvhDxvRm3uxCCNLl/J82ZUu/x5
Vz37K3nejPFrP2T57P1KnjfjLLdoTNj7r+R5M+I+Lx5q2Pkbed4M4ZVRp5bP
/UaeN+Pdpg2JUw98I8+bccR/d4dbBd/I82YsXvKy8ZnOd/K8GaUjHazWLPpO
njej3dwfvAcnv5Pnzdhw7Jz4XNl38rwZip081qgRP+jvg5uxPm5QpnPwD/K8
Gf/kFiz9zB/098LNuP614PWu5h/keTPCwwpHJ1uXkufNYNVYzJsVX0qeN0Pn
31+tM19KyfNm7J6zdPRJw5/keTMmnkvZNz3gJ3mumn9ujTDuzk/yvBmzTGPH
b2rzizxvxn2/A4qejr/I82bsW/Cq/8ITv8jzZuhHOE23rv5FnqvGO2mP3nfz
3+R5M6z+lTn1i/tNnqu+Li0r7lj8mzxvxqEx7zycdcrI82bwIrrwhJZl5Hkz
0soWh3F9y8jzZtgpLUbaHSgjz5uRUuI7q+l+GXnejJtTL+hy/pSR5824NmD/
y9ld/pDnzbBY6OhfYP6HPG/GjMS4ZZ29/5DnqvOlV98nYP8f8lyK6/3f6A3L
+kOeS1FsMem9RcUf8lyK7gddHS70/EueS1GhK0oPYP0lz6Uw1whT7gr6S55L
0fvNtgXKY3/Jcykub2tM+5jzlzyX4nPFMamY/5c8l+LCZ4M5W4b+I8+lsDR/
EOfm/I88l2J+YtcTe3f8I8+lOKcnD9DL+EeeS7F/8JovsrJ/5LkURWsNb03t
WU6eS7H4y9rcAqty8lyKwqJfrk83lJPnUlhMsNDTvFBOnkthc3yQ3/micvJc
CqPpBgeTO1SQ56rn/7wg+jOlgjyX4u7366XRwRXkuRSc6VnDIs9UkOdSLPxu
euvdpwryXIpAu/ykYK1K8lwKL/n4cp+pleS5FAdqzKbfXFNJnksR2Xdwx3mp
leS5FLNm2J7H10ryXIq3ehnLortWkedS+P7tHtfXpoo8l+Lh9AA3xaYq8lzV
ng1XY+LNKvJcirPdv2U+qKgiz6WY9LRnXLx+NXkuRYN4aPxVl2ryXArv3pK3
evHV5LkUWyTpUz6+qCbPpXhWxU76vquSPJciX//X8gFmNeS5FNndSnKvB9WQ
51LsGz7jR9yFGvJcilg7H/u0nzXkuWq8Oy8966BXS55L0dZ9bpdop1ryXIrO
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
8s/2+CwkzxVINgicM+6VkDxXwNq1ckT+HSF5rsBs45n3pqvuc8ZzBapmOHpt
SxKS5wqMMefvPhwrJM9VzzOyO7wpTEieKxCmmFIycaWQPFfgruepu29cheS5
av7mVEVPsBWS5wp8DRmVvNFMSP/fV4H67k3TkoYIyXMFPJYbvj7YU0ieK5CY
URPu10ZIniuQx8s8YdAkIM8VWPlItibzp4A8V+DI+7kTRuUKyHMFOvGGGkZn
/+e5qv111X5PL//nuQI/D5bMKEv+z3MFFt8WFVXG/Oe5AiuOd57/ZcN/nqvm
Sxz3+YrXf54rMNY6Jsp/3n+eK3Dq6sMNPaf957kCZe5bnqcZ/+e5Ag1ztbRc
9f7zXIGs1N2Gj9r/57kC515bGPbn8slzBYYNHPZz4m8+ea7Ax4UW2ZPe8slz
Jd528uh7JYtPnivRaZ5x+/cX+eS5Eg7NL1f+OsInz5X4ebnHmKooPnmuxMzH
oVYVq/nkuRIjJn2L/7aET54r8XXyjfpX9nzyXImDPk0zLqvqM8ZzJX5nG62I
Gcwnz5Vwmxs5eEk3PnmuREnA5QWjpDzyXImsLd0eC6p45LkSASuyRz3+wiPP
lfjkHui54zmPPFf1Z+VRHZsbPPJciXtjt3Vod5JHniuxfp5R0/NdPPJciW29
NkZGhfLIcyUWHjHyxAoeea6EcmL9VKUjjzxXwirC5+GzqTzyXIlG4wlRMSN5
5LkS2s86jpyjyyPPlUgedsuhd1seea7E8NTe2/41cMlzJfj6i9zuqepvxnMl
lq7/6HXgDZc8VyKyz1Cj4Dtc8lyJSb/mms0/xyXPlfj8J13T8gCXPFdi3aHO
A8du4ZLnqvX8kS0d4c8lz5Uo3HJQ13ghlzxXraeT+JeZNZc8V8LglXaevQmX
PFd9v2u840p9LnmuhFlXzdx92lzyXIkXvfNuPRFyyHMlrlv3XiH9xyHPldh8
XsyyKeSQ50qka++5kvyEQ54r4X2sVCa4yiHPldhiMSBhxXEOea6EUad9T7/F
cchzJew/nf+6LJRDnitx17brOM4KDnmuRO+5z7oeduKQ50rct9B8yZrOIc+V
2LDV5b3FaA55rkToMK6HsC+HPFcisW7Qq3wtDnmuRExF7cZYPps8V0I3ZY1f
5F82ea6E82blw50FbPJciYvtztw49oRNnishnawd/uQamzxX4tWbZ7P5J9jk
uRK2Ewd4Tt3DJs+VqP4x9/ehcDZ5rvp6SWgb8Uo2ea7EsOzLDWtd2eS5EoNN
23wSW7Pxf4yhjvU=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0.47556250000000005`, 0}, 
     PlotRange -> {{0.499, 1.999}, {0, 25}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.47556250000000005`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0.499, 1.999}, {0, 25}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "omega", "rho", "f0980", "Kstar", "phi", "K0star", "a0980", "f01370", 
       "K11270", "a11260", "f1", "f11510", "K21430", "a21320", "f21270", 
       "f21525", "K11400", "b11235", "h11170", "h11380", "Kstar1410", 
       "rho1465", "omega1419", "phi1680", "Kstar1680", "rho1700", "omega1662",
        "phi1900"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.571589, 0.586483, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.915, 0.3325, 0.2125]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.571589, 0.586483, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.915, 0.3325, 0.2125]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.74936901822569*^9, 3.7493690346468678`*^9}, {
   3.749369105313404*^9, 3.749369123803967*^9}, 3.749369456389307*^9}]
}, Open  ]],

Cell[BoxData["Range"], "Input",
 CellChangeTimes->{{3.749368894999549*^9, 3.749368896357376*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7493642329680977`*^9, 3.749364275509997*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JP2SlybN2nlXLQzMQaBy/Z3y9bK
nNrKYQ+Rv2kfxPlgW3uIFlTfA/uJ5suT/q1LsYeof2y/eP3e+3+sJ9inp4HA
M/uTYqd7F+cdhOp/aS9f+lNCLZ3f4ewZEHhj3+S+LXFv+AGoeR/sOTZIWv9+
uhyq/qO96ep9yqvPzYKa/9leRjTSNOHdRHuI/i/2rlGWX23Cu6D2fbN3PP+c
obK6BWreD/s7lzN3iXU3QM37aV/+wui8XUk11Lzf9ifevig1siuHmvfHnvWZ
091Jf4qh5v2zz1ddcuhmWiEsnBwi85+uZZ6bB1XP4PD3wOaqDRrZUPMZHS4c
urYy0DUDqp/JYc533z9HLqdC7WN2sBVdna6wNxlqHovDXrvUfrUPiVDzWByy
Pfrnz49PgJrH6lB+dVVFDVMc1Dw2h17m7ZG7ZkZDzWN3KF+sv/lteSTUPA4H
wc6rD9smhdsDADrX0Ss=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2f29pYrZvS5g9RP6m
vSFTm/GsnzOg6h7Yn5505vPDt7vsIeof2+9Rvb52F9dt+/Q0EHhm7/x83mIN
H0YHiP6X9h/z5xv2ruF0OHsGBN7Yx7MHS3Of/gg174P9Dm6TO5ucH0Lt+2hv
+enRq+2GV6Hmf7Yv5g/wuDbxrD1E/xf7iDPXHTOcj0Ht+2ZvZbtk8fw5B6Hm
/bBXn16UcuvKHqh5P+23fr27aa/BDqh5v+2rS+907V+7BWreH3vN1PgN3e83
Qs37Zy9/sMfJvWo9LFwcetV8YwUfr4aqZ3Dw+rdJIP35Cqj5jA43PnxkskxZ
BtXP5JCUMmG2rcMSqH3MDiZqjr8OZCyCmsfisHP27PYF5xdAzWNxCJ/1Tfjz
5XlQ81gdFgccuN4TNwdqHptDiDq3TKvhLKh57A6ctgwTfzjC4oPDQWo190nu
9mn2ACYbz3E=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2X8v3ncnEo9EeIn/T
PqBP+8r9U1Oh6h7Y+3bX2yRrLbKHqH9sv0Tbzji7cJ19ehoIPLOv4Og/OsV/
D1T/S3vJ5yKhDe0X7M+eAYE39msc8lctPPkBat4H+/vXPqx98JDPAaL+o/0M
P5eLJq8+Q83/bO84T1xw15cnUP1f7C9PF1mlc/km1L5v9jdLHG7Ul1+EmvfD
fj7PmvX96ieh9v+09/llvtzp8yGoeb/tu47lnjvavRdq3h/7srt3ru1fsR1q
3j97pvlL3Z9Hb4aFi0Nb3Gbnx/IboOoZHAJv+eTNcl4NNZ/RYf90A9274cuh
+pkcSjZv2d1gsgRqH7PDj+360vuXL4Sax+Kg7nRHbqXMfKh5LA7Jk/dU5syd
DTWP1SHx3LlJfGtmQM1jcwh7FnXBXGca1Dx2hw+bwsU9OaZAzeNwWLfgXHin
/iR7AKf20Z0=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGbPwmU/l1totj1E/0v77oPh8pfT7tifPQMCb+wn5ZrPlMtQdYDo+mD/
qcrt+Aurt1D1H+0X7GOyj516zR5i/mf771Jc3MusT0H1f7H3+7TQ6MOHg/YQ
+77Zlyr93ae1YxfUHT/sYwOP72D/tAVq3k/7oOCJbMf+boCa99uey67S0cZh
DdS8P/ZbZIX4at8sh5r3z573nexEg74lMH853HAO/3ny3kKoegaH5Y8VoiYk
zIeaz+iw9B5/4+5js6H6mRz+v9o948/hGVD7mB1+zj57KtZiGtQ8Fgez5OTZ
qjxToOaxOPw0Z/WM1p0ENY/VQeDfsX6VvglQ89gcHBTFP4a490HNY3dYuKu4
c+Wpbqh5HA5Vp1Z+qJnRaQ8AWa291w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA3tuztDi
tQpn7CDqH9vXHGOJb5r21S49DQSe2dsXL5qjISphD9H/0t774ZS6xFvW9mfP
gMAbe0O25D/zYjOg5n6wnyYrpT279TFU/Ud7RqUr1VPuXLeHmP/ZXlBMZEe9
+EGo/i/23NP37GJ8u8keYt83e12TvRfe966AmvfD/rvzovOnohdCzftpH1vM
++TZ+5lQ837b33MT/vBXdQrUvD/2lunMentlJ0DN+2e/o2DjpxMJXTB/O5wz
4Jwt/bcVqp7BIZj3lFf0nCao+YwOS+r7go68qIfqZ3Jw+W0ncnt5NdQ+ZofF
N2T5o40qoOaxOHCIdlX1RpRCzWNxcK5kEvj1vQhqHqtD7J16nRO3CqDmsTnk
LOOcHtGWBzWP3SHwtkbovFnZUPM4HCb/vB+wQyTTHgAGksBs
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGZfZyH3y+T1YnuI/pf2t66umsw1ebP92TMg8MZe6dM5MTa1A1B9H+xP
iZ8zOuhxCqr+o726v/zsR3HX7CHmf7bfKNbu/mjfE6j+L/ZqAcs5bfm+2kPs
+2bfl3+kRzKCyQFi3g971sKo84rW/6Dm/bSX4j6ZIdL2Hmreb/uHH66XnmN/
CDXvj3313ps87hOvQM37Z38+OzPtk8FpmL8cuiUS9EvMDkPVMziI/Q2zFWnf
AzWf0eHTiUM7FP5thepncni2ncfFpGwj1D5mB+UFGY8+J6+BmsfiwDRvd0pU
+3KoeSwO23irj7ZfgIUXq8MbCxPd7y8XQM1jc3CetbRFw2wu1Dx2hw8TCwIb
qmZCzeNw0F2tIHsma5o9AA/yvLg=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGa/j3HewcNTl9pD9L+0T/nTkvfU74L92TMg8Ma+YekFVdaQL1B9H+yj
3iVpKr8UcYCo/2g/d+mGx1znvtpDzP9sb3EwX0ZY6BFU/xf7g2/nLwtZe9ke
Yt83e9ffxbPOnzkBNe+HfWn2iTuJYgeh9v+0Xy/1KjicYSfUvN/2e0Lzck0k
NkPN+2O/9NK3vXsV1kHN+2c/X3nprCsJK2D+ckgvb2fdprgEqp7B4fHmqCWn
ny+Ams/ocPe5+mnW03Og+pkcpufe6nG9MANqH7OD4/EnqZtnTYWax+Igc2dO
fOOvSVDzWBxeF5zU7j07AWoeq0OtytWPd7/2Qs1jc/htKO7n/KALah67w6dy
JW4Puw6oeRwOmtO3hOX8arUHAM4LxPU=
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2v/Tbo6dcN9geIn/T
/veOR+E6PalQdQ/sE4x1GN1u59lD1D+2P+g3691H7en26Wkg8Mz+yeLpS9mn
LoXqf2m/01NEetXfDfZnz4DAG/voRQfLnm/YBTXvg732xYkBJnnHoeo/2t85
sObKlf7rUPM/28fG3T/BtPcVVP8X+9X8HrL7pJgcIPZ9s19w4XmcUB6HA8S8
H/a3zLIdvvF9gZr3057r2vcA596HUPN+27O+WL3l3pNLUPP+2B9a5fQuM/o4
1P3/7PW1UlZFz98PCxeHfaEn+1jPbIOqZ3DwZZmgFGqyEWo+o8PRTI7Fdo9W
QfUzOdgU/rF6PWUp1D5mh2eXTmx6sGUh1DwWh10yXDdvT54LNY/FQfKNzF02
4ZlQ81gdtNLC7M62TYWax+bAMGFyQf+6SVDz2B0q/7X2bIydADWPwyEnMfuk
6cseewDwTdE0
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGZ/yfWSW5f0YzuI/pf2GXW/Jzvv0bQ/ewYE3tjL9T9qrTqfCtX3wX69
ootg//2J9hD1H+3XLbPoeVF5xB5i/md78TMuZeXe36D6v9iLuGgy8rTxO0Ds
+2Z/uYNP5EfcJ6h5P+yjz28J/3L/IdS8n/a/3oW12lddhZr3277KpLal99EZ
qHl/7OujX7m9uHbEHmLeP3tuU6VM9v79MH85qOVHTZx1cAdUPYPDFK5H0hxf
NkPNZ3RomOqQ5p+3AaqfyeHA8x+PaztXQ+1jdpA4vcWoNHM51DwWh54D9U6K
akug5rE41O6YsSGtbSHUPFaHNtFrZuqH50HNY3P4KZm9kct8NtQ8dodGVe2H
YvYzoOZxOMRXGG/ctWeqPQCJV70T
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JP2kfu1ztmy5tqbGIPAZfvaVaxb
G45X2UPkb9ov3+B1+c/xJqi+B/bXWPNnhBV0Q9U/ti8wDLtsLTPNPj0NBJ7Z
57c+Xrvr4mKo/pf2W1kNN8Xyb7U/ewYE3tiLS5lyH0o9CzXvg/3W+09sdSY8
gar/aM/x7sN8e7uvUPM/26/+f/VL6c4/UP1f7JurLFabXfgOte+bvTV/5sEX
e99Dzfthf62gxs/7Jcy8n/aJJlPYVM/egZr3237Vi5Pzf527AjXvj/3hqOt/
kgPPQ837Z++bU7a9NvYELJwcdky7xK9TcRiqnsHhm3yt446z+6HmMzqsrz/i
U1a8C6qfyUFhmnSjUtg2qH3MDtf3VniWSW+GmsfioORwKI61fQPUPBaHFL57
Sen31kDNY3VwtHi11Sh3JdQ8Ngcvu4drvvUvg5rH7jBjXrlUtvoSqHkcDjXL
/12RlVlkDwApUtV3
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy271i9TFOMq9YOIn/T
PuLd2kOaeifsIKoe2Nu8FZSxkX5uB1H/2J7FXP/dBw1h+/Q0EHhm//XwRo+n
3yztIfpf2juEbtNP7gm1P3sGBN7Y19Q3i4YuLYba+8G+U/fpI+vqiVD1H+2n
s+8x+nV9gz3E/M/2e+O2Hl226Q5U/xd7jkW3H21NUnCA2PfNvvea+at/u69C
zfthH35O+pBp6D6oeT/tw9d2NzVnw8z7bW95Nfz7rtKlUPP+2Cv1rn+y/fM8
qPv/2c9uab7He246LFwcirxCsrdJTYaqZ3BgnWPf5zCtH2o+o0P684gXV7d1
QfUzOegmT/qm+bcNah+zw77dn7bv5muBmsfiYMaf8jhhUyPUPBYHuarQg+tb
6qHmsTpoT77cVepZAzWPzWFDXuXNor5KqHnsDvfncJ/nsiyHmsfhsM+CybrE
tNQeAJzMzgQ=
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeIam/yWcf/YMCLxBM+8DmvqPaOZ/tg+4fdJc6Xa5PUT/F3s5k2MPn3Jt
tofY983eWMeaR7z4O1TfD3uP6imHv6xhdICY99NerFE/tY3juz3EvN/2K41r
jzu8eAs174/9QdP9Vi7Tn0DN+2fv9n66cNejuzB3OPQqu+k6z74GVc/gkGgh
evLkqov2EPMZHXrkBGvMw89A9TM5FNqZKPqaH4fax+wQljnrg3fUYah5LA5b
gy9fuBJ3AGoei0PwMh8BPu49UPNYHW693MFf7r4Dah6bw+Q7/EUXzLdCzWN3
2BExv05j0yaoeRwOfau+SQjM2GAPANahp/Q=
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGbPdvjPRYXeV3YQ/S/thRkcJWXMte3PngGBN/ZBe0INF2UFQfV9sO8P
2Xf+67VCe4j6j/aFbQs1ax/220PM/2wvp+W9YQ3PBqj+L/aV5+1MHudct4fY
980+win39a1eQQeIeT/s7/Yu73p//z/UvJ/2ii/6t1W1PIea99ueTblJ6ozu
bah5f+znxxbPVdp6CWreP/sPCTsZvnCcgfnLQd47fXoG3zGoegYH/pXXjN6/
OAg1n9Eh2+dH5121fVD9TA5X1m28WSq3E2ofs8NZtgssM+u3Qs1jcci7pXjL
ZtYmqHksDkl/HnOw2W+AmsfqcGWbPcPkWWug5rE53OZQYC2JXgk1j92haM/F
eS3zlkHN43D4OstDX8NriT0AoLS96g==
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA/sAvZbf
HOwz7SDqH9vffiP1IDHysV16Ggg8s2+skgha8lfIHqL/pb2S7a+z+p629mfP
gMAb+37p2xvtqpKh5n6w792c93GqZQdU/Ud7GxeXV0qRG+wh5n+2f3r3oHVc
8j2o/i/2ink/py53EXGA2PfN3lumaaWT9m+oeT/sdwe/8mUvfgY176c9k+xB
Rk7p21DzftszdUxS3Sh9GWreH/usebUnc8XO2kPM+2df3b6cPUbpOMzfDo8m
zFFgfXsIqp7BIURitb7stP1Q8xkd5ttbm804uAuqn8nh1Kd7smoftkHtY3b4
67f5xcE7m6HmsTgILJlbxRO5EWoei0N/fNuq8o51UPNYHXiaXk225F0NNY/N
oZo7/SyL7AqoeewO7x1nfT4/ZynUPA6H6DbJsPyKxfYAcQbA7g==
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2P3w49q3RiYV2EPmb
9tvZLPgnZLJD1T2wjyvYNPtOoZE9RP1j+/TuTZfl6gPt09NA4Jm9rnrMhXj1
XHuI/pf2JR9S7RZZt9mfPQMCb+zvfp139XjIAqh5H+x13qRXxPLshKr/aM/6
tnSV3b7rUPM/239wtLG6qvgPqv+L/TPehTo5XKwOEPu+2e/ccOtFNPMnqHk/
7PnXiX8TePQYat5P+/W8lV0TW25BzfttX64iNufOtMtQ8/7Yn9i94J3vrnNQ
9/+zNw7jkPnNAQ8XB4vZlmzb3x2Bqmdw+G572WjXlYNQ8xkdvoTsCzM+tw+q
n8mBeaqW8ctnu6D2MTs80n7fFbl5O9Q8FofPbxUT6jm2Qs1jcdCutJwQemIT
1DxWhw1HNvzSvrsBah6bg2hdxvQDueug5rE7vBP+UOk1aTXUPA6HQt2H38+J
rLQHANQg0DA=
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2L8t4+jfzrJgdRP6m
vdpd2Ud9a2vsIKoe2PObzbXIj19qB1H/2D7rcqvGx2mH7NLTQOCZ/cL1jV3C
825C9b+0v3l5Y720y3u7s2dA4I39sczZeSdeMkLt/WC/8qqCweHjIvYQ9R/t
fe7ssLnkHGoPMf+zfb73f/X9xq32EP1f7BeUnTknkL7WHmLfN/uU6o1nHwVe
h5r3w16rY1HDdE0xB4h5P+1f3UyPdjj/B2reb/u2ay/+aqY+gpr3x15K1UHu
k9YVqHn/7P/u25Avr3YaFi4OpZ+8bQr0jkDVMzgITb7JJ7tzP9S9jA4JQXdf
/zu/E6qfySHiQph4UMNWqH3MDkZLFuVUm2+CmsfiECSyM/C063qoeSwOzNyt
2doKq6HmsTpM9tR667FnOdQ8NofcpxYH2d8ugZrH7vDvvYWXzaRFUPM4HOpu
VbywnrLAHgDjBc9E
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGa/Zc38EEPfGjuI/pf2W2M1P9nIStmfPQMCb+znvNwUO40vDqrvg73x
vHefFZT67CHqP9pzLuyzjq44aA8x/7O9dm/RMX3Ju1D9X+zTu6QfMD3/aQ+x
75u9vLm9+AFRfgeIeT/sLzle6C5l/w0176e9Vcq6TXNMnkHN+22v9OroJqHS
61Dz/tiX3xZ3mvn7DNS8f/aWWzb1Tt5zGOYvh9gzTO/61++BqmdwKDKYXdh/
ZSvUfEaH1rMX2xsMN0L1MzlYqMWaNJ9fDbWP2eGiSo3a3h/LoOaxONz7YtK+
13cx1DwWB2ZJv4kVJQug5rE6SPf7TT2RMgdqHpvDBD6bGVkHZkDNY3fw6GfL
8Dw6FWoeh0P+j7dK03wm2wMAnu67jA==
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2j6v6xq77dYMdRP6m
Pcebm7u1l7+1g6h6YP+tJ3v3lGXs9hD1j+0dX7BdX88iZ5+eBgLP7KfN3tiw
+KSRPUT/S/tm7rZkXhlv+7NnQOCNvYa6g5h6YTnU3g/29r3TJ57cehKq/qO9
r4DflhTpV1DzP9uv9JWI/X2EzwGi/4v9aoU7f7UXMDtA7Ptmf2ZRqMzeqNdQ
837Yy23JkYwOvA0176e9Ts9nbdXaC1DzftsfurTvS57eMah7/tibrRb68fb3
fqj7/9lrhBf7mBvvgIWLQ8E1vwu/f2yCqmdwmHrgz9qYSeug5jM6JNjyXgjS
XgnVz+TwSpGp8LjYUqh9zA42jVnWfO8WQs1jcVjA1dS0/O48qHksDkcsWZN9
bs6CmsfqMMHzZ/30idOh5rE5WK7ey/3h1hSoeewO3169qVozdRLUPA4Hv8cb
FkWvmmAPACDTzYI=
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA/vgp7d3
srnG2EPUP7ZftNjeTc6xwT49DQSe2Rt9uCp6LmqmPUT/S/uTadqluis32589
AwJv7C0cnA9ph12CmvvB3uKVL9/rhHdQ9R/t3Vf+mf1j+l+o+Z/ty10844oP
/IHq/2KvsIv9dPefT1D7vtmLcFlzbzJ4ATXvh73xzF4XUfcHUPN+2rcseCQx
y/w61Lzf9nKixkz5MReh5v2xd9C8L37p4ymoef/slyyZ/nJCx1GYvx1eL9/o
OWnuQah6BoeS01GqVgl7oeYzOvxSZblq/mgHVD+TQ8dvZxu5mK1Q+5gdvCa0
hXJ3b4Kax+Kw9ahtoIfjBqh5LA6HLyVxVu9dAzWP1eFPalnpyhkroeaxOdxS
Za+0/LQMah67g0jDBYHLG5ZAzeNwCLVbf8To4CJ7AExLxEM=
         "]]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeIam/yWcf/YMCLxBM+8DmvqPaOZ/tv/Uct12yo8ee4j+L/YTOkrc90fd
sofY983+8iOTpK0Ggg4QXT/su666HK/4/ckeYt5P+8pju6Mc9j6xh5j3275a
5dkl2e+3oOb9sb+XYed/ReEy1Lx/9pON2SuvrDwDc4dDj/BNxaqAY1D1DA5X
Pu7ZXvjgINR8Roclsx1+PPHaC9XP5BC0t8vnT/4OqH3MDkcbz24/tnEL1DwW
B+erGxmc9m+Emsfi4DSrpeLZkXVQ81gdOP87f0x7swpqHpuD9FHblooDy6Hm
sTuc66n6LCC9FGoeh8Ny4fAvYg8W2QMAzbeztA==
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGbPZj1j26ZLNvYQ/S/tLVVvm/hWptifPQMCb+yrktQ8Y4Lqofo+2Pe9
S0q9qz0Vqv6jPYdbzKF54RvtIeZ/tu9mNF50MvgiVP8X+9PS2RdesH+2h9j3
zd7V4K3dkSYWB4h5P+ynrbb8nG31DWreT/vH6ybyBtx5DjXvt32B0ItTk6fd
g5r3x37659teJ79chZr3zz5F/dWCI88uwPzl8P2n3IPrNqeh6hkc2ORF33As
PwY1n9HBOStl1hq3w1D9TA5FP3+xx244ALWP2eHx7wm1Ml57oeaxOHB8Ff5/
/9dOqHksDq+z96xos98ONY/VYSXPgwefv2yBmsfmoO55MDSVaTPUPHYH1uzO
jgehG6HmcTgIbPOayXtkvT0AfADCcA==
         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA/ucF5pZ
6rpFdhD1j+3zbaOUfz/1sk9PA4Fn9tYf9uWlCpTaQ/S/tJ+r7cBpMqHP/uwZ
EHhjP7n69o7OAwuh5n6wT1BrDfcQ2QxV/9F+zszAk0WZR+wh5n+2Zy5vPZD+
5BpU/xf7YxYqylX+r6H2fbN/XLhGZJ/YH6h5P+z35E97Y/P9N9S8n/Y1p3ZF
fjvxAWreb/uQyWKbJU2fQM37Y996I8r26aVbUPP+2S8N15t4JBAeDg5LL2+K
PdtxFqqewWGLwO4G90nHoeYzOpRbMuadzTkM1c/ksH6XDrtt+gGofcwOIuL3
TGVs9kDNY3EQqJDct3j1Dqh5LA5aOxQjMi9thZrH6iDf835Cc/1mqHlsDiyt
MbW7J26EmsfuIHJf4OW8x+uh5nE4bHqr/4pXbq09AC1/xW0=
         "]]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA/ujxW9a
znY8tIOof2zflrVWvotbzD49DQSe2aep2YUomVvaQ/S/tDc16BXb9SrM/uwZ
EHhjL8/lw/BrYgnU3A/2dXM8Sw6VTIaq/2ifPlV0dYzYRnuI+Z/t76l8zV7D
fg6q/4v90S6LTK6891D7vtlvSs1XqD/G5QAx74d98wv/pg0rf0PN+2lv8u13
cl35C6h5v+1LhJ6W99ncgZr3xz72przQf97LUPP+2e9pj96xXf8MzN8OXmH6
88PEj0HVMzgcK06V9GY8BDWf0eFDge/z+br7oPqZHP45Nt+bfnEn1D5mh0Zt
8w7twm1Q81gcrk+6zbrzwGaoeSwOavMKhUUmbISax+pgdi3iy7rmNVDz2Bxi
eDc49OSvgZrH7qBXFvHD68pKqHkcDllCS8TSpi63BwCdgcGo
         "]]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGb/Sldl/YFZDPYQ/S/tt+iu2Z60RdX+7BkQeGOfOrVZpknNFqrvg73F
9RvPDgsGQNV/tLdfKqZ1RCDFHmL+Z/tXC3k7fleUQ/V/sWd7JDArNLTHHmLf
N/v7Mx9M101YBjXvh32p2Mqa4qbzUPN+2kftKst8HP0Lat5v+9XdE+ek7udy
gJj3x96uclHPYY7PUPP+2W+NPX74/4NHMH852Bp8vTh783Wo/QwOEt/TNBfc
uAA1n9Fhl+L8HakHT0L1Mzn4Fk4Wyl94BGofs0Ni+ZqPjwQOQs1jcbCy5nxy
+tkeqHksDql/4xcufLEDah6rw8muZXfFj2yFmsfmsKDu0edE681Q89gdeE3m
n++phPmXw8HpQ5bjnwvr7AFBvMOm
         "]]}, {
        Hue[0.3356314599949535, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGbPennZ5x0ORvYQ/S/tbU4x/+q4F25/9gwIvLFf/8530mf9Aqi+D/Yu
u16K2fI2QdV/tC95nrpMfsFke4j5n+1Zn5dWyUotg+r/Yl8b/Oakhtwue4h9
3+wXO5kxf1twAWreD/vpgaXXXsY/g5r30/6U1P6iRyd+Qs37bX+kVee938bf
UPP+2P878HzOY72PUPP+2fvV5PWLWj+F+ctB30eIae2VO1D1DA68IZYZjlpX
oeYzOnw7eGrf1rwLUP1MDtyKulW/+09B7WN2+G7+6vp9mWNQ81gcpGQnvtO/
fAhqHosD2xyJm81+B6DmsTqYTgi6PXPJHqh5bA4lyUn/Qwp2Qs1jdxBkjpqb
cHYb1DwOhwNyzjFvZ2yxBwC24MDk
         "]]}, {
        Hue[0.5716994374947433, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFy2n8SYnzsl76IdRP6m
ffIHa0ZGTR6ougf26QxN03/NUbaHqH9sn+6zYvXL1Rb26Wkg8Mze8MZG+Rvv
/e0h+l/aC/UcZ9ZmTLQ/ewYE3tjzfk+4dWF2AdS8D/Y7NQIn3uFrgKr/aF+Q
Me3I8wUToOZ/tr/14uGSgyGLoPq/2B/YM/WZw8ItUPu+2Vt8KpyqE38Cat4P
+0NzeGZM4X8ANe+n/bFKnY3qm79DzfttryGtalWqy+IAMe+PffHe54dqmr9B
zftnL7mvyD5M9jksXBy4NoT46n65DbWfwaHxaLXybrHLUPMZHbo/R77eaH8G
qp/JQSZCu22H0DGofcwOZy78dtJ4exBqHouDc2cW+6Eve6HmsTh48tzOkpu8
E2oeq8P0Xx8tkk22Qc1jc+BZXn+SvWsz1Dx2B7GD3Cd/J26EmsfhMHvbCfnZ
puvtAZyizIw=
         "]]}, {
        Hue[0.8077674149945295, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKA3uN9KrT
mZGH7SDqH9sfC/nl9Eb+u116Ggg8szebs1Jv1xUJe4j+l/axJzM5DC+Y2J89
AwJv7MUU2rImnA6AmvvB/q3kagXWGdlQ9R/tZ1ycMEWhqs0eYv5ne5HTVw5w
xiyC6v9ir9dQ+iVyw057iH3f7I985mie1XkRat4P+zv2iaZWyi+h5v2051xb
6jS36B/UvN/2Xmp6s61l/0LN+2NfzbPc7HnEB6h5/+w33lSXjGx+DPO3Qxjf
X/GdOreg6hkc/ujc33ZC7jLUfEaHyYpGWy8tOAvVz+Tgt8XOY8fb41D7mB0U
tOd6+r4+DDWPxeF7+Y3S6d8OQM1jcZDe1/t6WfpeqHmsDu99T6Zdu78Dah6b
Q/ZMxaTcH9ug5rE7pLFURXjO3gI1j8Nhxm7deJOFm+wBgRfGKw==
         "]]}, {
        Hue[0.04383539249432289, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ5mzQSBnfao/JNwvokxCFxGk79pj2rKAzT1j+H8
9DQQeGYvPOfPfYf7rPYQ/S/t28TTVkQ3adufPQMCb+wPHdhyX26eI1TfB/t5
zUt1tFyCoOo/2v8v6Tiuui7FHmL+Z/uHPexZB7JKofq/2K+Z0a4f29RqD7Hv
m73a0VUsVsEzoOb9sK8xPfMkInIz1Lyf9rXfP4lnfzwDNe+3/XTFvCt/HjyG
mvfH/odepdQm5a9Q8/7ZT/Qvyd9p/h3mL4eQ0gXXJhl+gKpncFA5MWm/54Kn
UPMZHSQ9j7mn7bgH1c/koDBv3+FPxteh9jE7HDI6ViCYcAlqHovDC1sF4y61
c1DzWBxij8tYqqafhJrH6uAkYfQs/MZRqHlsDm7u+7e+ETsMNY/dQV/L6xnr
I1g8cjhsfp65vdZqnz0AxB++yQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 10.703358448043932`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 3.}, {0, 10.703358448043932`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "omega", "rho", "f0980", "Kstar", "phi", "K0star", "a0980", "f01370", 
       "K11270", "a11260", "f1", "f11510", "K21430", "a21320", "f21270", 
       "f21525", "K11400", "b11235", "h11170", "h11380", "Kstar1410", 
       "rho1465", "omega1419", "phi1680", "Kstar1680", "rho1700", "omega1662",
        "phi1900"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7493642540421267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"p0Mean", "[", 
    RowBox[{"eCM", ",", 
     RowBox[{"{", 
      RowBox[{"Ka", ",", "Ka"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"eCM", ",", "0.", ",", "4."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749363049528866*^9, 3.749363058572514*^9}, {
  3.7493630978530197`*^9, 3.74936310680365*^9}, {3.749363141099409*^9, 
  3.7493631972418823`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF0Xs01HkfB/Bxv/t1QU2PZWl4WCybS1vk882SbKwNhU0q1IaSVVoisS6r
RhpSZLE0sZJK7onGbd17MK4xEcmtYX4z7ref7TnneWY+53zO+7z++5z3R83j
ksNZYRKJFP15/5vfn53srJ4KNCf9byaeHfcYJjvB/60k0xNfRPbi++t9Ctnp
5Ct87+8wLEgkR/Fd/Ued8W1yEt+REdSgW+RHfHtd4ZBvkov5lkyyycK59XyX
deyxtlZp59slkjVQR+3m+9KLy3op82/55tF6m4SEhvluqmlgtJuN8u0dbCPn
yh7ju0Zqz2b+xQm+c+j1xC6Nab6RUtVDx2dsvkXvKV6yKhe4abuf6d5age23
qnbv6hXYXTZCbHRD4BBhq/P+djN8l8626d1mC3ztosZq2KLA5uzrDf6kWb7/
nvr6lJOCwN1jNNq/zATmDTjNPaYKrNfIKm/4iiP436zvDM1YYJLimtoJJHC3
B5nKOSZwKHHs5M4Igc9pfEwYpQr8o+2Vhvz7AlNSE/UP5gssX6PmJVMm8PJE
QUpPjcBtxu1CPn0Cl7q5mxiNciCIErb++ncqZEbO+BBsDkhXUjsuZaXDrbzQ
P5uWOHCqBd7FttKhYlLMx0YIB0lzo1685i/QD7WLeiaOw2DTU9NxzSfwCLuX
sV0WBxuZ/pRcnWdAprPKg7bioM0pGXYLLIB4E0rXOyUcNrYllv674gWItPjO
WCjjMP9W0jZ5qhCCThZJ5KrhEB0gm3FVohg8oizMAnRxCEhrzBUhl0LfjlvH
+77BYUAoOODaljKwfdLpb7YXh1dh28MPE2VgzDydLW6BA82sUV2+5iXknc1l
+Frj8FhOsy0vuQJUVjhvO2xxmGxjJaz9/Aokv7wh/4czDm5iQvXdS5XAupj+
q/5FHHQzDE4/HWZAlNSAjUsKDthBbc3k6FpYSVPzqkrH4X6cy50TzFrwM/AO
U6fjsKAdt1NUpQ5cnJcL2U9xGK2iBxkV1oFutpJyRB0OfVrXSdbt9dCNHGcf
z+Jw7MF2WvWHBlj980N64RwOBe4plK2qjaC2ednu1TIO9pB3geXaCH5VSflt
wlywlg6/znvTCBL7e304SlyoiBtnhRU0wX5D1wkj4MJu2lJA8ZkWyNQ49Z5x
h/v5LpkS/ag3cEHal9ljwAPVhzG9B6mdkFOlVPq9CQ9mNKLM+7M6Ydi/9gHD
lAdPGN5JLuWd4NBHPvP4EA8+FWcd3/mxE7591MQJdePBSb3pD2kHmCBqrilH
ieUBQ0V/c2WaCWm/jFgHDPOgWMfEufzbbmjtd66Sj58D4cu59rF5veB4yGVk
bGweKrTCjzSLD4JJJtU5k7II8k7X/UIYQ/CeuNt9/sYSaLVrMjMsR+CjTTtd
qW4ZWg+n7x+dG4WCB8PBnWqr4O+YncUuGYPsWJGb2tfW4PZRXNHGYxwWPH+a
PvdqHUyXFVxdJydAxjLG4cUOAkxDYgbbYqYgdMtH2RG3TdhbdDxRV+QTyL7W
IfXZkVB4V+qHDwFsOHDVfqNulYQSLmu3stZnIO1RHH13mhCyCOwfjT7PAfdj
Rm+kjggj/2qjxMu/4lDSc/bu60VhxGOZ0HyNubCvrUB4/L4ICpt5LWP/kQtf
Wp1buGspin7LSb3X9pAHxkbGCcXjosgzfNKH7jAHw7zbzfRoMbSQ9F2dOjEH
bMOj0eQ94mhjTSHbuWweND/pTQt1iaOlDLWfvTwXoJ4SyPSPkEBmcuFc7S8W
4U53j6cDRRLN5A99QWpZBI5jdYJwvSQ6E6+RNBmwBIXHFL/b94sUqje8UZKg
vQz0N5Hpo9ukkUuyjnRi1zIsNbqFbKuVRiWR3RZHqSvwPoGxsMVPBhkol1tb
wSosdpqSf5OXRdyHz83+Hv/ce5J6dXClLJo5l3JELG0NdrxR3zLmLodMwt6n
TVmug2NP/royIYcWyt5NGU6vA+9U1gVWnjwKV2BcO5C+AYzTz6PlbTEU66ZF
lrUkoKL9wpGhHzDUPKXrOX+IgFLzr7Y+O4qh38/Sclk2BOQrZ6fZOWPIPzRY
46k9Aan9qUVxHhgaOL4yYXeCgMAfY0akgzEkHtVHiw8gQAedPCCRg6EfjL4J
kc0iQPP5LpG+XAxdTcwwnKcToK7S35TzBEM/xSRNDOYQsHPdwenQCwx1Waha
PMknQLz8sG90JYbCQrpqbMoJGNE3eiDShSGryg52dDsBrAyue1cPhqSq3N0v
Mgnol3tOofdjCHnfbHXqIeA/n7QLLIYwVFL+MmX3IAGVf6k2RkxhqKM5l6ge
J6Bc6V3cUTaG8hjmdrlTBBRFpzqocTAkZB6SfIdNQJ6n4lD1PIZaXrJV3HkE
ZDOZdNoSht5pUdysFgjIPEjzPr2KoVIRiXu6ywSkFdjpG2xgaD3ifvP2NQKS
VWUWNjcx9H6ga2V1g4B/ANH8j/4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 4.}, {0., 1.9370069273842816`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.749363058994022*^9, {3.7493631022924767`*^9, 3.749363107315777*^9}, {
   3.74936314159409*^9, 3.749363149275569*^9}, {3.749363179841996*^9, 
   3.7493631977054663`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"f0980", ",", "m"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0.", ",", "4."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749361690888205*^9, 3.7493617118542557`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"m\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"m\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9827119361764769`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"7.107444788827107`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.0015811260277765332`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7493617126252527`*^9, 3.749363298183626*^9, 
  3.749363636692607*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
8f97GO329svaFLn4F2h/hvg=
     "]], LineBox[CompressedData["
1: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
7Cqn438Atjmk
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 4.}, {0., 0.5031509685823274}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749361321714467*^9, 3.7493613326735373`*^9}, {
   3.749361373647368*^9, 3.749361387750386*^9}, {3.749361439010182*^9, 
   3.749361465936851*^9}, {3.749361685249934*^9, 3.749361722847353*^9}, 
   3.7493633015535183`*^9, 3.7493636704856157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.749204289572967*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN1nk0Vl3fB3CR2a0kJCVEoR5lTKXzlcwRqcyVJEmRmUI3yVARGUqGSEUI
0UCRRK6EQkIqQ8aMdc51GcP1eNd61+vd/5z1WWufvb97/87e60janzc7xcrC
wsK1jIXlf54qbhfZWVj+gOV/m7PMZOreZUu+981dLYR1yfw6Z05zsC/5l6jl
Bz6eJSdXqUaJrl4yqwi5Wll2yU2vT0s7mi45zYgnNDpryVdu7dxFTS95/2k9
e8XZJa9SP3LN7e//e7/d7dv4/JJfrXt0cYSV/D//yRAu7eNbsm0BfXebxJI3
Bi1zEJZa8rDpisgjG5fsS8n/aJZZcqyqfUCj/JJrShvLPqgsOTqys49Lbcnm
R0f59HcseZ3CrEq4Ogl1y6kX1ofb9/QucB6l7SQh1JpWFKfKSuQ0CIWy7yZh
zHODXVBLlHBL35inrUGiw8JmhJdbntjhrtgSsofEofyNE+WNasTCXsxXEiRC
Xg/uu8qrRVSvMpZh1STxwMT20sVEQyKy19p4714SqpfyvU6lmBFmz5y8g7RI
5N22GG3ktiJEQ31S3+wjwdU7vznykB3RfeRK9YI2idmbHW9YqxyIzE2xY3t0
SewZ6rT59v0M4TKVJhSoR8JCjiFokXmeUKnJ21OmT4JeyxFJCHkSLK6VHsKG
JKIC06Iv8/oSdYJtWW77Sfj+I6jj4edP3Ho58qPWiARvTVulw/Ygwv44yyqZ
AySm9zztje+7TCiwC+n9a0JCjtoWzP89lJjJkQtoNyXROxQgyCd8lYiZNBuI
OkTC/a6g4WbFGMI25bTYr8MkMn8ZWYzvjiU2awWYapkvOma14V6XeIIajAlN
sSCxu1KsXI52iyiPevhq0nJx/nf1tvl6d4hryq9+m1qTKG3LFGumkokj7Z+k
c21I6LOv97pTc5cYlZ6+cfwYie+nhWpZAzKIklq+dy+Pk/h3Mvp9k9wDIsRN
ckbwBIlBi+DRofGHxNoyw5M1J0lUpXUp91VkEwMnjidKnSIxZpBfUvoplyjk
9PoY4EjiTNQunfcTeYT+odQdimdI1IYrcRfoFxKrZwrPXXcmoXywpuNcSBHR
dZd2r//sYj0FG2Sf1z0lfIZ/8ya5ksjNLOz6HPqCeBCs1c3qRcIq2KiuOLOM
cNtsIXTUm8Qpt6AFHC4ndn88a1jsQyLO6URuPFcF8XlNwrOzF0gIRNVOsnW8
Je6WZw9VXyQh25UQrd5cSZxxKBeXCCAR+kH1yc2mKoLlyWDEl0sk1m/UZkgP
VhP1R+ZeKwSR0BRIfZq4QCNu/11Jjwgm8Y7PXeWBeA2hoLfr6J4rJJql1A9P
+NUStp2RiplXSdh4CiZk3GkgZK/cc2S5TqL+061Y/4BGgi73Itk6ksSt8g37
+7Y3Ede8u9hXRJPI4mZsk3/0mSjhU/rmG0+inKfhusjnFuJKke6KzwkkDP2u
yuhktxImljbaW2+T6DQJc7wf2kYM3L+S331n8byNds7KH2gnhHa3XTZIIxFk
6+k4uaGDqBckUiPTF9d7dN3uxpWdxJXRB8UN90jEFD3ljeXoIhipHqNHHpBI
cD8lcimom/jCwm9un01Cbe8BG8s7PURku5fbwxwS3GSzMdemXkK76Pu1X7kk
wi9O/rR+3ks8O5n9xjWfxEh5iRnzex8RR9OW839KQqN8zGjIYJAwTMvdV/6M
RKSQhIbZ6CDB6rfq2LIXJOZikgsjb/4iPOS6Y8NLSPic/1gS1TdEmEX6z8W9
JgFdKe1TeaOEgFlRw+P3i/UxDnxYd5okauRFh3/XkFgeplY33kgSQWxBy5Vr
SZR9mVqTs5si/jwz3vmyngTnqX8lJoToRKPIUEZ1E4mmDPmX2zsZRHTHBp/O
74vjE6UZXW+mCd0XYTGSHSSGtjsnj+2bIRZujOU4dC7eTyPbxqs+zBCumqVd
w92L31es8ceWb7PEgfvmBlP9i/eHwcYvvavmiX/ORK1b+YeEonVyTO44C2qF
/+5zJRf7mypfCNJdhrB3TmfrqcX6Hme3upS2DCwS2q8iJkhIuvn2zh1mBdU6
a7HsLwmXx2WRGp/Y8FXbKY5ip7AuNi4v5C8H4qmWV6acFEYy7XVbHTlxMH1f
Tz4XBbXY+hL3Zk7U/hVXPMtLQaf87a7rT7jwuqjlU+9KCnqbi/YHX+RBhsQ+
nhYxCtscLjzUNOHHsU9PFJXXU7hk5b91dSM/xALErW6KU4h2+rn+oNkKxLfN
ZBlLUljI5isP/89KhN94okPbRMHDec/MCCGAc3Prg4sVKYxd1FNVCRXEjq/T
U3f0KHj1sR9ck7UGsXfSykj9xXwa4joBC2swbq0bbGBIge/7RGW+uSgyO+J4
ZowolCTkOIdwr4Vwr8J6SzMK8dZCvZwXxMAYc9ASPkrhfvAKbfsgcZgW8HK6
HqOwuURFRa5fHI/diuqqjy/my1H8p8FwA07SmYe97SlcmRP/dJRPAp+nk05/
OU3hh+zrxKQuCRSyNUXGelAgHtZlfkiWAl+178FhTwrCO4TL7Fuk4BQmLqzl
TYFV9VyK54qNkOA+l0b6Uqi4s6F94cpGxPBzFpkGUrj18T+ctd7ScBXd08Yf
sZj3hH9LtusmbNmWLXk9lYLPk+tN+9/Kw2tjRl3dXQorp6bP/GbfgjKRZG++
9EUP6K3l2b8FRixRH6IyKJiFvwzLbN2Cc01u7jFZFByal1Ph9K3I91R/m1BI
Ya9hcrCp9jZsL3lvl15Noaq+PztSSgl+jyt4ftIoyMjWuJYbKaEi/eUzyRoK
KqPrhpR8lXDwai7X/VoK1fEpA331SvCwjn7ysIHCxoE1Jz39lfF0zpwlt53C
psCfF136VRbP+UDa8zEK3VvP27qP70AIz4C5wG8Krc6H4kpl1NHY3P+Pyx8K
4zXcA7ZH1eHs2O8vTafAwvjKn/lRHXev91nETS/u16v6CuuinWBv7VnhzkaH
Rsq4S0zkbnxx7vp3qygdR7z0lXTDAEmVLrWItXQYNXooc30AXOc7x3rF6IhS
m/YW4tAEV0ynTbI4Hcfzlnd8MNCExvOOHTzSdMxoNmQFNmviPvP770EFOvTm
U6yU/+yFR/zX4/e16QgvFqsfMtFGboz83KAOHbo/LT7OeWmjLzIgcaseHaVl
X9SJJG1YhEo0PTego1/ySYNRvzY0fJy0ag7QYf6sIjQlUAecltPSY5Z0WJqs
dJIq1kWK2JphNRc63urfCc89YIAWEecwf1c62ANuPq69YAD+1WVSFefpKBSg
Ga17aIBgPjsbAw86rgT9c9lizgCO81n1Nr507PJbbqGYZ4jtXTsKgoLpeCwy
6RK9xgjVGRZetQl03IiJk/ohbIK7RT15XLcX88hEVETrmcCn0mVQN5GOJjXv
r75+JtjUE2JdlURH/Hp7ev83E0RIPtEsS6NDPEvynvhBUxilc/2Tn01HBeXZ
fmH9QXxJffnw5ms61ie+Gs+rNcPjPO2uhvLFPFJKNJcBM4S+bljDX0FHs2Nl
kwHrIah19F+/VkkHIW33znzXISSuW+UR8p6OKRHFz9W5h2CT7Ex4N9FhERPt
xBF/GD2JYm2W/XT8FtvlE3TRHG8C89YXDdDRc3BCKDbFHCn2cOD9RcfRyy6a
78vNYbH1JPl6mI4Q+b6wFDYL1L/J4d34h4727gOCEzcs8GJgp+bYLB3Ook7T
5x9b4pqKZXbwSgZeLP8UJ8ZmA8XGeP+c3QzsT29/0C1gh9lBv6xRDQaSM6y3
qG6ywzumbbMCwUAU+6B98i47WG6T2fJUkwHDH3YcqSftcOnG82+lOgxsqLrJ
6fPCDrVGrTs/mjBQ5JilHnb8BBw+iEz/PsmAWqBGsNUbe9yuTPJSjWSAelX/
KKX4FBwLQvNioxjwUUk98PLzKaikuA38vsGA2PsWhbGxU2j01rXMucmA8Zp7
NUnSjuCRo3ZvuM3ADR2PCP44RwREG7BxZzBw8n2Hywmv07C3nb75o5iBMtXV
Vgv6Z6AweaQgpHdxfDO298c0XJAyeSH0Wx8DUvxKFSxHXcA9lWqjOMBA486f
6aWBLuib6ufs+sVACscQAt64IGnG227XOAOTHJc55LVdwTGfIEBOM5Ae9mav
ptl5dLG1eh7jn0Dr8Zb6jxVuiBEwV9+5cwJnrdc+TxDxBPevHiHZqxO4e44U
5+Hyw1OmtOq3rgmU0D4HRe6/BK/P9EfV2yeRe2Jb+mjYZZwe8D3mFTEJdaFz
LJPFYZDu0bS/1jmJU84/Wfc7Xsd04q1X7QpT2ONVO90uE4P5mHuHR0OnYKv8
6Zbw2jiIau/cp942Bada6ySfTbfA7BQKGtk0Dd0RFuUG5zsQKc1aOBE4DZt3
N4T26aVC14zWJPBpGmPX3Xn2305HpnzSwBWZGfiNTat0d2agabjI4Lj/DL6F
6JnL6z6EoKPlMs+6GSi+8rfyyc5CmNTTWQOpWbwzKsd5pxysTErSt/acRVj3
B1mT9XlwmKH1NVXOQimSI7W2vwDDdx5V8on+xZpW6cfm4YUInxCeCDrzF7I/
/N8XrHyKI7G7zpRU/MVIn0JRZN0z7BoeVpRbNQebx6yrr/q+wLBct/4y+zmM
DBY25W0uQV3OtXspJXPAfcluA+5XqBp4e8Cdex7eeQuDT1tKMXYyfw/3iXk0
fnxpqNb8Gj9rui5yFc9j/q97WVXjG4z+SuXby7mAmKpbzMT2CsgaCnRrHFvA
zyJRD+uet/B3FODyKFhATmg57/j3SiQ6m1/iZy5gc338X8PPVRgsMFVzPcLE
1WqLo12d72D8pE2LM5OJy2Jxk5u+VaP29AuZ81lMeKsE3rvaWQ39DQlcbY+Y
MCsqPTDaUw3tG2afMnOZ4LofUVA4Ug2Ncx+tdAuZaGnICtWYr8ZW2Sq30DIm
rAd0jplJ0MCXnn+XrZmJbF+9hEBHGq5ZRAWf/cKEfnzEjm5nGrhWnHNobmGi
xJrWqnWehuWX5OTvf2Vi0iOal8uPhjmbB8+1OpmL/yXlBrFXaRgVSaoPHmIi
+c8w/eFjGpwb/AqGhplozTI24yqk4VeYRezBUSb0ilfkOj+noW9itaXkbyai
+nn3byun4UdzdG8Fgwm2LlvNkgYarK+70mQnmUhxV3JZ+4WGr1rG2TFTTFi5
rosL+ErDl0Ke83azTNiMR3zQ/EmD2ZmhgzV/mWhWeNme0U9Do0SNyvZ5JoYP
WfUsH6bhwNdMkcSFxf08otnrOE5DfXToLJPJRLGqzo8aiob/AkxG8T0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
CiF7s3LJDwm0/RO4SqVSASM0LjF5EOD/ACOMdwE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1., 2.}, {0., 0.5460458695068099}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total\"", "\"{N938, pi}\"", "\"{D1232, pi}\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.749204288458746*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"D1232", ",", "outs", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"outs", ",", 
        RowBox[{"decayProducts", "@", "D1232"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1.", ",", "8."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.749797123448081*^9, 3.749797201775045*^9}, {
  3.74979724569499*^9, 3.749797287349615*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
6YnZWQwdSApXOkj6Xz9T99U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749797138692227*^9, 3.749797165688488*^9}, 
   3.749797202257444*^9, {3.749797246195259*^9, 3.749797287669709*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decayProducts", "[", "D1232", "]"}]], "Input",
 CellChangeTimes->{{3.749797172272099*^9, 3.749797176055282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"N938", ",", "pi"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7497971763440866`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"rho", ",", "m"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0.3", ",", "8.", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumberForm", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "&"}], "/@", 
  "pts"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "pts", "]"}]}], "Input",
 CellChangeTimes->{{3.7497973123713217`*^9, 3.7497973524280663`*^9}, {
  3.749797563760664*^9, 3.749797568063794*^9}, {3.749815865956485*^9, 
  3.749815884964171*^9}, {3.749815927371201*^9, 3.749815930010769*^9}, {
  3.7498160114097567`*^9, 3.749816031049779*^9}, {3.749816103744001*^9, 
  3.749816152455579*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox["\<\"0.00203\"\>",
     0.0020306944952960164`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.02214\"\>",
     0.02214240849823168,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.05117\"\>",
     0.051165177475034906`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.08554\"\>",
     0.0855396442996766,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.12347\"\>",
     0.12347063300977568`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.16361\"\>",
     0.16360755418710415`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.20484\"\>",
     0.20484399195854974`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.24627\"\>",
     0.2462747548179144,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.28718\"\>",
     0.28717999884291684`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.32701\"\>",
     0.3270096928149269,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.36536\"\>",
     0.36536406372385466`,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.40197\"\>",
     0.4019712278649323,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.43666\"\>",
     0.436664194763769,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.46936\"\>",
     0.469359060007484,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.50004\"\>",
     0.5000355308614078,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.52872\"\>",
     0.5287203187988415,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.55547\"\>",
     0.5554734894130154,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.58038\"\>",
     0.5803775834956075,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.60353\"\>",
     0.6035291786254074,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.62503\"\>",
     0.6250325077013168,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.64499\"\>",
     0.6449947545783545,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.66352\"\>",
     0.6635226814771059,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.68072\"\>",
     0.6807202908158395,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.69669\"\>",
     0.6966872749449327,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.71152\"\>",
     0.7115180550732765,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.72530\"\>",
     0.725301252693333,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.73812\"\>",
     0.7381194721432806,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.75005\"\>",
     0.7500493017471966,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.76116\"\>",
     0.7611614639190831,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.77152\"\>",
     0.7715210625706811,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.78119\"\>",
     0.7811878900100904,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.79022\"\>",
     0.7902167660679033,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.79866\"\>",
     0.7986578901387701,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.80656\"\>",
     0.8065571927589757,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.81396\"\>",
     0.8139566777233753,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.82089\"\>",
     0.8208947489492845,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.82741\"\>",
     0.8274065186104851,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.83352\"\>",
     0.8335240947152008,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.83928\"\>",
     0.8392768474587767,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.84469\"\>",
     0.8446916544746289,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.84979\"\>",
     0.8497931256337833,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.85460\"\>",
     0.8546038083771722,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.85914\"\>",
     0.8591443747605303,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.86343\"\>",
     0.8634337914896743,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.86749\"\>",
     0.8674894742539444,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.87133\"\>",
     0.871327427649505,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.87496\"\>",
     0.8749623719378871,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.87841\"\>",
     0.8784078578199586,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.88168\"\>",
     0.8816763703297084,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.88478\"\>",
     0.8847794228713843,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.88773\"\>",
     0.8877276423416705,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.89053\"\>",
     0.890530846198362,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.89320\"\>",
     0.8931981122600796,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.89574\"\>",
     0.8957378419490181,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.89816\"\>",
     0.898157817621131,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.90047\"\>",
     0.9004652545657164,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.90267\"\>",
     0.9026668481991222,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.90477\"\>",
     0.9047688169250943,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.90678\"\>",
     0.9067769410868604,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.90870\"\>",
     0.9086965983931811,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91053\"\>",
     0.9105327961618453,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91229\"\>",
     0.9122902006892648,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91397\"\>",
     0.9139731640234275,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91559\"\>",
     0.9155857483893746,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91713\"\>",
     0.917131748491071,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.91861\"\>",
     0.918614711890925,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92004\"\>",
     0.9200379576479227,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92140\"\>",
     0.9214045933771751,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92272\"\>",
     0.9227175308773975,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92398\"\>",
     0.9239795004582587,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92519\"\>",
     0.9251930640864912,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92636\"\>",
     0.9263606274579461,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92748\"\>",
     0.9274844510922796,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92857\"\>",
     0.928566660537574,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.92961\"\>",
     0.9296092557637524,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.93061\"\>",
     0.9306141198160737,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.93158\"\>",
     0.9315830267932006,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ], ",", 
   TagBox[
    InterpretationBox["\<\"0.93252\"\>",
     0.9325176492082479,
     AutoDelete->True],
    NumberForm[#, {6, 5}]& ]}], "}"}]], "Output",
 CellChangeTimes->{{3.749797333481019*^9, 3.749797352711788*^9}, 
   3.7497975685014887`*^9, {3.749815869134089*^9, 3.7498158852058153`*^9}, 
   3.7498159305293016`*^9, {3.7498160117883797`*^9, 3.749816031651835*^9}, {
   3.749816109100053*^9, 3.7498161533604593`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1yw1MzHEcx/H/Yo7oYZOr6ShPrVnkUpyU+9RdD1fnuv+1UW61mDhPU8hD
rgcis6yFqYVphJErz+ahFPPM5Gkex+m4LpfycB7GJMz3+99+++/1e/8+I+Ys
NWS7CYKg+3v+/f9/H5XOqJi7ln1ZSrpAlnRRW5Glktwf3oPaVxnC6sjeiBOv
S7vsp8k+qJDdzr+6q5nsB7VRV+v76QpZBm10gCtVcYscCHOPLat7Yyt5JLwC
rk0Onv2APBpDMiXe57sekYNw6Hv4l4A5T8jBcCjmb7Kfe0YeixSPb1m6zy/I
ISjwCt/xc8Ar8ngsMJlLkoTX5AkQ/Zqt8Z1sORZlPJ+Rc62NHIY908rdVmyz
kSeiwHfLYpn+DTkctmU5IWrhLTkCp8YFut+pZU+CR9Cozu1T7eTJWGJL68y7
wVbAeaxepkpuJ0+B4tSIkktX2JGQD3X7URfhIE/F8vqQ85Y97Cj0brbMnS90
kKPhF6PXLDWyp6FNLPioPcZWovKX62JBLxuomff6yArNu/8uBnofPu/ZWU4W
YlDtf0gitnKPQctTu7V7oJN6LL4qS72vqsnFsTA1RkcNy+euwppZjrORFu4q
FPXZMNz4grsaeaX2W2ckndTVqLqbOWudnCzEIaVMkDrTuMdhcW7fNFkh93gc
PSl1KPdyj4ckR65Zc5l7AiTVFzydbdwTULuxUnq8l3siYo2Nt53+76knQusv
yTg+iSxo8ECo/yDTc9egY6frjsrEPQlVAyrKIou4J+HnhMAInx3ck7G/abjJ
dph7MkLL6laebuKuxW9T7vrd97hrEWTsV3nAxn06Hie+vfDSxX06ejbMHCz2
7aKuQ8259W/cfcjFOvQsbLAMGcU9BfpCD8VaOfcUGK2yg2oldz1Wl7SszdeS
oUd3eVTD6HR+r0dJXFBDUja5RY9tB7JzXTm8F5HvkWkeY+a9iKOeBmd7Ke9F
FFb45EVv5b2IE9W+5vG7eG9ArNnh3ryf9wZYLQFWVz3vDQiOty+5f4b3Bnh5
fu4wNvM+FTU3p6iqrvM+FYbGsIhNrbxPRUf6TYQ+6VL+AQJichQ=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 78.}, {0, 0.9325176492082479}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749797333481019*^9, 3.749797352711788*^9}, 
   3.7497975685014887`*^9, {3.749815869134089*^9, 3.7498158852058153`*^9}, 
   3.7498159305293016`*^9, {3.7498160117883797`*^9, 3.749816031651835*^9}, {
   3.749816109100053*^9, 3.749816153412085*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "pts", "]"}]], "Input",
 CellChangeTimes->{{3.749797335833323*^9, 3.749797337844252*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6986447460144042},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 248.}, {0.7114059189401583, 0.9666293774552405}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749797338205283*^9, 3.749797350330185*^9}, {
   3.7498158730115833`*^9, 3.74981588620026*^9}, 3.7498160135205727`*^9}]
}, Open  ]]
},
WindowSize->{1331, 1135},
WindowMargins->{{Automatic, -4}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 25525, 621, 2233, "Input"],
Cell[CellGroupData[{
Cell[26108, 645, 1836, 41, 143, "Input"],
Cell[27947, 688, 30608, 585, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58592, 1278, 1644, 45, 121, "Input"],
Cell[60239, 1325, 994, 17, 59, "Message"],
Cell[CellGroupData[{
Cell[61258, 1346, 102, 1, 23, "Print"],
Cell[61363, 1349, 100, 1, 23, "Print"]
}, Open  ]],
Cell[61478, 1353, 991, 17, 59, "Message"],
Cell[62472, 1372, 99, 1, 23, "Print"],
Cell[62574, 1375, 101, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62712, 1381, 221, 5, 32, "Input"],
Cell[62936, 1388, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63067, 1394, 256, 7, 32, "Input"],
Cell[63326, 1403, 991, 17, 59, "Message"],
Cell[64320, 1422, 600, 11, 59, "Message"],
Cell[64923, 1435, 993, 17, 59, "Message"],
Cell[65919, 1454, 991, 17, 59, "Message"],
Cell[66913, 1473, 589, 12, 23, "Message"],
Cell[CellGroupData[{
Cell[67527, 1489, 123, 1, 23, "Print"],
Cell[67653, 1492, 122, 1, 23, "Print"],
Cell[67778, 1495, 119, 1, 23, "Print"],
Cell[67900, 1498, 123, 1, 23, "Print"],
Cell[68026, 1501, 125, 1, 23, "Print"],
Cell[68154, 1504, 123, 1, 23, "Print"],
Cell[68280, 1507, 123, 1, 23, "Print"],
Cell[68406, 1510, 123, 1, 23, "Print"],
Cell[68532, 1513, 122, 1, 23, "Print"],
Cell[68657, 1516, 123, 1, 23, "Print"],
Cell[68783, 1519, 125, 1, 23, "Print"],
Cell[68911, 1522, 123, 1, 23, "Print"],
Cell[69037, 1525, 126, 1, 23, "Print"],
Cell[69166, 1528, 124, 1, 23, "Print"],
Cell[69293, 1531, 126, 1, 23, "Print"],
Cell[69422, 1534, 126, 1, 23, "Print"],
Cell[69551, 1537, 126, 1, 23, "Print"],
Cell[69680, 1540, 124, 1, 23, "Print"],
Cell[69807, 1543, 128, 1, 23, "Print"],
Cell[69938, 1546, 124, 1, 23, "Print"]
}, Open  ]],
Cell[70077, 1550, 1042, 18, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71156, 1573, 211, 5, 32, "Input"],
Cell[71370, 1580, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71519, 1586, 419, 8, 32, "Input"],
Cell[71941, 1596, 255, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72233, 1605, 1477, 38, 165, "Input"],
Cell[73713, 1645, 995, 17, 59, "Message"],
Cell[74711, 1664, 993, 17, 59, "Message"],
Cell[75707, 1683, 993, 17, 59, "Message"],
Cell[76703, 1702, 591, 12, 23, "Message"],
Cell[77297, 1716, 599, 11, 59, "Message"],
Cell[77899, 1729, 600, 11, 59, "Message"],
Cell[78502, 1742, 600, 11, 59, "Message"],
Cell[79105, 1755, 589, 12, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79731, 1772, 204, 5, 32, "Input"],
Cell[79938, 1779, 149, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80124, 1786, 731, 20, 55, "Input"],
Cell[80858, 1808, 706592, 12068, 258, "Output"]
}, Open  ]],
Cell[787465, 13879, 97, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[787587, 13884, 94, 1, 32, "Input"],
Cell[787684, 13887, 121616, 2459, 258, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[909337, 16351, 436, 11, 32, "Input"],
Cell[909776, 16364, 3578, 71, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[913391, 16440, 267, 7, 32, "Input"],
Cell[913661, 16449, 1018, 18, 59, "Message"],
Cell[914682, 16469, 7904, 142, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922623, 16616, 87, 1, 55, "Input"],
Cell[922713, 16619, 33325, 613, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956075, 17237, 590, 15, 32, "Input"],
Cell[956668, 17254, 3736, 73, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[960441, 17332, 136, 2, 32, "Input"],
Cell[960580, 17336, 145, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[960762, 17345, 856, 22, 77, "Input"],
Cell[961621, 17369, 11018, 396, 143, "Output"],
Cell[972642, 17767, 2190, 46, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974869, 17818, 133, 2, 32, "Input"],
Cell[975005, 17822, 3869, 73, 239, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
